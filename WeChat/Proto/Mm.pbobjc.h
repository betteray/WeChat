// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mm.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AutoAuthAesReqData;
@class AutoAuthRsaReqData;
@class BaseAuthReqInfo;
@class BaseRequest;
@class BaseResponse;
@class BindOpMobileResponse_NewHostList;
@class BindOpMobileResponse_SafeDeviceList;
@class BindOpMobileResponse_ShowStyle;
@class BuiltinIPList;
@class BuiltinIPList_BuiltinIP;
@class ChatRoomMemberInfo;
@class CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg;
@class CheckResUpdateRequest_ResID;
@class CheckResUpdateRequest_ResID_SubTypeVector;
@class CmdItem;
@class CustomizedInfoNew;
@class DisturbSetting;
@class ECDHKey;
@class ManualAuthAesReqData;
@class ManualAuthRsaReqData;
@class MicroMsgRequestNew;
@class MicroMsgResponseNew;
@class ModContact_GroupMemberList;
@class ModUserInfo;
@class NetworkControl;
@class NewSyncResponse_CmdList;
@class PhoneNumItem;
@class PhoneNumListInfo;
@class SKBuiltinBuffer_t;
@class SKBuiltinString_t;
@class SnsObject;
@class SnsTimeLineResponse_SnsServerConfig;
@class SnsUserInfo;
@class UnifyAuthResponse_AcctSectResp;
@class UnifyAuthResponse_AuthSectResp;
@class UnifyAuthResponse_AuthSectResp_ShowStyleKey;
@class UnifyAuthResponse_NetworkSectResp;
@class UnifyAuthResponse_NetworkSectResp_HostList;
@class UnifyAuthResponse_NetworkSectResp_HostList_Host;
@class UserInfoExt;
@class WTLoginImgReqInfo;
@class WxVerifyCodeReqInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MmRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MmRoot : GPBRootObject
@end

#pragma mark - SKBuiltinBuffer_t

typedef GPB_ENUM(SKBuiltinBuffer_t_FieldNumber) {
  SKBuiltinBuffer_t_FieldNumber_ILen = 1,
  SKBuiltinBuffer_t_FieldNumber_Buffer = 2,
};

@interface SKBuiltinBuffer_t : GPBMessage

@property(nonatomic, readwrite) uint32_t iLen;

@property(nonatomic, readwrite) BOOL hasILen;
@property(nonatomic, readwrite, copy, null_resettable) NSData *buffer;
/** Test to see if @c buffer has been set. */
@property(nonatomic, readwrite) BOOL hasBuffer;

@end

#pragma mark - SKBuiltinString_t

typedef GPB_ENUM(SKBuiltinString_t_FieldNumber) {
  SKBuiltinString_t_FieldNumber_String = 1,
};

@interface SKBuiltinString_t : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *string;
/** Test to see if @c string has been set. */
@property(nonatomic, readwrite) BOOL hasString;

@end

#pragma mark - BaseRequest

typedef GPB_ENUM(BaseRequest_FieldNumber) {
  BaseRequest_FieldNumber_SessionKey = 1,
  BaseRequest_FieldNumber_Uin = 2,
  BaseRequest_FieldNumber_DeviceId = 3,
  BaseRequest_FieldNumber_ClientVersion = 4,
  BaseRequest_FieldNumber_DeviceType = 5,
  BaseRequest_FieldNumber_Scene = 6,
};

@interface BaseRequest : GPBMessage

/** 解密服务器返回封包时使用的aeskey */
@property(nonatomic, readwrite, copy, null_resettable) NSData *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
/** 手机guid长度16,这里取前15字节,以'\\0'结尾 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *deviceId;
/** Test to see if @c deviceId has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceId;

@property(nonatomic, readwrite) uint32_t clientVersion;

@property(nonatomic, readwrite) BOOL hasClientVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSData *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite) uint32_t scene;

@property(nonatomic, readwrite) BOOL hasScene;
@end

#pragma mark - BaseResponse

typedef GPB_ENUM(BaseResponse_FieldNumber) {
  BaseResponse_FieldNumber_Ret = 1,
  BaseResponse_FieldNumber_ErrMsg = 2,
};

@interface BaseResponse : GPBMessage

/** 错误码 */
@property(nonatomic, readwrite) int32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
/** 错误信息 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *errMsg;
/** Test to see if @c errMsg has been set. */
@property(nonatomic, readwrite) BOOL hasErrMsg;

@end

#pragma mark - GetLoginQRCodeRequest

typedef GPB_ENUM(GetLoginQRCodeRequest_FieldNumber) {
  GetLoginQRCodeRequest_FieldNumber_BaseRequest = 1,
  GetLoginQRCodeRequest_FieldNumber_RandomEncryKey = 2,
  GetLoginQRCodeRequest_FieldNumber_Opcode = 3,
  GetLoginQRCodeRequest_FieldNumber_DeviceName = 4,
  GetLoginQRCodeRequest_FieldNumber_UserName = 5,
  GetLoginQRCodeRequest_FieldNumber_HardwareExtra = 6,
  GetLoginQRCodeRequest_FieldNumber_SoftType = 7,
  GetLoginQRCodeRequest_FieldNumber_ExtDevLoginType = 8,
  GetLoginQRCodeRequest_FieldNumber_MsgContextPubKey = 9,
};

/**
 * QRCode获取
 **/
@interface GetLoginQRCodeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

/** iPad 16位 iMac 184位 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

/** 0 */
@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
/** iMac "iMac" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

/** iMac 0, */
@property(nonatomic, readwrite) int32_t hardwareExtra;

@property(nonatomic, readwrite) BOOL hasHardwareExtra;
@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

/** 0 */
@property(nonatomic, readwrite) int32_t extDevLoginType;

@property(nonatomic, readwrite) BOOL hasExtDevLoginType;
/** iMac */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *msgContextPubKey;
/** Test to see if @c msgContextPubKey has been set. */
@property(nonatomic, readwrite) BOOL hasMsgContextPubKey;

@end

#pragma mark - GetLoginQRCodeResponse

typedef GPB_ENUM(GetLoginQRCodeResponse_FieldNumber) {
  GetLoginQRCodeResponse_FieldNumber_BaseResponse = 1,
  GetLoginQRCodeResponse_FieldNumber_Qrcode = 2,
  GetLoginQRCodeResponse_FieldNumber_Uuid = 3,
  GetLoginQRCodeResponse_FieldNumber_CheckTime = 4,
  GetLoginQRCodeResponse_FieldNumber_NotifyKey = 5,
  GetLoginQRCodeResponse_FieldNumber_ExpiredTime = 6,
  GetLoginQRCodeResponse_FieldNumber_BlueToothBroadCastUuid = 7,
  GetLoginQRCodeResponse_FieldNumber_BlueToothBroadCastContent = 8,
};

@interface GetLoginQRCodeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *qrcode;
/** Test to see if @c qrcode has been set. */
@property(nonatomic, readwrite) BOOL hasQrcode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) int32_t checkTime;

@property(nonatomic, readwrite) BOOL hasCheckTime;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *notifyKey;
/** Test to see if @c notifyKey has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyKey;

@property(nonatomic, readwrite) int32_t expiredTime;

@property(nonatomic, readwrite) BOOL hasExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *blueToothBroadCastUuid;
/** Test to see if @c blueToothBroadCastUuid has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastUuid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *blueToothBroadCastContent;
/** Test to see if @c blueToothBroadCastContent has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastContent;

@end

#pragma mark - CheckLoginQRCodeRequest

typedef GPB_ENUM(CheckLoginQRCodeRequest_FieldNumber) {
  CheckLoginQRCodeRequest_FieldNumber_BaseRequest = 1,
  CheckLoginQRCodeRequest_FieldNumber_RandomEncryKey = 2,
  CheckLoginQRCodeRequest_FieldNumber_Uuid = 3,
  CheckLoginQRCodeRequest_FieldNumber_TimeStamp = 4,
  CheckLoginQRCodeRequest_FieldNumber_Opcode = 5,
};

/**
 * QRCode Check
 **/
@interface CheckLoginQRCodeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) int32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - CheckLoginQRCodeResponse

typedef GPB_ENUM(CheckLoginQRCodeResponse_FieldNumber) {
  CheckLoginQRCodeResponse_FieldNumber_BaseResponse = 1,
  CheckLoginQRCodeResponse_FieldNumber_NotifyPkg = 3,
};

@interface CheckLoginQRCodeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg *notifyPkg;
/** Test to see if @c notifyPkg has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyPkg;

@end

#pragma mark - CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg

typedef GPB_ENUM(CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_FieldNumber) {
  CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_FieldNumber_NotifyData = 1,
  CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_FieldNumber_Opcode = 2,
};

@interface CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg : GPBMessage

/** 是bytes,需notifykey不解压aes解密一次,解密后再序列化成下面的对象 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *notifyData;
/** Test to see if @c notifyData has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyData;

@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - NotifyMsg

typedef GPB_ENUM(NotifyMsg_FieldNumber) {
  NotifyMsg_FieldNumber_Uuid = 1,
  NotifyMsg_FieldNumber_State = 2,
  NotifyMsg_FieldNumber_Wxid = 3,
  NotifyMsg_FieldNumber_Wxnewpass = 4,
  NotifyMsg_FieldNumber_Avatar = 5,
  NotifyMsg_FieldNumber_PushLoginURLExpiredTime = 6,
  NotifyMsg_FieldNumber_NickName = 7,
  NotifyMsg_FieldNumber_EffectiveTime = 8,
  NotifyMsg_FieldNumber_T10 = 10,
  NotifyMsg_FieldNumber_Devices = 11,
};

@interface NotifyMsg : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) int32_t state;

@property(nonatomic, readwrite) BOOL hasState;
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxid;
/** Test to see if @c wxid has been set. */
@property(nonatomic, readwrite) BOOL hasWxid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *wxnewpass;
/** Test to see if @c wxnewpass has been set. */
@property(nonatomic, readwrite) BOOL hasWxnewpass;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

@property(nonatomic, readwrite) int32_t pushLoginURLExpiredTime;

@property(nonatomic, readwrite) BOOL hasPushLoginURLExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) int32_t effectiveTime;

@property(nonatomic, readwrite) BOOL hasEffectiveTime;
@property(nonatomic, readwrite) int32_t t10;

@property(nonatomic, readwrite) BOOL hasT10;
@property(nonatomic, readwrite, copy, null_resettable) NSString *devices;
/** Test to see if @c devices has been set. */
@property(nonatomic, readwrite) BOOL hasDevices;

@end

#pragma mark - ECDHKey

typedef GPB_ENUM(ECDHKey_FieldNumber) {
  ECDHKey_FieldNumber_Nid = 1,
  ECDHKey_FieldNumber_Key = 2,
};

@interface ECDHKey : GPBMessage

/** 椭圆曲线类型 */
@property(nonatomic, readwrite) uint32_t nid;

@property(nonatomic, readwrite) BOOL hasNid;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@end

#pragma mark - ManualAuthRsaReqData

typedef GPB_ENUM(ManualAuthRsaReqData_FieldNumber) {
  ManualAuthRsaReqData_FieldNumber_RandomEncryKey = 1,
  ManualAuthRsaReqData_FieldNumber_CliPubEcdhkey = 2,
  ManualAuthRsaReqData_FieldNumber_UserName = 3,
  ManualAuthRsaReqData_FieldNumber_Pwd = 4,
  ManualAuthRsaReqData_FieldNumber_Pwd2 = 5,
};

/**
 * 登录请求--账号信息
 **/
@interface ManualAuthRsaReqData : GPBMessage

/** 仅用于本次登录请求,后续通讯使用的aeskey根据服务器返回的数据做ECDH生成 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *cliPubEcdhkey;
/** Test to see if @c cliPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasCliPubEcdhkey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2;
/** Test to see if @c pwd2 has been set. */
@property(nonatomic, readwrite) BOOL hasPwd2;

@end

#pragma mark - ManualAuthAesReqData

typedef GPB_ENUM(ManualAuthAesReqData_FieldNumber) {
  ManualAuthAesReqData_FieldNumber_BaseRequest = 1,
  ManualAuthAesReqData_FieldNumber_BaseReqInfo = 2,
  ManualAuthAesReqData_FieldNumber_Imei = 3,
  ManualAuthAesReqData_FieldNumber_SoftType = 4,
  ManualAuthAesReqData_FieldNumber_BuiltinIpseq = 5,
  ManualAuthAesReqData_FieldNumber_ClientSeqId = 6,
  ManualAuthAesReqData_FieldNumber_ClientSeqIdsign = 7,
  ManualAuthAesReqData_FieldNumber_DeviceName = 8,
  ManualAuthAesReqData_FieldNumber_DeviceType = 9,
  ManualAuthAesReqData_FieldNumber_Language = 10,
  ManualAuthAesReqData_FieldNumber_TimeZone = 11,
  ManualAuthAesReqData_FieldNumber_Channel = 13,
  ManualAuthAesReqData_FieldNumber_TimeStamp = 14,
  ManualAuthAesReqData_FieldNumber_DeviceBrand = 15,
  ManualAuthAesReqData_FieldNumber_DeviceModel = 16,
  ManualAuthAesReqData_FieldNumber_Ostype = 17,
  ManualAuthAesReqData_FieldNumber_RealCountry = 18,
  ManualAuthAesReqData_FieldNumber_BundleId = 19,
  ManualAuthAesReqData_FieldNumber_AdSource = 20,
  ManualAuthAesReqData_FieldNumber_IphoneVer = 21,
  ManualAuthAesReqData_FieldNumber_InputType = 22,
  ManualAuthAesReqData_FieldNumber_ClientCheckData = 23,
};

/**
 * 登录请求--设备信息
 **/
@interface ManualAuthAesReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) BaseAuthReqInfo *baseReqInfo;
/** Test to see if @c baseReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasBaseReqInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

/** iPad: <softtype><k3>11.4.1</k3><k9>iPad</k9></softtype>  ，iMac不需要此字段 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

/** 0 */
@property(nonatomic, readwrite) int32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
/** iPad: dd09ae95fe48164451be954cd1871cb7-1537165222, iMac: "" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

/** android only */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqIdsign;
/** Test to see if @c clientSeqIdsign has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqIdsign;

/** iPad:ccc iPad, iMac: ray的iMac */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

/** iPad iMac18,2 android 不一样 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

/** zh_CN */
@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

/** 8.00 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** iPad:3d  iMac:0 */
@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite) BOOL hasChannel;
/** 1537178341 */
@property(nonatomic, readwrite) int32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
/** Apple */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceBrand;
/** Test to see if @c deviceBrand has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceBrand;

/** android only */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;
/** Test to see if @c deviceModel has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceModel;

/** iMac "Version 10.13.6 (Build 17G65)" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ostype;
/** Test to see if @c ostype has been set. */
@property(nonatomic, readwrite) BOOL hasOstype;

/** CN */
@property(nonatomic, readwrite, copy, null_resettable) NSString *realCountry;
/** Test to see if @c realCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRealCountry;

/** iPad:com.tencent.xin , iMac:com.tencent.xinWeChat **** ios only */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bundleId;
/** Test to see if @c bundleId has been set. */
@property(nonatomic, readwrite) BOOL hasBundleId;

/** iPad:"AAA7AE28-7620-431D-8B4C-7FB4F67AA45E", iMad: "" **** ios only **** */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adSource;
/** Test to see if @c adSource has been set. */
@property(nonatomic, readwrite) BOOL hasAdSource;

/** iPad:iPad4,4 , iMac:iMac18,2 **** ios only **** */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iphoneVer;
/** Test to see if @c iphoneVer has been set. */
@property(nonatomic, readwrite) BOOL hasIphoneVer;

/** 2 */
@property(nonatomic, readwrite) int32_t inputType;

@property(nonatomic, readwrite) BOOL hasInputType;
/** **** ios only **** */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *clientCheckData;
/** Test to see if @c clientCheckData has been set. */
@property(nonatomic, readwrite) BOOL hasClientCheckData;

@end

#pragma mark - ManualAuthRequest

typedef GPB_ENUM(ManualAuthRequest_FieldNumber) {
  ManualAuthRequest_FieldNumber_RsaReqData = 1,
  ManualAuthRequest_FieldNumber_AesReqData = 2,
};

@interface ManualAuthRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ManualAuthRsaReqData *rsaReqData;
/** Test to see if @c rsaReqData has been set. */
@property(nonatomic, readwrite) BOOL hasRsaReqData;

@property(nonatomic, readwrite, strong, null_resettable) ManualAuthAesReqData *aesReqData;
/** Test to see if @c aesReqData has been set. */
@property(nonatomic, readwrite) BOOL hasAesReqData;

@end

#pragma mark - AutoAuthRsaReqData

typedef GPB_ENUM(AutoAuthRsaReqData_FieldNumber) {
  AutoAuthRsaReqData_FieldNumber_AesEncryptKey = 2,
  AutoAuthRsaReqData_FieldNumber_CliPubEcdhkey = 3,
};

/**
 * 自动登录rsa部分
 **/
@interface AutoAuthRsaReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *aesEncryptKey;
/** Test to see if @c aesEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasAesEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *cliPubEcdhkey;
/** Test to see if @c cliPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasCliPubEcdhkey;

@end

#pragma mark - WTLoginImgReqInfo

typedef GPB_ENUM(WTLoginImgReqInfo_FieldNumber) {
  WTLoginImgReqInfo_FieldNumber_ImgSid = 1,
  WTLoginImgReqInfo_FieldNumber_ImgCode = 2,
  WTLoginImgReqInfo_FieldNumber_ImgEncryptKey = 3,
  WTLoginImgReqInfo_FieldNumber_Ksid = 4,
};

@interface WTLoginImgReqInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgCode;
/** Test to see if @c imgCode has been set. */
@property(nonatomic, readwrite) BOOL hasImgCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@end

#pragma mark - WxVerifyCodeReqInfo

typedef GPB_ENUM(WxVerifyCodeReqInfo_FieldNumber) {
  WxVerifyCodeReqInfo_FieldNumber_VerifySignature = 1,
  WxVerifyCodeReqInfo_FieldNumber_VerifyContent = 2,
};

@interface WxVerifyCodeReqInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyContent;
/** Test to see if @c verifyContent has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyContent;

@end

#pragma mark - BaseAuthReqInfo

typedef GPB_ENUM(BaseAuthReqInfo_FieldNumber) {
  BaseAuthReqInfo_FieldNumber_WtloginReqBuff = 1,
  BaseAuthReqInfo_FieldNumber_WtloginImgReqInfo = 2,
  BaseAuthReqInfo_FieldNumber_WxVerifyCodeReqInfo = 3,
  BaseAuthReqInfo_FieldNumber_CliDbencryptKey = 4,
  BaseAuthReqInfo_FieldNumber_CliDbencryptInfo = 5,
  BaseAuthReqInfo_FieldNumber_AuthReqFlag = 6,
  BaseAuthReqInfo_FieldNumber_AuthTicket = 7,
};

@interface BaseAuthReqInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginReqBuff;
/** Test to see if @c wtloginReqBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginReqBuff;

@property(nonatomic, readwrite, strong, null_resettable) WTLoginImgReqInfo *wtloginImgReqInfo;
/** Test to see if @c wtloginImgReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginImgReqInfo;

@property(nonatomic, readwrite, strong, null_resettable) WxVerifyCodeReqInfo *wxVerifyCodeReqInfo;
/** Test to see if @c wxVerifyCodeReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWxVerifyCodeReqInfo;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptKey;
/** Test to see if @c cliDbencryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptInfo;
/** Test to see if @c cliDbencryptInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptInfo;

@property(nonatomic, readwrite) uint32_t authReqFlag;

@property(nonatomic, readwrite) BOOL hasAuthReqFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@end

#pragma mark - AutoAuthAesReqData

typedef GPB_ENUM(AutoAuthAesReqData_FieldNumber) {
  AutoAuthAesReqData_FieldNumber_BaseRequest = 1,
  AutoAuthAesReqData_FieldNumber_BaseReqInfo = 2,
  AutoAuthAesReqData_FieldNumber_AutoAuthKey = 3,
  AutoAuthAesReqData_FieldNumber_Imei = 4,
  AutoAuthAesReqData_FieldNumber_SoftType = 5,
  AutoAuthAesReqData_FieldNumber_BuiltinIpseq = 6,
  AutoAuthAesReqData_FieldNumber_ClientSeqId = 7,
  AutoAuthAesReqData_FieldNumber_Signature = 8,
  AutoAuthAesReqData_FieldNumber_DeviceName = 9,
  AutoAuthAesReqData_FieldNumber_DeviceType = 10,
  AutoAuthAesReqData_FieldNumber_Language = 11,
  AutoAuthAesReqData_FieldNumber_TimeZone = 12,
  AutoAuthAesReqData_FieldNumber_Channel = 13,
  AutoAuthAesReqData_FieldNumber_ClientCheckData = 14,
};

@interface AutoAuthAesReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) BaseAuthReqInfo *baseReqInfo;
/** Test to see if @c baseReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasBaseReqInfo;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

@property(nonatomic, readwrite) uint32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

@property(nonatomic, readwrite) uint32_t channel;

@property(nonatomic, readwrite) BOOL hasChannel;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *clientCheckData;
/** Test to see if @c clientCheckData has been set. */
@property(nonatomic, readwrite) BOOL hasClientCheckData;

@end

#pragma mark - AutoAuthRequest

typedef GPB_ENUM(AutoAuthRequest_FieldNumber) {
  AutoAuthRequest_FieldNumber_RsaReqData = 1,
  AutoAuthRequest_FieldNumber_AesReqData = 2,
};

@interface AutoAuthRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AutoAuthRsaReqData *rsaReqData;
/** Test to see if @c rsaReqData has been set. */
@property(nonatomic, readwrite) BOOL hasRsaReqData;

@property(nonatomic, readwrite, strong, null_resettable) AutoAuthAesReqData *aesReqData;
/** Test to see if @c aesReqData has been set. */
@property(nonatomic, readwrite) BOOL hasAesReqData;

@end

#pragma mark - NetworkControl

typedef GPB_ENUM(NetworkControl_FieldNumber) {
  NetworkControl_FieldNumber_PortList = 1,
  NetworkControl_FieldNumber_TimeoutList = 2,
  NetworkControl_FieldNumber_MinNoopInterval = 3,
  NetworkControl_FieldNumber_MaxNoopInterval = 4,
  NetworkControl_FieldNumber_TypingInterval = 5,
  NetworkControl_FieldNumber_NoopIntervalTime = 7,
};

@interface NetworkControl : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portList;
/** Test to see if @c portList has been set. */
@property(nonatomic, readwrite) BOOL hasPortList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeoutList;
/** Test to see if @c timeoutList has been set. */
@property(nonatomic, readwrite) BOOL hasTimeoutList;

@property(nonatomic, readwrite) int32_t minNoopInterval;

@property(nonatomic, readwrite) BOOL hasMinNoopInterval;
@property(nonatomic, readwrite) int32_t maxNoopInterval;

@property(nonatomic, readwrite) BOOL hasMaxNoopInterval;
@property(nonatomic, readwrite) int32_t typingInterval;

@property(nonatomic, readwrite) BOOL hasTypingInterval;
@property(nonatomic, readwrite) int32_t noopIntervalTime;

@property(nonatomic, readwrite) BOOL hasNoopIntervalTime;
@end

#pragma mark - BuiltinIPList

typedef GPB_ENUM(BuiltinIPList_FieldNumber) {
  BuiltinIPList_FieldNumber_LongConnectIpcount = 1,
  BuiltinIPList_FieldNumber_ShortConnectIpcount = 2,
  BuiltinIPList_FieldNumber_LongConnectIplistArray = 3,
  BuiltinIPList_FieldNumber_ShortConnectIplistArray = 4,
  BuiltinIPList_FieldNumber_Seq = 5,
};

@interface BuiltinIPList : GPBMessage

@property(nonatomic, readwrite) int32_t longConnectIpcount;

@property(nonatomic, readwrite) BOOL hasLongConnectIpcount;
@property(nonatomic, readwrite) int32_t shortConnectIpcount;

@property(nonatomic, readwrite) BOOL hasShortConnectIpcount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BuiltinIPList_BuiltinIP*> *longConnectIplistArray;
/** The number of items in @c longConnectIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger longConnectIplistArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BuiltinIPList_BuiltinIP*> *shortConnectIplistArray;
/** The number of items in @c shortConnectIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shortConnectIplistArray_Count;

@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite) BOOL hasSeq;
@end

#pragma mark - BuiltinIPList_BuiltinIP

typedef GPB_ENUM(BuiltinIPList_BuiltinIP_FieldNumber) {
  BuiltinIPList_BuiltinIP_FieldNumber_Type = 1,
  BuiltinIPList_BuiltinIP_FieldNumber_Port = 2,
  BuiltinIPList_BuiltinIP_FieldNumber_Ip = 3,
  BuiltinIPList_BuiltinIP_FieldNumber_Domain = 4,
};

@interface BuiltinIPList_BuiltinIP : GPBMessage

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) int32_t port;

@property(nonatomic, readwrite) BOOL hasPort;
@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;
/** Test to see if @c ip has been set. */
@property(nonatomic, readwrite) BOOL hasIp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *domain;
/** Test to see if @c domain has been set. */
@property(nonatomic, readwrite) BOOL hasDomain;

@end

#pragma mark - UnifyAuthResponse

typedef GPB_ENUM(UnifyAuthResponse_FieldNumber) {
  UnifyAuthResponse_FieldNumber_BaseResponse = 1,
  UnifyAuthResponse_FieldNumber_UnifyAuthSectFlag = 2,
  UnifyAuthResponse_FieldNumber_AuthSectResp = 3,
  UnifyAuthResponse_FieldNumber_AcctSectResp = 4,
  UnifyAuthResponse_FieldNumber_NetworkSectResp = 5,
};

/**
 * 登录结果
 **/
@interface UnifyAuthResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t unifyAuthSectFlag;

@property(nonatomic, readwrite) BOOL hasUnifyAuthSectFlag;
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_AuthSectResp *authSectResp;
/** Test to see if @c authSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasAuthSectResp;

/** 登录成功后返回账号信息 */
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_AcctSectResp *acctSectResp;
/** Test to see if @c acctSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasAcctSectResp;

/** dns信息 */
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_NetworkSectResp *networkSectResp;
/** Test to see if @c networkSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkSectResp;

@end

#pragma mark - UnifyAuthResponse_AuthSectResp

typedef GPB_ENUM(UnifyAuthResponse_AuthSectResp_FieldNumber) {
  UnifyAuthResponse_AuthSectResp_FieldNumber_Uin = 1,
  UnifyAuthResponse_AuthSectResp_FieldNumber_SvrPubEcdhkey = 2,
  UnifyAuthResponse_AuthSectResp_FieldNumber_SessionKey = 3,
  UnifyAuthResponse_AuthSectResp_FieldNumber_AutoAuthKey = 4,
  UnifyAuthResponse_AuthSectResp_FieldNumber_WtloginRspBuffFlag = 5,
  UnifyAuthResponse_AuthSectResp_FieldNumber_ShowStyle = 15,
  UnifyAuthResponse_AuthSectResp_FieldNumber_SmsTicket = 16,
  UnifyAuthResponse_AuthSectResp_FieldNumber_AuthResultFlag = 19,
  UnifyAuthResponse_AuthSectResp_FieldNumber_Fsurl = 20,
  UnifyAuthResponse_AuthSectResp_FieldNumber_ServerTime = 22,
};

@interface UnifyAuthResponse_AuthSectResp : GPBMessage

@property(nonatomic, readwrite) int32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *svrPubEcdhkey;
/** Test to see if @c svrPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasSvrPubEcdhkey;

/** 加密的sessionKey 需要使用ECDH握手后的密钥做AES解密得到最终长16字节的aeskey */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@property(nonatomic, readwrite) int32_t wtloginRspBuffFlag;

@property(nonatomic, readwrite) BOOL hasWtloginRspBuffFlag;
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_AuthSectResp_ShowStyleKey *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

/** 需要短信授权时的ticket,用于后续请求验证码以及发送验证码 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *smsTicket;
/** Test to see if @c smsTicket has been set. */
@property(nonatomic, readwrite) BOOL hasSmsTicket;

@property(nonatomic, readwrite) int32_t authResultFlag;

@property(nonatomic, readwrite) BOOL hasAuthResultFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fsurl;
/** Test to see if @c fsurl has been set. */
@property(nonatomic, readwrite) BOOL hasFsurl;

@property(nonatomic, readwrite) int32_t serverTime;

@property(nonatomic, readwrite) BOOL hasServerTime;
@end

#pragma mark - UnifyAuthResponse_AuthSectResp_ShowStyleKey

typedef GPB_ENUM(UnifyAuthResponse_AuthSectResp_ShowStyleKey_FieldNumber) {
  UnifyAuthResponse_AuthSectResp_ShowStyleKey_FieldNumber_KeyCount = 1,
};

@interface UnifyAuthResponse_AuthSectResp_ShowStyleKey : GPBMessage

@property(nonatomic, readwrite) int32_t keyCount;

@property(nonatomic, readwrite) BOOL hasKeyCount;
@end

#pragma mark - UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal

typedef GPB_ENUM(UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal_FieldNumber) {
  UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal_FieldNumber_Key = 1,
  UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal_FieldNumber_Val = 2,
};

@interface UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal : GPBMessage

@property(nonatomic, readwrite) int32_t key;

@property(nonatomic, readwrite) BOOL hasKey;
@property(nonatomic, readwrite, copy, null_resettable) NSString *val;
/** Test to see if @c val has been set. */
@property(nonatomic, readwrite) BOOL hasVal;

@end

#pragma mark - UnifyAuthResponse_AcctSectResp

typedef GPB_ENUM(UnifyAuthResponse_AcctSectResp_FieldNumber) {
  UnifyAuthResponse_AcctSectResp_FieldNumber_UserName = 1,
  UnifyAuthResponse_AcctSectResp_FieldNumber_NickName = 2,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindUin = 3,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindMail = 4,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindMobile = 5,
  UnifyAuthResponse_AcctSectResp_FieldNumber_Alias = 6,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindEmail = 7,
  UnifyAuthResponse_AcctSectResp_FieldNumber_Status = 8,
  UnifyAuthResponse_AcctSectResp_FieldNumber_PluginFlag = 9,
  UnifyAuthResponse_AcctSectResp_FieldNumber_RegType = 10,
  UnifyAuthResponse_AcctSectResp_FieldNumber_DeviceInfoXml = 11,
  UnifyAuthResponse_AcctSectResp_FieldNumber_SafeDevice = 12,
  UnifyAuthResponse_AcctSectResp_FieldNumber_OfficialUserName = 13,
  UnifyAuthResponse_AcctSectResp_FieldNumber_OfficialNickName = 14,
  UnifyAuthResponse_AcctSectResp_FieldNumber_PushMailStatus = 15,
  UnifyAuthResponse_AcctSectResp_FieldNumber_FsURL = 16,
};

@interface UnifyAuthResponse_AcctSectResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) int32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *bindMail;
/** Test to see if @c bindMail has been set. */
@property(nonatomic, readwrite) BOOL hasBindMail;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindMobile;
/** Test to see if @c bindMobile has been set. */
@property(nonatomic, readwrite) BOOL hasBindMobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) int32_t pluginFlag;

@property(nonatomic, readwrite) BOOL hasPluginFlag;
@property(nonatomic, readwrite) int32_t regType;

@property(nonatomic, readwrite) BOOL hasRegType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceInfoXml;
/** Test to see if @c deviceInfoXml has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceInfoXml;

@property(nonatomic, readwrite) int32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
/** "weixin" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *officialUserName;
/** Test to see if @c officialUserName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialUserName;

/** "微信团队" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *officialNickName;
/** Test to see if @c officialNickName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialNickName;

@property(nonatomic, readwrite) int32_t pushMailStatus;

@property(nonatomic, readwrite) BOOL hasPushMailStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fsURL;
/** Test to see if @c fsURL has been set. */
@property(nonatomic, readwrite) BOOL hasFsURL;

@end

#pragma mark - UnifyAuthResponse_NetworkSectResp

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_FieldNumber_NewHostList = 1,
  UnifyAuthResponse_NetworkSectResp_FieldNumber_NetworkControl = 2,
  UnifyAuthResponse_NetworkSectResp_FieldNumber_BuiltinIplist = 3,
};

@interface UnifyAuthResponse_NetworkSectResp : GPBMessage

/** 域名重定向信息 */
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_NetworkSectResp_HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@end

#pragma mark - UnifyAuthResponse_NetworkSectResp_HostList

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_HostList_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_HostList_FieldNumber_Count = 1,
  UnifyAuthResponse_NetworkSectResp_HostList_FieldNumber_ListArray = 2,
};

@interface UnifyAuthResponse_NetworkSectResp_HostList : GPBMessage

/** host cnt */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UnifyAuthResponse_NetworkSectResp_HostList_Host*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - UnifyAuthResponse_NetworkSectResp_HostList_Host

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber_Origin = 1,
  UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber_Substitute = 2,
  UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber_Priority = 3,
};

@interface UnifyAuthResponse_NetworkSectResp_HostList_Host : GPBMessage

/** host */
@property(nonatomic, readwrite, copy, null_resettable) NSString *origin;
/** Test to see if @c origin has been set. */
@property(nonatomic, readwrite) BOOL hasOrigin;

/** redirect_host */
@property(nonatomic, readwrite, copy, null_resettable) NSString *substitute;
/** Test to see if @c substitute has been set. */
@property(nonatomic, readwrite) BOOL hasSubstitute;

@property(nonatomic, readwrite) int32_t priority;

@property(nonatomic, readwrite) BOOL hasPriority;
@end

#pragma mark - NewInitRequest

typedef GPB_ENUM(NewInitRequest_FieldNumber) {
  NewInitRequest_FieldNumber_BaseRequest = 1,
  NewInitRequest_FieldNumber_UserName = 2,
  NewInitRequest_FieldNumber_CurrentSynckey = 3,
  NewInitRequest_FieldNumber_MaxSynckey = 4,
  NewInitRequest_FieldNumber_Language = 5,
};

/**
 * 新设备第一次登录初始化请求
 **/
@interface NewInitRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

/** 首次初始化时sync_key_cur = '' */
@property(nonatomic, readwrite, copy, null_resettable) NSData *currentSynckey;
/** Test to see if @c currentSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentSynckey;

/** 首次初始化时sync_key_max = '' */
@property(nonatomic, readwrite, copy, null_resettable) NSData *maxSynckey;
/** Test to see if @c maxSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasMaxSynckey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@end

#pragma mark - AddMsg

typedef GPB_ENUM(AddMsg_FieldNumber) {
  AddMsg_FieldNumber_MsgId = 1,
  AddMsg_FieldNumber_FromUserName = 2,
  AddMsg_FieldNumber_ToUserName = 3,
  AddMsg_FieldNumber_MsgType = 4,
  AddMsg_FieldNumber_Content = 5,
  AddMsg_FieldNumber_Status = 6,
  AddMsg_FieldNumber_ImgStatus = 7,
  AddMsg_FieldNumber_ImgBuf = 8,
  AddMsg_FieldNumber_CreateTime = 9,
  AddMsg_FieldNumber_MsgSource = 10,
  AddMsg_FieldNumber_PushContent = 11,
  AddMsg_FieldNumber_NewMsgId = 12,
  AddMsg_FieldNumber_MsgSeq = 13,
};

/**
 * 服务器返回消息(newinit/newsync)
 **/
@interface AddMsg : GPBMessage

@property(nonatomic, readwrite) uint32_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
/** 发送方wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *fromUserName;
/** Test to see if @c fromUserName has been set. */
@property(nonatomic, readwrite) BOOL hasFromUserName;

/** 接收方wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *toUserName;
/** Test to see if @c toUserName has been set. */
@property(nonatomic, readwrite) BOOL hasToUserName;

/** 消息类型:9999==>系统垃圾消息,10002==>sysmsg(系统垃圾消息),49==>appmsg,1==>文字消息,10000==>系统提示 */
@property(nonatomic, readwrite) int32_t msgType;

@property(nonatomic, readwrite) BOOL hasMsgType;
/** 原始消息内容,需要根据不同消息类型解析 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) int32_t imgStatus;

@property(nonatomic, readwrite) BOOL hasImgStatus;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

/** 消息发送时间 */
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
/** 消息附加内容(群是否屏蔽,群人数,群at功能) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgSource;
/** Test to see if @c msgSource has been set. */
@property(nonatomic, readwrite) BOOL hasMsgSource;

/** 推送内容(xml格式) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pushContent;
/** Test to see if @c pushContent has been set. */
@property(nonatomic, readwrite) BOOL hasPushContent;

/** 每条消息的唯一id */
@property(nonatomic, readwrite) int64_t newMsgId;

@property(nonatomic, readwrite) BOOL hasNewMsgId;
/** sync key中的id */
@property(nonatomic, readwrite) int32_t msgSeq;

@property(nonatomic, readwrite) BOOL hasMsgSeq;
@end

#pragma mark - SnsUserInfo

typedef GPB_ENUM(SnsUserInfo_FieldNumber) {
  SnsUserInfo_FieldNumber_SnsFlag = 1,
  SnsUserInfo_FieldNumber_SnsBgimgId = 2,
  SnsUserInfo_FieldNumber_SnsBgobjectId = 3,
  SnsUserInfo_FieldNumber_SnsFlagEx = 4,
};

@interface SnsUserInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t snsFlag;

@property(nonatomic, readwrite) BOOL hasSnsFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *snsBgimgId;
/** Test to see if @c snsBgimgId has been set. */
@property(nonatomic, readwrite) BOOL hasSnsBgimgId;

@property(nonatomic, readwrite) uint64_t snsBgobjectId;

@property(nonatomic, readwrite) BOOL hasSnsBgobjectId;
@property(nonatomic, readwrite) uint32_t snsFlagEx;

@property(nonatomic, readwrite) BOOL hasSnsFlagEx;
@end

#pragma mark - CustomizedInfoNew

@interface CustomizedInfoNew : GPBMessage

@end

#pragma mark - LinkedinContactItem

@interface LinkedinContactItem : GPBMessage

@end

#pragma mark - ChatRoomMemberInfo

typedef GPB_ENUM(ChatRoomMemberInfo_FieldNumber) {
  ChatRoomMemberInfo_FieldNumber_UserName = 1,
  ChatRoomMemberInfo_FieldNumber_NickName = 2,
  ChatRoomMemberInfo_FieldNumber_DisplayName = 3,
  ChatRoomMemberInfo_FieldNumber_BigHeadImgURL = 4,
  ChatRoomMemberInfo_FieldNumber_SmallHeadImgURL = 5,
  ChatRoomMemberInfo_FieldNumber_ChatroomMemberFlag = 6,
  ChatRoomMemberInfo_FieldNumber_InviterUserName = 7,
};

@interface ChatRoomMemberInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;
/** Test to see if @c displayName has been set. */
@property(nonatomic, readwrite) BOOL hasDisplayName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bigHeadImgURL;
/** Test to see if @c bigHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasBigHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallHeadImgURL;
/** Test to see if @c smallHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasSmallHeadImgURL;

@property(nonatomic, readwrite) uint32_t chatroomMemberFlag;

@property(nonatomic, readwrite) BOOL hasChatroomMemberFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviterUserName;
/** Test to see if @c inviterUserName has been set. */
@property(nonatomic, readwrite) BOOL hasInviterUserName;

@end

#pragma mark - PhoneNumItem

typedef GPB_ENUM(PhoneNumItem_FieldNumber) {
  PhoneNumItem_FieldNumber_PhoneNum = 1,
};

@interface PhoneNumItem : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *phoneNum;
/** Test to see if @c phoneNum has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneNum;

@end

#pragma mark - PhoneNumListInfo

typedef GPB_ENUM(PhoneNumListInfo_FieldNumber) {
  PhoneNumListInfo_FieldNumber_Count = 1,
  PhoneNumListInfo_FieldNumber_PhoneNumListArray = 2,
};

@interface PhoneNumListInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PhoneNumItem*> *phoneNumListArray;
/** The number of items in @c phoneNumListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger phoneNumListArray_Count;

@end

#pragma mark - ModContact

typedef GPB_ENUM(ModContact_FieldNumber) {
  ModContact_FieldNumber_UserName = 1,
  ModContact_FieldNumber_NickName = 2,
  ModContact_FieldNumber_Pyinitial = 3,
  ModContact_FieldNumber_QuanPin = 4,
  ModContact_FieldNumber_Sex = 5,
  ModContact_FieldNumber_ImgBuf = 6,
  ModContact_FieldNumber_BitMask = 7,
  ModContact_FieldNumber_BitVal = 8,
  ModContact_FieldNumber_ImgFlag = 9,
  ModContact_FieldNumber_Remark = 10,
  ModContact_FieldNumber_RealShortPy = 11,
  ModContact_FieldNumber_RealQuanpin = 12,
  ModContact_FieldNumber_ContactType = 13,
  ModContact_FieldNumber_RoomInfoCount = 14,
  ModContact_FieldNumber_Tag16 = 16,
  ModContact_FieldNumber_ChatRoomNotify = 17,
  ModContact_FieldNumber_AddContactScene = 18,
  ModContact_FieldNumber_Province = 19,
  ModContact_FieldNumber_City = 20,
  ModContact_FieldNumber_Signature = 21,
  ModContact_FieldNumber_PersonalCard = 22,
  ModContact_FieldNumber_Tag23 = 23,
  ModContact_FieldNumber_VerifyFlag = 24,
  ModContact_FieldNumber_VerifyInfo = 25,
  ModContact_FieldNumber_Level = 26,
  ModContact_FieldNumber_Source = 27,
  ModContact_FieldNumber_Weibo = 28,
  ModContact_FieldNumber_VerifyContent = 29,
  ModContact_FieldNumber_Alias = 30,
  ModContact_FieldNumber_ChatRoomOwner = 31,
  ModContact_FieldNumber_WeiboNickname = 32,
  ModContact_FieldNumber_WeiboFlag = 33,
  ModContact_FieldNumber_AlbumStyle = 34,
  ModContact_FieldNumber_AlbumFlag = 35,
  ModContact_FieldNumber_AlbumBgimgId = 36,
  ModContact_FieldNumber_SnsUserInfo = 37,
  ModContact_FieldNumber_Country = 38,
  ModContact_FieldNumber_BigHeadImgURL = 39,
  ModContact_FieldNumber_SmallHeadImgURL = 40,
  ModContact_FieldNumber_MyBrandList = 41,
  ModContact_FieldNumber_CustomizedInfo = 42,
  ModContact_FieldNumber_ChatRoomData = 43,
  ModContact_FieldNumber_HeadImgMd5 = 44,
  ModContact_FieldNumber_EncryptUserName = 45,
  ModContact_FieldNumber_RealName = 47,
  ModContact_FieldNumber_MobileFullHash = 49,
  ModContact_FieldNumber_AdditionalContactList = 50,
  ModContact_FieldNumber_ChatroomVersion = 53,
  ModContact_FieldNumber_ExtInfo = 54,
  ModContact_FieldNumber_ChatroomMaxCount = 55,
  ModContact_FieldNumber_ChatroomAccessType = 56,
  ModContact_FieldNumber_NewChatroomData = 57,
  ModContact_FieldNumber_DeleteFlag = 58,
  ModContact_FieldNumber_Description_p = 59,
  ModContact_FieldNumber_CardImgURL = 60,
  ModContact_FieldNumber_LabelIdlist = 61,
  ModContact_FieldNumber_PhoneNumListInfo = 62,
  ModContact_FieldNumber_WeiDianInfo = 63,
  ModContact_FieldNumber_ChatroomInfoVersion = 64,
  ModContact_FieldNumber_DeleteContactScene = 65,
  ModContact_FieldNumber_ChatroomStatus = 66,
  ModContact_FieldNumber_ExtFlag = 67,
};

/**
 * 好友详细信息
 **/
@interface ModContact : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *pyinitial;
/** Test to see if @c pyinitial has been set. */
@property(nonatomic, readwrite) BOOL hasPyinitial;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *quanPin;
/** Test to see if @c quanPin has been set. */
@property(nonatomic, readwrite) BOOL hasQuanPin;

/** 性别：0=>未知,1=>男,2=>女 */
@property(nonatomic, readwrite) uint32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@property(nonatomic, readwrite) uint32_t bitMask;

@property(nonatomic, readwrite) BOOL hasBitMask;
/** 好友状态: */
@property(nonatomic, readwrite) uint32_t bitVal;

@property(nonatomic, readwrite) BOOL hasBitVal;
@property(nonatomic, readwrite) uint32_t imgFlag;

@property(nonatomic, readwrite) BOOL hasImgFlag;
/** 备注名:为空则显示nickname */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *remark;
/** Test to see if @c remark has been set. */
@property(nonatomic, readwrite) BOOL hasRemark;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *realShortPy;
/** Test to see if @c realShortPy has been set. */
@property(nonatomic, readwrite) BOOL hasRealShortPy;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *realQuanpin;
/** Test to see if @c realQuanpin has been set. */
@property(nonatomic, readwrite) BOOL hasRealQuanpin;

@property(nonatomic, readwrite) uint32_t contactType;

@property(nonatomic, readwrite) BOOL hasContactType;
@property(nonatomic, readwrite) uint32_t roomInfoCount;

@property(nonatomic, readwrite) BOOL hasRoomInfoCount;
@property(nonatomic, readwrite, copy, null_resettable) NSString *tag16;
/** Test to see if @c tag16 has been set. */
@property(nonatomic, readwrite) BOOL hasTag16;

@property(nonatomic, readwrite) uint32_t chatRoomNotify;

@property(nonatomic, readwrite) BOOL hasChatRoomNotify;
@property(nonatomic, readwrite) uint32_t addContactScene;

@property(nonatomic, readwrite) BOOL hasAddContactScene;
@property(nonatomic, readwrite, copy, null_resettable) NSString *province;
/** Test to see if @c province has been set. */
@property(nonatomic, readwrite) BOOL hasProvince;

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;
/** Test to see if @c city has been set. */
@property(nonatomic, readwrite) BOOL hasCity;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

/** todo */
@property(nonatomic, readwrite) uint32_t personalCard;

@property(nonatomic, readwrite) BOOL hasPersonalCard;
/** todo */
@property(nonatomic, readwrite) int32_t tag23;

@property(nonatomic, readwrite) BOOL hasTag23;
/** 8=>个人;24=>公司 */
@property(nonatomic, readwrite) uint32_t verifyFlag;

@property(nonatomic, readwrite) BOOL hasVerifyFlag;
/** 注册主体:xx公司或个人 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyInfo;
/** Test to see if @c verifyInfo has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyInfo;

@property(nonatomic, readwrite) uint32_t level;

@property(nonatomic, readwrite) BOOL hasLevel;
/** 好友来源:(10000XX为对方添加自己)0=>未知;1=>QQ;3=>微信号;6=>名片;13=>手机通讯录;14=>群聊;15=>手机号;30=>扫一扫 */
@property(nonatomic, readwrite) uint32_t source;

@property(nonatomic, readwrite) BOOL hasSource;
/** （1000015=>对方手机号;1000030=>对方扫一扫;1000014=>对方群聊......） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *weibo;
/** Test to see if @c weibo has been set. */
@property(nonatomic, readwrite) BOOL hasWeibo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyContent;
/** Test to see if @c verifyContent has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyContent;

/** 微信号(未设置则显示wxid) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *chatRoomOwner;
/** Test to see if @c chatRoomOwner has been set. */
@property(nonatomic, readwrite) BOOL hasChatRoomOwner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *weiboNickname;
/** Test to see if @c weiboNickname has been set. */
@property(nonatomic, readwrite) BOOL hasWeiboNickname;

@property(nonatomic, readwrite) uint32_t weiboFlag;

@property(nonatomic, readwrite) BOOL hasWeiboFlag;
@property(nonatomic, readwrite) uint32_t albumStyle;

@property(nonatomic, readwrite) BOOL hasAlbumStyle;
@property(nonatomic, readwrite) uint32_t albumFlag;

@property(nonatomic, readwrite) BOOL hasAlbumFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *albumBgimgId;
/** Test to see if @c albumBgimgId has been set. */
@property(nonatomic, readwrite) BOOL hasAlbumBgimgId;

/** 个人相册封面图片 */
@property(nonatomic, readwrite, strong, null_resettable) SnsUserInfo *snsUserInfo;
/** Test to see if @c snsUserInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSnsUserInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bigHeadImgURL;
/** Test to see if @c bigHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasBigHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallHeadImgURL;
/** Test to see if @c smallHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasSmallHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *myBrandList;
/** Test to see if @c myBrandList has been set. */
@property(nonatomic, readwrite) BOOL hasMyBrandList;

@property(nonatomic, readwrite, strong, null_resettable) CustomizedInfoNew *customizedInfo;
/** Test to see if @c customizedInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCustomizedInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *chatRoomData;
/** Test to see if @c chatRoomData has been set. */
@property(nonatomic, readwrite) BOOL hasChatRoomData;

@property(nonatomic, readwrite, copy, null_resettable) NSString *headImgMd5;
/** Test to see if @c headImgMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasHeadImgMd5;

@property(nonatomic, readwrite, copy, null_resettable) NSString *encryptUserName;
/** Test to see if @c encryptUserName has been set. */
@property(nonatomic, readwrite) BOOL hasEncryptUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;
/** Test to see if @c realName has been set. */
@property(nonatomic, readwrite) BOOL hasRealName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mobileFullHash;
/** Test to see if @c mobileFullHash has been set. */
@property(nonatomic, readwrite) BOOL hasMobileFullHash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *additionalContactList;
/** Test to see if @c additionalContactList has been set. */
@property(nonatomic, readwrite) BOOL hasAdditionalContactList;

@property(nonatomic, readwrite) uint32_t chatroomVersion;

@property(nonatomic, readwrite) BOOL hasChatroomVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *extInfo;
/** Test to see if @c extInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExtInfo;

@property(nonatomic, readwrite) uint32_t chatroomMaxCount;

@property(nonatomic, readwrite) BOOL hasChatroomMaxCount;
@property(nonatomic, readwrite) uint32_t chatroomAccessType;

@property(nonatomic, readwrite) BOOL hasChatroomAccessType;
@property(nonatomic, readwrite, strong, null_resettable) ModContact_GroupMemberList *newChatroomData NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newChatroomData has been set. */
@property(nonatomic, readwrite) BOOL hasNewChatroomData;

@property(nonatomic, readwrite) uint32_t deleteFlag;

@property(nonatomic, readwrite) BOOL hasDeleteFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cardImgURL;
/** Test to see if @c cardImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasCardImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *labelIdlist;
/** Test to see if @c labelIdlist has been set. */
@property(nonatomic, readwrite) BOOL hasLabelIdlist;

@property(nonatomic, readwrite, strong, null_resettable) PhoneNumListInfo *phoneNumListInfo;
/** Test to see if @c phoneNumListInfo has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneNumListInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *weiDianInfo;
/** Test to see if @c weiDianInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWeiDianInfo;

@property(nonatomic, readwrite) uint32_t chatroomInfoVersion;

@property(nonatomic, readwrite) BOOL hasChatroomInfoVersion;
@property(nonatomic, readwrite) uint32_t deleteContactScene;

@property(nonatomic, readwrite) BOOL hasDeleteContactScene;
@property(nonatomic, readwrite) uint32_t chatroomStatus;

@property(nonatomic, readwrite) BOOL hasChatroomStatus;
@property(nonatomic, readwrite) uint32_t extFlag;

@property(nonatomic, readwrite) BOOL hasExtFlag;
@end

#pragma mark - ModContact_GroupMemberList

typedef GPB_ENUM(ModContact_GroupMemberList_FieldNumber) {
  ModContact_GroupMemberList_FieldNumber_MemberCount = 1,
  ModContact_GroupMemberList_FieldNumber_ChatRoomMemberArray = 2,
  ModContact_GroupMemberList_FieldNumber_InfoMask = 3,
  ModContact_GroupMemberList_FieldNumber_Tag4 = 4,
};

@interface ModContact_GroupMemberList : GPBMessage

@property(nonatomic, readwrite) uint32_t memberCount;

@property(nonatomic, readwrite) BOOL hasMemberCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChatRoomMemberInfo*> *chatRoomMemberArray;
/** The number of items in @c chatRoomMemberArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chatRoomMemberArray_Count;

@property(nonatomic, readwrite) uint32_t infoMask;

@property(nonatomic, readwrite) BOOL hasInfoMask;
@property(nonatomic, readwrite, copy, null_resettable) NSString *tag4;
/** Test to see if @c tag4 has been set. */
@property(nonatomic, readwrite) BOOL hasTag4;

@end

#pragma mark - CmdItem

typedef GPB_ENUM(CmdItem_FieldNumber) {
  CmdItem_FieldNumber_CmdId = 1,
  CmdItem_FieldNumber_CmdBuf = 2,
};

/**
 * 同步消息
 **/
@interface CmdItem : GPBMessage

/** 消息类型:1==>个人信息,2==>好友信息,5==>服务器上未读取的最新消息,其余消息类型暂未知 */
@property(nonatomic, readwrite) int32_t cmdId;

@property(nonatomic, readwrite) BOOL hasCmdId;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cmdBuf;
/** Test to see if @c cmdBuf has been set. */
@property(nonatomic, readwrite) BOOL hasCmdBuf;

@end

#pragma mark - NewInitResponse

typedef GPB_ENUM(NewInitResponse_FieldNumber) {
  NewInitResponse_FieldNumber_BaseResponse = 1,
  NewInitResponse_FieldNumber_CurrentSynckey = 2,
  NewInitResponse_FieldNumber_MaxSynckey = 3,
  NewInitResponse_FieldNumber_ContinueFlag = 4,
  NewInitResponse_FieldNumber_Count = 6,
  NewInitResponse_FieldNumber_ListArray = 7,
};

/**
 * 新设备第一次登录初始化服务器响应
 **/
@interface NewInitResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

/** 当前synckey二进制数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *currentSynckey;
/** Test to see if @c currentSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentSynckey;

/** 最新synckey二进制数据(若与sync_key_cur不相同,则continue_flag返回1,表示需要继续初始化) */
@property(nonatomic, readwrite, copy, null_resettable) NSData *maxSynckey;
/** Test to see if @c maxSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasMaxSynckey;

/** 为1时表示仍要继续调用newinit初始化,直到该标志位返回0停止初始化(联系人或未读消息数据太多,无法一次获取完毕) */
@property(nonatomic, readwrite) int32_t continueFlag;

@property(nonatomic, readwrite) BOOL hasContinueFlag;
/** tag7结构体数量 */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 需要根据消息类型解析 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CmdItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - NewSyncRequest

typedef GPB_ENUM(NewSyncRequest_FieldNumber) {
  NewSyncRequest_FieldNumber_Oplog = 1,
  NewSyncRequest_FieldNumber_Selector = 2,
  NewSyncRequest_FieldNumber_KeyBuf = 3,
  NewSyncRequest_FieldNumber_Scene = 4,
  NewSyncRequest_FieldNumber_DeviceType = 5,
  NewSyncRequest_FieldNumber_SyncMsgDigest = 6,
};

/**
 * 同步消息
 **/
@interface NewSyncRequest : GPBMessage

/** unknown,must be 0 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *oplog;
/** Test to see if @c oplog has been set. */
@property(nonatomic, readwrite) BOOL hasOplog;

/** unknown,just set 7 */
@property(nonatomic, readwrite) int32_t selector;

@property(nonatomic, readwrite) BOOL hasSelector;
/** 同步成功后服务器返回的消息id */
@property(nonatomic, readwrite, copy, null_resettable) NSData *keyBuf;
/** Test to see if @c keyBuf has been set. */
@property(nonatomic, readwrite) BOOL hasKeyBuf;

/** unkown,just set 3 */
@property(nonatomic, readwrite) int32_t scene;

@property(nonatomic, readwrite) BOOL hasScene;
/** android-22 iOS11.3.1 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

/** unknown,just set 1 */
@property(nonatomic, readwrite) int32_t syncMsgDigest;

@property(nonatomic, readwrite) BOOL hasSyncMsgDigest;
@end

#pragma mark - NewSyncResponse

typedef GPB_ENUM(NewSyncResponse_FieldNumber) {
  NewSyncResponse_FieldNumber_Ret = 1,
  NewSyncResponse_FieldNumber_CmdList = 2,
  NewSyncResponse_FieldNumber_ContinueFlag = 3,
  NewSyncResponse_FieldNumber_KeyBuf = 4,
  NewSyncResponse_FieldNumber_Status = 5,
  NewSyncResponse_FieldNumber_OnlineVersion = 6,
  NewSyncResponse_FieldNumber_SvrTime = 7,
};

/**
 * 同步消息响应
 **/
@interface NewSyncResponse : GPBMessage

@property(nonatomic, readwrite) int32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
/** 未读消息 */
@property(nonatomic, readwrite, strong, null_resettable) NewSyncResponse_CmdList *cmdList;
/** Test to see if @c cmdList has been set. */
@property(nonatomic, readwrite) BOOL hasCmdList;

@property(nonatomic, readwrite) int32_t continueFlag;

@property(nonatomic, readwrite) BOOL hasContinueFlag;
/** 服务器返回的sync key */
@property(nonatomic, readwrite, copy, null_resettable) NSData *keyBuf;
/** Test to see if @c keyBuf has been set. */
@property(nonatomic, readwrite) BOOL hasKeyBuf;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) int32_t onlineVersion;

@property(nonatomic, readwrite) BOOL hasOnlineVersion;
@property(nonatomic, readwrite) int32_t svrTime;

@property(nonatomic, readwrite) BOOL hasSvrTime;
@end

#pragma mark - NewSyncResponse_CmdList

typedef GPB_ENUM(NewSyncResponse_CmdList_FieldNumber) {
  NewSyncResponse_CmdList_FieldNumber_Count = 1,
  NewSyncResponse_CmdList_FieldNumber_ListArray = 2,
};

@interface NewSyncResponse_CmdList : GPBMessage

/** tag2结构体数量 */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 需要根据消息类型解析 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CmdItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - MicroMsgRequestNew

typedef GPB_ENUM(MicroMsgRequestNew_FieldNumber) {
  MicroMsgRequestNew_FieldNumber_ToUserName = 1,
  MicroMsgRequestNew_FieldNumber_Content = 2,
  MicroMsgRequestNew_FieldNumber_Type = 3,
  MicroMsgRequestNew_FieldNumber_CreateTime = 4,
  MicroMsgRequestNew_FieldNumber_ClientMsgId = 5,
  MicroMsgRequestNew_FieldNumber_MsgSource = 6,
};

@interface MicroMsgRequestNew : GPBMessage

/** to wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *toUserName;
/** Test to see if @c toUserName has been set. */
@property(nonatomic, readwrite) BOOL hasToUserName;

/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

/** 消息类型: 文字消息=>1,名片=>42， */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
/** 1537268848 */
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
/** 不同消息的utc与client_id必须至少有1个不相同 4287068409, iMac 从1开始？ */
@property(nonatomic, readwrite) int64_t clientMsgId;

@property(nonatomic, readwrite) BOOL hasClientMsgId;
/** 群聊at功能 iMac: "<msgsource></msgsource>" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgSource;
/** Test to see if @c msgSource has been set. */
@property(nonatomic, readwrite) BOOL hasMsgSource;

@end

#pragma mark - SendMsgRequestNew

typedef GPB_ENUM(SendMsgRequestNew_FieldNumber) {
  SendMsgRequestNew_FieldNumber_Count = 1,
  SendMsgRequestNew_FieldNumber_ListArray = 2,
};

/**
 * 发送消息请求
 **/
@interface SendMsgRequestNew : GPBMessage

/** 本次发送的消息数量 */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 这里可以是repeated,允许一次发送多条消息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MicroMsgRequestNew*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - MicroMsgResponseNew

typedef GPB_ENUM(MicroMsgResponseNew_FieldNumber) {
  MicroMsgResponseNew_FieldNumber_Ret = 1,
  MicroMsgResponseNew_FieldNumber_ToUserName = 2,
  MicroMsgResponseNew_FieldNumber_MsgId = 3,
  MicroMsgResponseNew_FieldNumber_ClientMsgId = 4,
  MicroMsgResponseNew_FieldNumber_CreateTime = 5,
  MicroMsgResponseNew_FieldNumber_ServerTime = 6,
  MicroMsgResponseNew_FieldNumber_Type = 7,
  MicroMsgResponseNew_FieldNumber_NewMsgId = 8,
};

@interface MicroMsgResponseNew : GPBMessage

/** 错误码  0=>发送成功,-44=>对方开启了朋友验证(被删好友),-22=>消息已发出,但被对方拒收了(被拉黑) */
@property(nonatomic, readwrite) int32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
/** to wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *toUserName;
/** Test to see if @c toUserName has been set. */
@property(nonatomic, readwrite) BOOL hasToUserName;

@property(nonatomic, readwrite) int32_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
@property(nonatomic, readwrite) int32_t clientMsgId;

@property(nonatomic, readwrite) BOOL hasClientMsgId;
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
@property(nonatomic, readwrite) int32_t serverTime;

@property(nonatomic, readwrite) BOOL hasServerTime;
/** 消息类型 */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
/** 消息唯一id */
@property(nonatomic, readwrite) int64_t newMsgId;

@property(nonatomic, readwrite) BOOL hasNewMsgId;
@end

#pragma mark - SendMsgResponseNew

typedef GPB_ENUM(SendMsgResponseNew_FieldNumber) {
  SendMsgResponseNew_FieldNumber_BaseResponse = 1,
  SendMsgResponseNew_FieldNumber_Count = 2,
  SendMsgResponseNew_FieldNumber_ListArray = 3,
};

/**
 * 发送消息响应
 **/
@interface SendMsgResponseNew : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 发送结 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MicroMsgResponseNew*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - CheckResUpdateRequest

typedef GPB_ENUM(CheckResUpdateRequest_FieldNumber) {
  CheckResUpdateRequest_FieldNumber_ResIdArray = 1,
};

@interface CheckResUpdateRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CheckResUpdateRequest_ResID*> *resIdArray;
/** The number of items in @c resIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resIdArray_Count;

@end

#pragma mark - CheckResUpdateRequest_ResID

typedef GPB_ENUM(CheckResUpdateRequest_ResID_FieldNumber) {
  CheckResUpdateRequest_ResID_FieldNumber_Type = 1,
  CheckResUpdateRequest_ResID_FieldNumber_SubTypeVectorArray = 2,
};

@interface CheckResUpdateRequest_ResID : GPBMessage

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CheckResUpdateRequest_ResID_SubTypeVector*> *subTypeVectorArray;
/** The number of items in @c subTypeVectorArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger subTypeVectorArray_Count;

@end

#pragma mark - CheckResUpdateRequest_ResID_SubTypeVector

typedef GPB_ENUM(CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber) {
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_SubType = 1,
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_KeyVersion = 2,
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_ResVersion = 3,
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_Eid = 4,
};

@interface CheckResUpdateRequest_ResID_SubTypeVector : GPBMessage

@property(nonatomic, readwrite) int32_t subType;

@property(nonatomic, readwrite) BOOL hasSubType;
@property(nonatomic, readwrite) int32_t keyVersion;

@property(nonatomic, readwrite) BOOL hasKeyVersion;
@property(nonatomic, readwrite) int32_t resVersion;

@property(nonatomic, readwrite) BOOL hasResVersion;
@property(nonatomic, readwrite) int32_t eid;

@property(nonatomic, readwrite) BOOL hasEid;
@end

#pragma mark - SnsObject

typedef GPB_ENUM(SnsObject_FieldNumber) {
  SnsObject_FieldNumber_Id_p = 1,
  SnsObject_FieldNumber_Username = 2,
  SnsObject_FieldNumber_Nickname = 3,
  SnsObject_FieldNumber_CreateTime = 4,
  SnsObject_FieldNumber_ObjectDesc = 5,
  SnsObject_FieldNumber_ExtFlag = 16,
  SnsObject_FieldNumber_ObjectOperations = 28,
};

@interface SnsObject : GPBMessage

/** 12944632620798980176 */
@property(nonatomic, readwrite) uint64_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
/** wxid_19py48yw39qw22 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *username;
/** Test to see if @c username has been set. */
@property(nonatomic, readwrite) BOOL hasUsername;

/** xiaohao */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

/** 1543120458 */
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *objectDesc;
/** Test to see if @c objectDesc has been set. */
@property(nonatomic, readwrite) BOOL hasObjectDesc;

@property(nonatomic, readwrite) int32_t extFlag;

@property(nonatomic, readwrite) BOOL hasExtFlag;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *objectOperations;
/** Test to see if @c objectOperations has been set. */
@property(nonatomic, readwrite) BOOL hasObjectOperations;

@end

#pragma mark - SnsTimeLineRequest

typedef GPB_ENUM(SnsTimeLineRequest_FieldNumber) {
  SnsTimeLineRequest_FieldNumber_BaseRequest = 1,
  SnsTimeLineRequest_FieldNumber_FirstPageMd5 = 2,
  SnsTimeLineRequest_FieldNumber_MinFilterId = 3,
  SnsTimeLineRequest_FieldNumber_MaxId = 4,
  SnsTimeLineRequest_FieldNumber_LastRequestTime = 5,
  SnsTimeLineRequest_FieldNumber_ClientLatestId = 6,
  SnsTimeLineRequest_FieldNumber_Session = 7,
  SnsTimeLineRequest_FieldNumber_NetworkType = 8,
  SnsTimeLineRequest_FieldNumber_Adexpinfo = 10,
};

@interface SnsTimeLineRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *firstPageMd5;
/** Test to see if @c firstPageMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasFirstPageMd5;

@property(nonatomic, readwrite) int32_t minFilterId;

@property(nonatomic, readwrite) BOOL hasMinFilterId;
@property(nonatomic, readwrite) int32_t maxId;

@property(nonatomic, readwrite) BOOL hasMaxId;
@property(nonatomic, readwrite) int32_t lastRequestTime;

@property(nonatomic, readwrite) BOOL hasLastRequestTime;
@property(nonatomic, readwrite) int64_t clientLatestId;

@property(nonatomic, readwrite) BOOL hasClientLatestId;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *session;
/** Test to see if @c session has been set. */
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite) int32_t networkType;

@property(nonatomic, readwrite) BOOL hasNetworkType;
/** "" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adexpinfo;
/** Test to see if @c adexpinfo has been set. */
@property(nonatomic, readwrite) BOOL hasAdexpinfo;

@end

#pragma mark - SnsTimeLineResponse

typedef GPB_ENUM(SnsTimeLineResponse_FieldNumber) {
  SnsTimeLineResponse_FieldNumber_BaseResponse = 1,
  SnsTimeLineResponse_FieldNumber_FirstPageMd5 = 2,
  SnsTimeLineResponse_FieldNumber_ObjectCount = 3,
  SnsTimeLineResponse_FieldNumber_ObjectListArray = 4,
  SnsTimeLineResponse_FieldNumber_NewRequestTime = 5,
  SnsTimeLineResponse_FieldNumber_ObjectCountForSameMd5 = 6,
  SnsTimeLineResponse_FieldNumber_ControlFlag = 7,
  SnsTimeLineResponse_FieldNumber_ServerConfig = 8,
  SnsTimeLineResponse_FieldNumber_RecCount = 9,
  SnsTimeLineResponse_FieldNumber_Session = 11,
};

@interface SnsTimeLineResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *firstPageMd5;
/** Test to see if @c firstPageMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasFirstPageMd5;

@property(nonatomic, readwrite) int32_t objectCount;

@property(nonatomic, readwrite) BOOL hasObjectCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SnsObject*> *objectListArray;
/** The number of items in @c objectListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger objectListArray_Count;

@property(nonatomic, readwrite) int32_t newRequestTime;

@property(nonatomic, readwrite) BOOL hasNewRequestTime;
@property(nonatomic, readwrite) int32_t objectCountForSameMd5;

@property(nonatomic, readwrite) BOOL hasObjectCountForSameMd5;
@property(nonatomic, readwrite) int32_t controlFlag;

@property(nonatomic, readwrite) BOOL hasControlFlag;
@property(nonatomic, readwrite, strong, null_resettable) SnsTimeLineResponse_SnsServerConfig *serverConfig;
/** Test to see if @c serverConfig has been set. */
@property(nonatomic, readwrite) BOOL hasServerConfig;

@property(nonatomic, readwrite) int32_t recCount;

@property(nonatomic, readwrite) BOOL hasRecCount;
/** repeated recList                      = 10; */
@property(nonatomic, readwrite, copy, null_resettable) NSData *session;
/** Test to see if @c session has been set. */
@property(nonatomic, readwrite) BOOL hasSession;

@end

#pragma mark - SnsTimeLineResponse_SnsServerConfig

typedef GPB_ENUM(SnsTimeLineResponse_SnsServerConfig_FieldNumber) {
  SnsTimeLineResponse_SnsServerConfig_FieldNumber_PostMentionLimit = 1,
  SnsTimeLineResponse_SnsServerConfig_FieldNumber_CopyAndPasteWordLimit = 2,
};

@interface SnsTimeLineResponse_SnsServerConfig : GPBMessage

@property(nonatomic, readwrite) int32_t postMentionLimit;

@property(nonatomic, readwrite) BOOL hasPostMentionLimit;
@property(nonatomic, readwrite) int32_t copyAndPasteWordLimit;

@property(nonatomic, readwrite) BOOL hasCopyAndPasteWordLimit;
@end

#pragma mark - BindOpMobileRequest

typedef GPB_ENUM(BindOpMobileRequest_FieldNumber) {
  BindOpMobileRequest_FieldNumber_BaseRequest = 1,
  BindOpMobileRequest_FieldNumber_UserName = 2,
  BindOpMobileRequest_FieldNumber_Mobile = 3,
  BindOpMobileRequest_FieldNumber_Opcode = 4,
  BindOpMobileRequest_FieldNumber_Verifycode = 5,
  BindOpMobileRequest_FieldNumber_DialFlag = 6,
  BindOpMobileRequest_FieldNumber_DialLang = 7,
  BindOpMobileRequest_FieldNumber_AuthTicket = 8,
  BindOpMobileRequest_FieldNumber_ForceReg = 9,
  BindOpMobileRequest_FieldNumber_SafeDeviceName = 10,
  BindOpMobileRequest_FieldNumber_SafeDeviceType = 11,
  BindOpMobileRequest_FieldNumber_RandomEncryKey = 12,
  BindOpMobileRequest_FieldNumber_Language = 13,
  BindOpMobileRequest_FieldNumber_InputMobileRetrys = 14,
  BindOpMobileRequest_FieldNumber_AdjustRet = 15,
  BindOpMobileRequest_FieldNumber_ClientSeqId = 16,
  BindOpMobileRequest_FieldNumber_MobileCheckType = 17,
  BindOpMobileRequest_FieldNumber_UnkownString18 = 18,
  BindOpMobileRequest_FieldNumber_ExtSpamInfo = 20,
};

@interface BindOpMobileRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;
/** Test to see if @c mobile has been set. */
@property(nonatomic, readwrite) BOOL hasMobile;

@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifycode;
/** Test to see if @c verifycode has been set. */
@property(nonatomic, readwrite) BOOL hasVerifycode;

@property(nonatomic, readwrite) int32_t dialFlag;

@property(nonatomic, readwrite) BOOL hasDialFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *dialLang;
/** Test to see if @c dialLang has been set. */
@property(nonatomic, readwrite) BOOL hasDialLang;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@property(nonatomic, readwrite) int32_t forceReg;

@property(nonatomic, readwrite) BOOL hasForceReg;
@property(nonatomic, readwrite, copy, null_resettable) NSString *safeDeviceName;
/** Test to see if @c safeDeviceName has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *safeDeviceType;
/** Test to see if @c safeDeviceType has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceType;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

/** ios=0 */
@property(nonatomic, readwrite) int32_t inputMobileRetrys;

@property(nonatomic, readwrite) BOOL hasInputMobileRetrys;
/** ios=0 */
@property(nonatomic, readwrite) int32_t adjustRet;

@property(nonatomic, readwrite) BOOL hasAdjustRet;
/** ios="8fd2fc510d3fb9bb8e0661b0c6a026cc-1545918644" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite) int32_t mobileCheckType;

@property(nonatomic, readwrite) BOOL hasMobileCheckType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *unkownString18;
/** Test to see if @c unkownString18 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkownString18;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *extSpamInfo;
/** Test to see if @c extSpamInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExtSpamInfo;

@end

#pragma mark - BindOpMobileResponse

typedef GPB_ENUM(BindOpMobileResponse_FieldNumber) {
  BindOpMobileResponse_FieldNumber_BaseResponse = 1,
  BindOpMobileResponse_FieldNumber_Ticket = 2,
  BindOpMobileResponse_FieldNumber_SmsNo = 3,
  BindOpMobileResponse_FieldNumber_NeedSetPwd = 4,
  BindOpMobileResponse_FieldNumber_Pwd = 5,
  BindOpMobileResponse_FieldNumber_Username = 6,
  BindOpMobileResponse_FieldNumber_NewHostList = 7,
  BindOpMobileResponse_FieldNumber_BuiltinIplist = 8,
  BindOpMobileResponse_FieldNumber_NetworkControl = 9,
  BindOpMobileResponse_FieldNumber_AuthTicket = 10,
  BindOpMobileResponse_FieldNumber_SafeDevice = 11,
  BindOpMobileResponse_FieldNumber_Cc = 12,
  BindOpMobileResponse_FieldNumber_ObsoleteItem1 = 13,
  BindOpMobileResponse_FieldNumber_SafeDeviceList = 14,
  BindOpMobileResponse_FieldNumber_PureMobile = 15,
  BindOpMobileResponse_FieldNumber_FormatedMobile = 16,
  BindOpMobileResponse_FieldNumber_ShowStyle = 17,
  BindOpMobileResponse_FieldNumber_MmtlsControlBitFlag = 18,
  BindOpMobileResponse_FieldNumber_SmsUpCode = 19,
  BindOpMobileResponse_FieldNumber_SmsUpMobile = 20,
  BindOpMobileResponse_FieldNumber_MobileCheckType = 21,
  BindOpMobileResponse_FieldNumber_RegSessionId = 22,
};

@interface BindOpMobileResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smsNo;
/** Test to see if @c smsNo has been set. */
@property(nonatomic, readwrite) BOOL hasSmsNo;

@property(nonatomic, readwrite) int32_t needSetPwd;

@property(nonatomic, readwrite) BOOL hasNeedSetPwd;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *username;
/** Test to see if @c username has been set. */
@property(nonatomic, readwrite) BOOL hasUsername;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@property(nonatomic, readwrite, strong, null_resettable) BindOpMobileResponse_NewHostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@property(nonatomic, readwrite) int32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@property(nonatomic, readwrite, copy, null_resettable) NSString *cc;
/** Test to see if @c cc has been set. */
@property(nonatomic, readwrite) BOOL hasCc;

@property(nonatomic, readwrite) int32_t obsoleteItem1;

@property(nonatomic, readwrite) BOOL hasObsoleteItem1;
@property(nonatomic, readwrite, strong, null_resettable) BindOpMobileResponse_SafeDeviceList *safeDeviceList;
/** Test to see if @c safeDeviceList has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pureMobile;
/** Test to see if @c pureMobile has been set. */
@property(nonatomic, readwrite) BOOL hasPureMobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *formatedMobile;
/** Test to see if @c formatedMobile has been set. */
@property(nonatomic, readwrite) BOOL hasFormatedMobile;

@property(nonatomic, readwrite, strong, null_resettable) BindOpMobileResponse_ShowStyle *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

@property(nonatomic, readwrite) int32_t mmtlsControlBitFlag;

@property(nonatomic, readwrite) BOOL hasMmtlsControlBitFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *smsUpCode;
/** Test to see if @c smsUpCode has been set. */
@property(nonatomic, readwrite) BOOL hasSmsUpCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smsUpMobile;
/** Test to see if @c smsUpMobile has been set. */
@property(nonatomic, readwrite) BOOL hasSmsUpMobile;

@property(nonatomic, readwrite) int32_t mobileCheckType;

@property(nonatomic, readwrite) BOOL hasMobileCheckType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *regSessionId;
/** Test to see if @c regSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasRegSessionId;

@end

#pragma mark - BindOpMobileResponse_NewHostList

typedef GPB_ENUM(BindOpMobileResponse_NewHostList_FieldNumber) {
  BindOpMobileResponse_NewHostList_FieldNumber_Count = 1,
};

@interface BindOpMobileResponse_NewHostList : GPBMessage

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@end

#pragma mark - BindOpMobileResponse_SafeDeviceList

typedef GPB_ENUM(BindOpMobileResponse_SafeDeviceList_FieldNumber) {
  BindOpMobileResponse_SafeDeviceList_FieldNumber_Count = 1,
};

@interface BindOpMobileResponse_SafeDeviceList : GPBMessage

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@end

#pragma mark - BindOpMobileResponse_ShowStyle

typedef GPB_ENUM(BindOpMobileResponse_ShowStyle_FieldNumber) {
  BindOpMobileResponse_ShowStyle_FieldNumber_KeyCount = 1,
};

@interface BindOpMobileResponse_ShowStyle : GPBMessage

@property(nonatomic, readwrite) int32_t keyCount;

@property(nonatomic, readwrite) BOOL hasKeyCount;
@end

#pragma mark - GetProfileRequest

typedef GPB_ENUM(GetProfileRequest_FieldNumber) {
  GetProfileRequest_FieldNumber_BaseRequest = 1,
  GetProfileRequest_FieldNumber_UserName = 2,
};

@interface GetProfileRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@end

#pragma mark - DisturbSetting

@interface DisturbSetting : GPBMessage

@end

#pragma mark - ModUserInfo

typedef GPB_ENUM(ModUserInfo_FieldNumber) {
  ModUserInfo_FieldNumber_BitFlag = 1,
  ModUserInfo_FieldNumber_UserName = 2,
  ModUserInfo_FieldNumber_NickName = 3,
  ModUserInfo_FieldNumber_BindUin = 4,
  ModUserInfo_FieldNumber_BindMobile = 6,
  ModUserInfo_FieldNumber_Status = 7,
  ModUserInfo_FieldNumber_ImgLen = 8,
  ModUserInfo_FieldNumber_ImgBuf = 9,
  ModUserInfo_FieldNumber_Sex = 10,
  ModUserInfo_FieldNumber_Province = 11,
  ModUserInfo_FieldNumber_City = 12,
  ModUserInfo_FieldNumber_Signature = 13,
  ModUserInfo_FieldNumber_PersonalCard = 14,
  ModUserInfo_FieldNumber_DisturbSetting = 15,
  ModUserInfo_FieldNumber_PluginFlag = 16,
  ModUserInfo_FieldNumber_VerifyFlag = 17,
  ModUserInfo_FieldNumber_VerifyInfo = 18,
};

@interface ModUserInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t bitFlag;

@property(nonatomic, readwrite) BOOL hasBitFlag;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *bindMobile;
/** Test to see if @c bindMobile has been set. */
@property(nonatomic, readwrite) BOOL hasBindMobile;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) uint32_t imgLen;

@property(nonatomic, readwrite) BOOL hasImgLen;
@property(nonatomic, readwrite, copy, null_resettable) NSData *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@property(nonatomic, readwrite) uint32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, copy, null_resettable) NSString *province;
/** Test to see if @c province has been set. */
@property(nonatomic, readwrite) BOOL hasProvince;

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;
/** Test to see if @c city has been set. */
@property(nonatomic, readwrite) BOOL hasCity;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@property(nonatomic, readwrite) uint32_t personalCard;

@property(nonatomic, readwrite) BOOL hasPersonalCard;
@property(nonatomic, readwrite, strong, null_resettable) DisturbSetting *disturbSetting;
/** Test to see if @c disturbSetting has been set. */
@property(nonatomic, readwrite) BOOL hasDisturbSetting;

@property(nonatomic, readwrite) uint32_t pluginFlag;

@property(nonatomic, readwrite) BOOL hasPluginFlag;
@property(nonatomic, readwrite) uint32_t verifyFlag;

@property(nonatomic, readwrite) BOOL hasVerifyFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyInfo;
/** Test to see if @c verifyInfo has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyInfo;

@end

#pragma mark - UserInfoExt

typedef GPB_ENUM(UserInfoExt_FieldNumber) {
  UserInfoExt_FieldNumber_BigHeadImgURL = 9,
  UserInfoExt_FieldNumber_SmallHeadImgURL = 10,
};

@interface UserInfoExt : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *bigHeadImgURL;
/** Test to see if @c bigHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasBigHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallHeadImgURL;
/** Test to see if @c smallHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasSmallHeadImgURL;

@end

#pragma mark - GetProfileResponse

typedef GPB_ENUM(GetProfileResponse_FieldNumber) {
  GetProfileResponse_FieldNumber_BaseResponse = 1,
  GetProfileResponse_FieldNumber_UserInfo = 2,
  GetProfileResponse_FieldNumber_UserInfoExt = 3,
};

@interface GetProfileResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) ModUserInfo *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

@property(nonatomic, readwrite, strong, null_resettable) UserInfoExt *userInfoExt;
/** Test to see if @c userInfoExt has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfoExt;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
