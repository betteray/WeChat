// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: safe.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class SKBuiltinBuffer_t;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SafeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface SafeRoot : GPBRootObject
@end

#pragma mark - WCExtInfo

typedef GPB_ENUM(WCExtInfo_FieldNumber) {
  WCExtInfo_FieldNumber_Wcstf = 1,
  WCExtInfo_FieldNumber_Wcste = 2,
  WCExtInfo_FieldNumber_CcData = 3,
  WCExtInfo_FieldNumber_UserAttrInfo = 4,
};

@interface WCExtInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wcstf;
/** Test to see if @c wcstf has been set. */
@property(nonatomic, readwrite) BOOL hasWcstf;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wcste;
/** Test to see if @c wcste has been set. */
@property(nonatomic, readwrite) BOOL hasWcste;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ccData;
/** Test to see if @c ccData has been set. */
@property(nonatomic, readwrite) BOOL hasCcData;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *userAttrInfo;
/** Test to see if @c userAttrInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserAttrInfo;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
