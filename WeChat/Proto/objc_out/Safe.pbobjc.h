// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: safe.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ClientSpamInfo_IOS_Content;
@class DeviceToken_Token;
@class FPKeyVal;
@class FPKeyVals;
@class InstalledPackageInfo;
@class ST;
@class SpamBuff_Soft;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SafeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface SafeRoot : GPBRootObject
@end

#pragma mark - InstalledPackageInfo

typedef GPB_ENUM(InstalledPackageInfo_FieldNumber) {
  InstalledPackageInfo_FieldNumber_PackageName = 1,
  InstalledPackageInfo_FieldNumber_Label = 2,
  InstalledPackageInfo_FieldNumber_SigMd5 = 3,
  InstalledPackageInfo_FieldNumber_FileSize = 4,
  InstalledPackageInfo_FieldNumber_ApplicationFlag = 5,
};

@interface InstalledPackageInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *packageName;
/** Test to see if @c packageName has been set. */
@property(nonatomic, readwrite) BOOL hasPackageName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *label;
/** Test to see if @c label has been set. */
@property(nonatomic, readwrite) BOOL hasLabel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sigMd5;
/** Test to see if @c sigMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasSigMd5;

@property(nonatomic, readwrite) uint32_t fileSize;

@property(nonatomic, readwrite) BOOL hasFileSize;
@property(nonatomic, readwrite) uint32_t applicationFlag;

@property(nonatomic, readwrite) BOOL hasApplicationFlag;
@end

#pragma mark - ST

typedef GPB_ENUM(ST_FieldNumber) {
  ST_FieldNumber_IsMorkLocOpen = 1,
  ST_FieldNumber_MsgLevel = 2,
  ST_FieldNumber_IsDbgConnected = 3,
  ST_FieldNumber_PkgHash3 = 4,
  ST_FieldNumber_RatioFwVer = 5,
  ST_FieldNumber_OsRelVer = 6,
  ST_FieldNumber_Imei = 7,
  ST_FieldNumber_AndroidId = 8,
  ST_FieldNumber_PhoneSerial = 9,
  ST_FieldNumber_PhoneModel = 10,
  ST_FieldNumber_CpuCoreCount = 11,
  ST_FieldNumber_CpuHw = 12,
  ST_FieldNumber_CpuFeatures = 13,
  ST_FieldNumber_SelfMac = 14,
  ST_FieldNumber_Ssid = 15,
  ST_FieldNumber_Bssid = 16,
  ST_FieldNumber_SpInfo = 17,
  ST_FieldNumber_Apninfo = 18,
  ST_FieldNumber_BuildFp = 19,
  ST_FieldNumber_BuildBoard = 20,
  ST_FieldNumber_BuildBootloader = 21,
  ST_FieldNumber_BuildBrand = 22,
  ST_FieldNumber_BuildDevice = 23,
  ST_FieldNumber_BuildHw = 24,
  ST_FieldNumber_BuildProduct = 25,
  ST_FieldNumber_Manufacturer = 26,
  ST_FieldNumber_PhoneNum = 27,
  ST_FieldNumber_NetType = 28,
  ST_FieldNumber_IsQemuEnv = 29,
  ST_FieldNumber_HasDupPkg = 30,
  ST_FieldNumber_HasQikuShadow = 31,
  ST_FieldNumber_PkgName = 32,
  ST_FieldNumber_AppName = 33,
  ST_FieldNumber_DataRoot = 34,
  ST_FieldNumber_EntranceClassLoaderName = 35,
  ST_FieldNumber_MmprocLoadedFilesArray = 36,
  ST_FieldNumber_RiskScanReqBuffer = 37,
  ST_FieldNumber_EnvBits = 38,
  ST_FieldNumber_InstalledPackageInfosArray = 40,
  ST_FieldNumber_AccessibilityClickCount = 41,
  ST_FieldNumber_ApkleadingMd5 = 42,
  ST_FieldNumber_ClientVersion = 43,
  ST_FieldNumber_Wxtag = 44,
  ST_FieldNumber_ClientIp = 45,
  ST_FieldNumber_Language = 46,
  ST_FieldNumber_IsInCalling = 47,
  ST_FieldNumber_IsSetScreenLock = 48,
  ST_FieldNumber_NeighborBssidlistArray = 49,
  ST_FieldNumber_IsWifiOpen = 50,
  ST_FieldNumber_HasXposedStackTrace = 51,
  ST_FieldNumber_XposedHookedMethods = 52,
  ST_FieldNumber_IsAdbswitchEnabled = 53,
  ST_FieldNumber_IsRunningByMonkey = 54,
  ST_FieldNumber_AppInstrumentationClassName = 55,
  ST_FieldNumber_AmsbinderClassName = 56,
  ST_FieldNumber_AmssingletonClassName = 57,
  ST_FieldNumber_IsVpnused = 58,
  ST_FieldNumber_IsVpnconnected = 59,
  ST_FieldNumber_Pcodes = 60,
  ST_FieldNumber_HasQcodes = 61,
  ST_FieldNumber_Rcodes0 = 62,
  ST_FieldNumber_Rcodes1 = 63,
  ST_FieldNumber_Stid = 64,
  ST_FieldNumber_KernelReleaseNumber = 65,
  ST_FieldNumber_UsbState = 66,
  ST_FieldNumber_ApkSignatureMd5 = 67,
  ST_FieldNumber_GoogleServiceState = 68,
  ST_FieldNumber_Timeval1 = 69,
  ST_FieldNumber_SpamInfoVersionSeq = 70,
  ST_FieldNumber_TbVersionCrc = 71,
  ST_FieldNumber_SystemFrameworkMd5 = 72,
  ST_FieldNumber_SystemFrameworkArmMd5 = 73,
  ST_FieldNumber_SystemFrameworkArm64Md5 = 74,
  ST_FieldNumber_SystemBinMd5 = 75,
  ST_FieldNumber_SoterUid = 76,
  ST_FieldNumber_WidevineDeviceId = 77,
  ST_FieldNumber_StorageId = 78,
  ST_FieldNumber_Oaid = 79,
  ST_FieldNumber_UnknownTag80 = 80,
  ST_FieldNumber_MagiskBitCheck = 81,
  ST_FieldNumber_FilesModifiedInFrameworkArray = 82,
  ST_FieldNumber_WeChatInstallTime = 83,
  ST_FieldNumber_SoftConfig = 84,
  ST_FieldNumber_SoftData = 85,
  ST_FieldNumber_Tag86 = 86,
  ST_FieldNumber_NetWorkInterface = 87,
  ST_FieldNumber_Tag88 = 88,
  ST_FieldNumber_Tag89 = 89,
  ST_FieldNumber_Tag90 = 90,
  ST_FieldNumber_Tag91 = 91,
  ST_FieldNumber_Tag92 = 92,
  ST_FieldNumber_Tag93 = 93,
  ST_FieldNumber_Tag94 = 94,
  ST_FieldNumber_Tag95 = 95,
  ST_FieldNumber_Tag96 = 96,
  ST_FieldNumber_Tag97 = 97,
  ST_FieldNumber_Tag98 = 98,
  ST_FieldNumber_Tag99 = 99,
  ST_FieldNumber_Tag100 = 100,
  ST_FieldNumber_Tag101 = 101,
  ST_FieldNumber_Tag102 = 102,
  ST_FieldNumber_Tag103 = 103,
  ST_FieldNumber_Tag104 = 104,
  ST_FieldNumber_Tag105 = 105,
  ST_FieldNumber_Tag106 = 106,
  ST_FieldNumber_Tag107 = 107,
  ST_FieldNumber_Tag108 = 108,
  ST_FieldNumber_Tag109 = 109,
  ST_FieldNumber_Tag110 = 110,
  ST_FieldNumber_Tag111 = 111,
  ST_FieldNumber_Tag112 = 112,
  ST_FieldNumber_Tag113 = 113,
  ST_FieldNumber_Tag114 = 114,
  ST_FieldNumber_Tag115 = 115,
  ST_FieldNumber_Uid = 116,
  ST_FieldNumber_Tag117 = 117,
};

@interface ST : GPBMessage

@property(nonatomic, readwrite) uint32_t isMorkLocOpen;

@property(nonatomic, readwrite) BOOL hasIsMorkLocOpen;
@property(nonatomic, readwrite) uint32_t msgLevel;

@property(nonatomic, readwrite) BOOL hasMsgLevel;
@property(nonatomic, readwrite) uint32_t isDbgConnected;

@property(nonatomic, readwrite) BOOL hasIsDbgConnected;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pkgHash3;
/** Test to see if @c pkgHash3 has been set. */
@property(nonatomic, readwrite) BOOL hasPkgHash3;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ratioFwVer;
/** Test to see if @c ratioFwVer has been set. */
@property(nonatomic, readwrite) BOOL hasRatioFwVer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *osRelVer;
/** Test to see if @c osRelVer has been set. */
@property(nonatomic, readwrite) BOOL hasOsRelVer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

@property(nonatomic, readwrite, copy, null_resettable) NSString *androidId;
/** Test to see if @c androidId has been set. */
@property(nonatomic, readwrite) BOOL hasAndroidId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *phoneSerial;
/** Test to see if @c phoneSerial has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneSerial;

@property(nonatomic, readwrite, copy, null_resettable) NSString *phoneModel;
/** Test to see if @c phoneModel has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneModel;

@property(nonatomic, readwrite) uint32_t cpuCoreCount;

@property(nonatomic, readwrite) BOOL hasCpuCoreCount;
@property(nonatomic, readwrite, copy, null_resettable) NSString *cpuHw;
/** Test to see if @c cpuHw has been set. */
@property(nonatomic, readwrite) BOOL hasCpuHw;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cpuFeatures;
/** Test to see if @c cpuFeatures has been set. */
@property(nonatomic, readwrite) BOOL hasCpuFeatures;

@property(nonatomic, readwrite, copy, null_resettable) NSString *selfMac;
/** Test to see if @c selfMac has been set. */
@property(nonatomic, readwrite) BOOL hasSelfMac;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ssid;
/** Test to see if @c ssid has been set. */
@property(nonatomic, readwrite) BOOL hasSsid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bssid;
/** Test to see if @c bssid has been set. */
@property(nonatomic, readwrite) BOOL hasBssid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *spInfo;
/** Test to see if @c spInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSpInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *apninfo;
/** Test to see if @c apninfo has been set. */
@property(nonatomic, readwrite) BOOL hasApninfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildFp;
/** Test to see if @c buildFp has been set. */
@property(nonatomic, readwrite) BOOL hasBuildFp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildBoard;
/** Test to see if @c buildBoard has been set. */
@property(nonatomic, readwrite) BOOL hasBuildBoard;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildBootloader;
/** Test to see if @c buildBootloader has been set. */
@property(nonatomic, readwrite) BOOL hasBuildBootloader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildBrand;
/** Test to see if @c buildBrand has been set. */
@property(nonatomic, readwrite) BOOL hasBuildBrand;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildDevice;
/** Test to see if @c buildDevice has been set. */
@property(nonatomic, readwrite) BOOL hasBuildDevice;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildHw;
/** Test to see if @c buildHw has been set. */
@property(nonatomic, readwrite) BOOL hasBuildHw;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildProduct;
/** Test to see if @c buildProduct has been set. */
@property(nonatomic, readwrite) BOOL hasBuildProduct;

@property(nonatomic, readwrite, copy, null_resettable) NSString *manufacturer;
/** Test to see if @c manufacturer has been set. */
@property(nonatomic, readwrite) BOOL hasManufacturer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *phoneNum;
/** Test to see if @c phoneNum has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *netType;
/** Test to see if @c netType has been set. */
@property(nonatomic, readwrite) BOOL hasNetType;

@property(nonatomic, readwrite) uint32_t isQemuEnv;

@property(nonatomic, readwrite) BOOL hasIsQemuEnv;
@property(nonatomic, readwrite) uint32_t hasDupPkg;

@property(nonatomic, readwrite) BOOL hasHasDupPkg;
@property(nonatomic, readwrite) uint32_t hasQikuShadow;

@property(nonatomic, readwrite) BOOL hasHasQikuShadow;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pkgName;
/** Test to see if @c pkgName has been set. */
@property(nonatomic, readwrite) BOOL hasPkgName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appName;
/** Test to see if @c appName has been set. */
@property(nonatomic, readwrite) BOOL hasAppName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *dataRoot;
/** Test to see if @c dataRoot has been set. */
@property(nonatomic, readwrite) BOOL hasDataRoot;

@property(nonatomic, readwrite, copy, null_resettable) NSString *entranceClassLoaderName;
/** Test to see if @c entranceClassLoaderName has been set. */
@property(nonatomic, readwrite) BOOL hasEntranceClassLoaderName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *mmprocLoadedFilesArray;
/** The number of items in @c mmprocLoadedFilesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mmprocLoadedFilesArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *riskScanReqBuffer;
/** Test to see if @c riskScanReqBuffer has been set. */
@property(nonatomic, readwrite) BOOL hasRiskScanReqBuffer;

@property(nonatomic, readwrite) uint32_t envBits;

@property(nonatomic, readwrite) BOOL hasEnvBits;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InstalledPackageInfo*> *installedPackageInfosArray;
/** The number of items in @c installedPackageInfosArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger installedPackageInfosArray_Count;

@property(nonatomic, readwrite) uint32_t accessibilityClickCount;

@property(nonatomic, readwrite) BOOL hasAccessibilityClickCount;
/** APK 前 102400 字节MD5 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *apkleadingMd5;
/** Test to see if @c apkleadingMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasApkleadingMd5;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientVersion;
/** Test to see if @c clientVersion has been set. */
@property(nonatomic, readwrite) BOOL hasClientVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *wxtag;
/** Test to see if @c wxtag has been set. */
@property(nonatomic, readwrite) BOOL hasWxtag;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientIp;
/** Test to see if @c clientIp has been set. */
@property(nonatomic, readwrite) BOOL hasClientIp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite) uint32_t isInCalling;

@property(nonatomic, readwrite) BOOL hasIsInCalling;
@property(nonatomic, readwrite) uint32_t isSetScreenLock;

@property(nonatomic, readwrite) BOOL hasIsSetScreenLock;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *neighborBssidlistArray;
/** The number of items in @c neighborBssidlistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger neighborBssidlistArray_Count;

@property(nonatomic, readwrite) uint32_t isWifiOpen;

@property(nonatomic, readwrite) BOOL hasIsWifiOpen;
@property(nonatomic, readwrite) uint32_t hasXposedStackTrace;

@property(nonatomic, readwrite) BOOL hasHasXposedStackTrace;
@property(nonatomic, readwrite, copy, null_resettable) NSString *xposedHookedMethods;
/** Test to see if @c xposedHookedMethods has been set. */
@property(nonatomic, readwrite) BOOL hasXposedHookedMethods;

@property(nonatomic, readwrite) uint32_t isAdbswitchEnabled;

@property(nonatomic, readwrite) BOOL hasIsAdbswitchEnabled;
@property(nonatomic, readwrite) uint32_t isRunningByMonkey;

@property(nonatomic, readwrite) BOOL hasIsRunningByMonkey;
@property(nonatomic, readwrite, copy, null_resettable) NSString *appInstrumentationClassName;
/** Test to see if @c appInstrumentationClassName has been set. */
@property(nonatomic, readwrite) BOOL hasAppInstrumentationClassName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *amsbinderClassName;
/** Test to see if @c amsbinderClassName has been set. */
@property(nonatomic, readwrite) BOOL hasAmsbinderClassName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *amssingletonClassName;
/** Test to see if @c amssingletonClassName has been set. */
@property(nonatomic, readwrite) BOOL hasAmssingletonClassName;

@property(nonatomic, readwrite) uint32_t isVpnused;

@property(nonatomic, readwrite) BOOL hasIsVpnused;
@property(nonatomic, readwrite) uint32_t isVpnconnected;

@property(nonatomic, readwrite) BOOL hasIsVpnconnected;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcodes;
/** Test to see if @c pcodes has been set. */
@property(nonatomic, readwrite) BOOL hasPcodes;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hasQcodes;
/** Test to see if @c hasQcodes has been set. */
@property(nonatomic, readwrite) BOOL hasHasQcodes;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rcodes0;
/** Test to see if @c rcodes0 has been set. */
@property(nonatomic, readwrite) BOOL hasRcodes0;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rcodes1;
/** Test to see if @c rcodes1 has been set. */
@property(nonatomic, readwrite) BOOL hasRcodes1;

@property(nonatomic, readwrite, copy, null_resettable) NSString *stid;
/** Test to see if @c stid has been set. */
@property(nonatomic, readwrite) BOOL hasStid;

/** uname -r //65: "4.4.153-perf+"  // uname获取   和/proc/version 数据有关联 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *kernelReleaseNumber;
/** Test to see if @c kernelReleaseNumber has been set. */
@property(nonatomic, readwrite) BOOL hasKernelReleaseNumber;

/** 66: 0 //sys/class/android_usb/android0/state  usb连上为2，未连接为1, c8方法false时为0。 【0：啥都没连，1是充电。可选择0、1都算比较真实。】 */
@property(nonatomic, readwrite) uint32_t usbState;

@property(nonatomic, readwrite) BOOL hasUsbState;
/** 67: "18c867f0717aa67b2ab7347505ba07ed"    //签名md5 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *apkSignatureMd5;
/** Test to see if @c apkSignatureMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasApkSignatureMd5;

/**
 * 68: 14 //目前测试情况： com.android.vending     8
 *       //com.google.android.gsf.login          1
 *       //com.google.android.gsf         2
 *       //com.google.android.gms         4
 *       //这四个包微信会去单独检测，如果存在则加上对应的数据， 测试miui11 （不包含com.google.android.gsf.login）为14  zui11也为14
 **/
@property(nonatomic, readwrite) uint32_t googleServiceState;

@property(nonatomic, readwrite) BOOL hasGoogleServiceState;
/** 69: 954783 // struct timeval 中微秒数值, gettimeofday获取. 0xffffff -> 4294963711 4294963711 4294963711 */
@property(nonatomic, readwrite) uint32_t timeval1;

@property(nonatomic, readwrite) BOOL hasTimeval1;
/** 708 、709 、【7010｜7011】 分别对应 123。 7012是4. 7015=6 */
@property(nonatomic, readwrite) uint32_t spamInfoVersionSeq;

@property(nonatomic, readwrite) BOOL hasSpamInfoVersionSeq;
/** 71: 556011293 //   可能与资源下载有关，不做pm clear 数据不会变化 不清楚，需另看。？ */
@property(nonatomic, readwrite) uint32_t tbVersionCrc;

@property(nonatomic, readwrite) BOOL hasTbVersionCrc;
/** 72: "a8de294f819234ee723148f6f3d003a6"//根据目录生成的md5 /system/framework/ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *systemFrameworkMd5;
/** Test to see if @c systemFrameworkMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasSystemFrameworkMd5;

/** 73: "a7cae61554b3c3596c073782ac5d69d1"//根据目录生成的md5 /system/framework/arm */
@property(nonatomic, readwrite, copy, null_resettable) NSString *systemFrameworkArmMd5;
/** Test to see if @c systemFrameworkArmMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasSystemFrameworkArmMd5;

/** 74: "0d922e4d36ecfdce95da6257798320ab"//根据目录生成的md5 /system/framework/arm64 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *systemFrameworkArm64Md5;
/** Test to see if @c systemFrameworkArm64Md5 has been set. */
@property(nonatomic, readwrite) BOOL hasSystemFrameworkArm64Md5;

/** 75: "22bb890943c1c673ccc5246b8a888819"//根据目录生成的md5 /system/bin */
@property(nonatomic, readwrite, copy, null_resettable) NSString *systemBinMd5;
/** Test to see if @c systemBinMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasSystemBinMd5;

/** 76: "" //soteruid 暂时写 "" 字符串。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *soterUid;
/** Test to see if @c soterUid has been set. */
@property(nonatomic, readwrite) BOOL hasSoterUid;

/** 77: "304334a25f546b42df65319978c5dbd2f8b42a3899f0973b0813735dd71795ad"  //java/util/UUID mediaDrm  getPropertyByteArray      => WidevineDeviceID //皖南会生成。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *widevineDeviceId;
/** Test to see if @c widevineDeviceId has been set. */
@property(nonatomic, readwrite) BOOL hasWidevineDeviceId;

/**
 * 78: "1535763623|1535763679\@664854922a684596|fa114cb9f80068d980d8d89e708bbddd\@8b1106cd1d6c932a|1b295f3b9b7ba7f5f8e0275a9a3c1c32"
 * stat -c "%X|%Y" /storage/emulated
 * stat -f -c "%i" /system/etc
 * stat -f -c "%i %b %f %a %c %d" /system/etc  => md5
 * stat -f -c "%i" /storage/emulated
 * stat -f -c "%i %b %f %a %c %d" /storage/emulated  => md5  以\@和|连接
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *storageId;
/** Test to see if @c storageId has been set. */
@property(nonatomic, readwrite) BOOL hasStorageId;

/** 79: ""// c14 ?    OAID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *oaid;
/** Test to see if @c oaid has been set. */
@property(nonatomic, readwrite) BOOL hasOaid;

/** 80: 0 // 一直为0 不知道是啥 */
@property(nonatomic, readwrite) uint32_t unknownTag80;

@property(nonatomic, readwrite) BOOL hasUnknownTag80;
/** 81: 242379 // struct timeval 中微秒数值, gettimeofday获取. 0xffffffff -> 4294966271 4294966271 4294966271 第二遍 4294967295 */
@property(nonatomic, readwrite) uint32_t magiskBitCheck;

@property(nonatomic, readwrite) BOOL hasMagiskBitCheck;
/** 82: 检测framework中文件修改时间是否有变化   fstatat64获取修改时间判断。不该有此值，只有非法时才设置。 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *filesModifiedInFrameworkArray;
/** The number of items in @c filesModifiedInFrameworkArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger filesModifiedInFrameworkArray_Count;

/** 微信安装时间. */
@property(nonatomic, readwrite) uint32_t weChatInstallTime;

@property(nonatomic, readwrite) BOOL hasWeChatInstallTime;
/** 7015 开始 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *softConfig;
/** Test to see if @c softConfig has been set. */
@property(nonatomic, readwrite) BOOL hasSoftConfig;

@property(nonatomic, readwrite, copy, null_resettable) NSData *softData;
/** Test to see if @c softData has been set. */
@property(nonatomic, readwrite) BOOL hasSoftData;

/** 7014 struct timeval 中微秒数值, gettimeofday获取. 开始 0xffffffff -> 4294966955 4294966955 4294966955 */
@property(nonatomic, readwrite) uint32_t tag86;

@property(nonatomic, readwrite) BOOL hasTag86;
@property(nonatomic, readwrite, copy, null_resettable) NSString *netWorkInterface;
/** Test to see if @c netWorkInterface has been set. */
@property(nonatomic, readwrite) BOOL hasNetWorkInterface;

@property(nonatomic, readwrite) uint32_t tag88;

@property(nonatomic, readwrite) BOOL hasTag88;
@property(nonatomic, readwrite) uint32_t tag89;

@property(nonatomic, readwrite) BOOL hasTag89;
@property(nonatomic, readwrite) uint32_t tag90;

@property(nonatomic, readwrite) BOOL hasTag90;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag91;
/** Test to see if @c tag91 has been set. */
@property(nonatomic, readwrite) BOOL hasTag91;

@property(nonatomic, readwrite) uint32_t tag92;

@property(nonatomic, readwrite) BOOL hasTag92;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag93;
/** Test to see if @c tag93 has been set. */
@property(nonatomic, readwrite) BOOL hasTag93;

@property(nonatomic, readwrite) uint32_t tag94;

@property(nonatomic, readwrite) BOOL hasTag94;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag95;
/** Test to see if @c tag95 has been set. */
@property(nonatomic, readwrite) BOOL hasTag95;

@property(nonatomic, readwrite) uint32_t tag96;

@property(nonatomic, readwrite) BOOL hasTag96;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag97;
/** Test to see if @c tag97 has been set. */
@property(nonatomic, readwrite) BOOL hasTag97;

@property(nonatomic, readwrite) uint32_t tag98;

@property(nonatomic, readwrite) BOOL hasTag98;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag99;
/** Test to see if @c tag99 has been set. */
@property(nonatomic, readwrite) BOOL hasTag99;

@property(nonatomic, readwrite) uint32_t tag100;

@property(nonatomic, readwrite) BOOL hasTag100;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag101;
/** Test to see if @c tag101 has been set. */
@property(nonatomic, readwrite) BOOL hasTag101;

@property(nonatomic, readwrite) uint32_t tag102;

@property(nonatomic, readwrite) BOOL hasTag102;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag103;
/** Test to see if @c tag103 has been set. */
@property(nonatomic, readwrite) BOOL hasTag103;

@property(nonatomic, readwrite) uint32_t tag104;

@property(nonatomic, readwrite) BOOL hasTag104;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag105;
/** Test to see if @c tag105 has been set. */
@property(nonatomic, readwrite) BOOL hasTag105;

@property(nonatomic, readwrite) uint32_t tag106;

@property(nonatomic, readwrite) BOOL hasTag106;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag107;
/** Test to see if @c tag107 has been set. */
@property(nonatomic, readwrite) BOOL hasTag107;

@property(nonatomic, readwrite) uint32_t tag108;

@property(nonatomic, readwrite) BOOL hasTag108;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag109;
/** Test to see if @c tag109 has been set. */
@property(nonatomic, readwrite) BOOL hasTag109;

@property(nonatomic, readwrite) uint32_t tag110;

@property(nonatomic, readwrite) BOOL hasTag110;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag111;
/** Test to see if @c tag111 has been set. */
@property(nonatomic, readwrite) BOOL hasTag111;

@property(nonatomic, readwrite) uint32_t tag112;

@property(nonatomic, readwrite) BOOL hasTag112;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag113;
/** Test to see if @c tag113 has been set. */
@property(nonatomic, readwrite) BOOL hasTag113;

@property(nonatomic, readwrite) uint32_t tag114;

@property(nonatomic, readwrite) BOOL hasTag114;
@property(nonatomic, readwrite) uint32_t tag115;

@property(nonatomic, readwrite) BOOL hasTag115;
/** getuid32() */
@property(nonatomic, readwrite) uint32_t uid;

@property(nonatomic, readwrite) BOOL hasUid;
@property(nonatomic, readwrite) uint32_t tag117;

@property(nonatomic, readwrite) BOOL hasTag117;
@end

#pragma mark - ClientSpamInfo

typedef GPB_ENUM(ClientSpamInfo_FieldNumber) {
  ClientSpamInfo_FieldNumber_Ccdcc = 1,
  ClientSpamInfo_FieldNumber_Ccdts = 2,
  ClientSpamInfo_FieldNumber_St = 3,
};

@interface ClientSpamInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t ccdcc;

@property(nonatomic, readwrite) BOOL hasCcdcc;
@property(nonatomic, readwrite) uint32_t ccdts;

@property(nonatomic, readwrite) BOOL hasCcdts;
@property(nonatomic, readwrite, strong, null_resettable) ST *st;
/** Test to see if @c st has been set. */
@property(nonatomic, readwrite) BOOL hasSt;

@end

#pragma mark - WCSTF

typedef GPB_ENUM(WCSTF_FieldNumber) {
  WCSTF_FieldNumber_St = 1,
  WCSTF_FieldNumber_Et = 2,
  WCSTF_FieldNumber_Cc = 3,
  WCSTF_FieldNumber_CtArray = 4,
};

@interface WCSTF : GPBMessage

@property(nonatomic, readwrite) uint64_t st;

@property(nonatomic, readwrite) BOOL hasSt;
@property(nonatomic, readwrite) uint32_t et;

@property(nonatomic, readwrite) BOOL hasEt;
@property(nonatomic, readwrite) uint64_t cc;

@property(nonatomic, readwrite) BOOL hasCc;
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *ctArray;
/** The number of items in @c ctArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ctArray_Count;

@end

#pragma mark - WCSTE

typedef GPB_ENUM(WCSTE_FieldNumber) {
  WCSTE_FieldNumber_Context = 1,
  WCSTE_FieldNumber_St = 2,
  WCSTE_FieldNumber_Et = 3,
  WCSTE_FieldNumber_Iec = 4,
  WCSTE_FieldNumber_Tec = 5,
  WCSTE_FieldNumber_Asst = 6,
  WCSTE_FieldNumber_Pss = 7,
  WCSTE_FieldNumber_Tlmj = 8,
  WCSTE_FieldNumber_Tlmn = 9,
  WCSTE_FieldNumber_Thmj = 10,
  WCSTE_FieldNumber_Thmn = 11,
  WCSTE_FieldNumber_Sz = 12,
};

@interface WCSTE : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *context;
/** Test to see if @c context has been set. */
@property(nonatomic, readwrite) BOOL hasContext;

@property(nonatomic, readwrite) uint32_t st;

@property(nonatomic, readwrite) BOOL hasSt;
@property(nonatomic, readwrite) uint32_t et;

@property(nonatomic, readwrite) BOOL hasEt;
@property(nonatomic, readwrite) uint32_t iec;

@property(nonatomic, readwrite) BOOL hasIec;
@property(nonatomic, readwrite) uint32_t tec;

@property(nonatomic, readwrite) BOOL hasTec;
@property(nonatomic, readwrite) uint32_t asst;

@property(nonatomic, readwrite) BOOL hasAsst;
@property(nonatomic, readwrite) uint64_t pss;

@property(nonatomic, readwrite) BOOL hasPss;
@property(nonatomic, readwrite) uint64_t tlmj;

@property(nonatomic, readwrite) BOOL hasTlmj;
@property(nonatomic, readwrite) uint64_t tlmn;

@property(nonatomic, readwrite) BOOL hasTlmn;
@property(nonatomic, readwrite) uint64_t thmj;

@property(nonatomic, readwrite) BOOL hasThmj;
@property(nonatomic, readwrite) uint64_t thmn;

@property(nonatomic, readwrite) BOOL hasThmn;
@property(nonatomic, readwrite) uint64_t sz;

@property(nonatomic, readwrite) BOOL hasSz;
@end

#pragma mark - FPKeyVal

typedef GPB_ENUM(FPKeyVal_FieldNumber) {
  FPKeyVal_FieldNumber_Key = 1,
  FPKeyVal_FieldNumber_Value = 2,
};

@interface FPKeyVal : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

#pragma mark - FPKeyVals

typedef GPB_ENUM(FPKeyVals_FieldNumber) {
  FPKeyVals_FieldNumber_KeyValArray = 1,
};

@interface FPKeyVals : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<FPKeyVal*> *keyValArray;
/** The number of items in @c keyValArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keyValArray_Count;

@end

#pragma mark - FPDevice

typedef GPB_ENUM(FPDevice_FieldNumber) {
  FPDevice_FieldNumber_Keyvals = 1,
  FPDevice_FieldNumber_Unknown2 = 2,
};

@interface FPDevice : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) FPKeyVals *keyvals;
/** Test to see if @c keyvals has been set. */
@property(nonatomic, readwrite) BOOL hasKeyvals;

/** 未知 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *unknown2;
/** Test to see if @c unknown2 has been set. */
@property(nonatomic, readwrite) BOOL hasUnknown2;

@end

#pragma mark - SpamInfoEncrypedResult

typedef GPB_ENUM(SpamInfoEncrypedResult_FieldNumber) {
  SpamInfoEncrypedResult_FieldNumber_Version = 1,
  SpamInfoEncrypedResult_FieldNumber_Type = 2,
  SpamInfoEncrypedResult_FieldNumber_EncrypedData = 3,
  SpamInfoEncrypedResult_FieldNumber_Timestamp = 4,
  SpamInfoEncrypedResult_FieldNumber_Tag5 = 5,
  SpamInfoEncrypedResult_FieldNumber_Tag6 = 6,
};

/**
 *  用于加密完填充字端用。
 **/
@interface SpamInfoEncrypedResult : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;
/** Test to see if @c version has been set. */
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, copy, null_resettable) NSData *encrypedData;
/** Test to see if @c encrypedData has been set. */
@property(nonatomic, readwrite) BOOL hasEncrypedData;

/** 706没有 , 7011有 */
@property(nonatomic, readwrite) uint32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
/** 5 */
@property(nonatomic, readwrite) uint32_t tag5;

@property(nonatomic, readwrite) BOOL hasTag5;
/** 0 */
@property(nonatomic, readwrite) uint32_t tag6;

@property(nonatomic, readwrite) BOOL hasTag6;
@end

#pragma mark - CryptoData

typedef GPB_ENUM(CryptoData_FieldNumber) {
  CryptoData_FieldNumber_Version = 1,
  CryptoData_FieldNumber_Type = 2,
  CryptoData_FieldNumber_EncryptData = 3,
  CryptoData_FieldNumber_Timestamp = 4,
  CryptoData_FieldNumber_Unknown5 = 5,
  CryptoData_FieldNumber_Unknown6 = 6,
};

@interface CryptoData : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *version;
/** Test to see if @c version has been set. */
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, copy, null_resettable) NSData *encryptData;
/** Test to see if @c encryptData has been set. */
@property(nonatomic, readwrite) BOOL hasEncryptData;

@property(nonatomic, readwrite) uint32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@property(nonatomic, readwrite) uint32_t unknown5;

@property(nonatomic, readwrite) BOOL hasUnknown5;
@property(nonatomic, readwrite) uint32_t unknown6;

@property(nonatomic, readwrite) BOOL hasUnknown6;
@end

#pragma mark - SpamBuff

typedef GPB_ENUM(SpamBuff_FieldNumber) {
  SpamBuff_FieldNumber_Soft = 2,
  SpamBuff_FieldNumber_Devicetoken = 3,
  SpamBuff_FieldNumber_Timestamp = 4,
};

@interface SpamBuff : GPBMessage

/** 还不清楚这个数据是干啥用的，下次刷新token会用吗? 是的，用来计算类似于md5之类的那个东西。 */
@property(nonatomic, readwrite, strong, null_resettable) SpamBuff_Soft *soft;
/** Test to see if @c soft has been set. */
@property(nonatomic, readwrite) BOOL hasSoft;

@property(nonatomic, readwrite, copy, null_resettable) NSString *devicetoken;
/** Test to see if @c devicetoken has been set. */
@property(nonatomic, readwrite) BOOL hasDevicetoken;

@property(nonatomic, readwrite) uint32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@end

#pragma mark - SpamBuff_Soft

typedef GPB_ENUM(SpamBuff_Soft_FieldNumber) {
  SpamBuff_Soft_FieldNumber_SoftData = 1,
  SpamBuff_Soft_FieldNumber_SoftConfig = 2,
};

@interface SpamBuff_Soft : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *softData;
/** Test to see if @c softData has been set. */
@property(nonatomic, readwrite) BOOL hasSoftData;

@property(nonatomic, readwrite, copy, null_resettable) NSData *softConfig;
/** Test to see if @c softConfig has been set. */
@property(nonatomic, readwrite) BOOL hasSoftConfig;

@end

#pragma mark - DeviceToken

typedef GPB_ENUM(DeviceToken_FieldNumber) {
  DeviceToken_FieldNumber_Tag1 = 1,
  DeviceToken_FieldNumber_Tag2 = 2,
  DeviceToken_FieldNumber_Token = 3,
  DeviceToken_FieldNumber_Timestamp = 4,
  DeviceToken_FieldNumber_Tag5 = 5,
  DeviceToken_FieldNumber_Tag6 = 6,
};

@interface DeviceToken : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *tag1;
/** Test to see if @c tag1 has been set. */
@property(nonatomic, readwrite) BOOL hasTag1;

@property(nonatomic, readwrite) uint32_t tag2;

@property(nonatomic, readwrite) BOOL hasTag2;
@property(nonatomic, readwrite, strong, null_resettable) DeviceToken_Token *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite) uint32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@property(nonatomic, readwrite) uint32_t tag5;

@property(nonatomic, readwrite) BOOL hasTag5;
@property(nonatomic, readwrite) uint32_t tag6;

@property(nonatomic, readwrite) BOOL hasTag6;
@end

#pragma mark - DeviceToken_Token

typedef GPB_ENUM(DeviceToken_Token_FieldNumber) {
  DeviceToken_Token_FieldNumber_Devicetoken = 1,
};

@interface DeviceToken_Token : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *devicetoken;
/** Test to see if @c devicetoken has been set. */
@property(nonatomic, readwrite) BOOL hasDevicetoken;

@end

#pragma mark - ClientSpamInfo_IOS

typedef GPB_ENUM(ClientSpamInfo_IOS_FieldNumber) {
  ClientSpamInfo_IOS_FieldNumber_Ccdcc = 1,
  ClientSpamInfo_IOS_FieldNumber_Ccdts = 2,
  ClientSpamInfo_IOS_FieldNumber_Content = 3,
};

@interface ClientSpamInfo_IOS : GPBMessage

@property(nonatomic, readwrite) uint32_t ccdcc;

@property(nonatomic, readwrite) BOOL hasCcdcc;
@property(nonatomic, readwrite) uint32_t ccdts;

@property(nonatomic, readwrite) BOOL hasCcdts;
@property(nonatomic, readwrite, strong, null_resettable) ClientSpamInfo_IOS_Content *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

@end

#pragma mark - ClientSpamInfo_IOS_Content

typedef GPB_ENUM(ClientSpamInfo_IOS_Content_FieldNumber) {
  ClientSpamInfo_IOS_Content_FieldNumber_Tag3 = 3,
  ClientSpamInfo_IOS_Content_FieldNumber_Tag51 = 11,
};

@interface ClientSpamInfo_IOS_Content : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *tag3;
/** Test to see if @c tag3 has been set. */
@property(nonatomic, readwrite) BOOL hasTag3;

@property(nonatomic, readwrite, copy, null_resettable) NSData *tag51;
/** Test to see if @c tag51 has been set. */
@property(nonatomic, readwrite) BOOL hasTag51;

@end

#pragma mark - wcaes

typedef GPB_ENUM(wcaes_FieldNumber) {
  wcaes_FieldNumber_Type = 1,
  wcaes_FieldNumber_Iv = 2,
  wcaes_FieldNumber_Len = 3,
  wcaes_FieldNumber_Mztkey = 4,
  wcaes_FieldNumber_Mztkeyvalue = 5,
  wcaes_FieldNumber_Unkown6 = 6,
  wcaes_FieldNumber_Unkown7 = 7,
  wcaes_FieldNumber_Unkown8 = 8,
  wcaes_FieldNumber_Unkown9 = 9,
  wcaes_FieldNumber_Tablekey = 10,
  wcaes_FieldNumber_Unkown11 = 11,
  wcaes_FieldNumber_Tablevalue = 12,
  wcaes_FieldNumber_Unkown13 = 13,
  wcaes_FieldNumber_Unkown14 = 14,
  wcaes_FieldNumber_Unkown15 = 15,
  wcaes_FieldNumber_Unkown16 = 16,
  wcaes_FieldNumber_Unkown17 = 17,
  wcaes_FieldNumber_Unkown18 = 18,
  wcaes_FieldNumber_Unkown19 = 19,
  wcaes_FieldNumber_Unkown20 = 20,
  wcaes_FieldNumber_Unkown21 = 21,
  wcaes_FieldNumber_Unkown22 = 22,
  wcaes_FieldNumber_Unkown23 = 23,
  wcaes_FieldNumber_Unkown24 = 24,
  wcaes_FieldNumber_Unkown25 = 25,
};

@interface wcaes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *type;
/** Test to see if @c type has been set. */
@property(nonatomic, readwrite) BOOL hasType;

@property(nonatomic, readwrite, copy, null_resettable) NSData *iv;
/** Test to see if @c iv has been set. */
@property(nonatomic, readwrite) BOOL hasIv;

@property(nonatomic, readwrite) int32_t len;

@property(nonatomic, readwrite) BOOL hasLen;
@property(nonatomic, readwrite, copy, null_resettable) NSData *mztkey;
/** Test to see if @c mztkey has been set. */
@property(nonatomic, readwrite) BOOL hasMztkey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *mztkeyvalue;
/** Test to see if @c mztkeyvalue has been set. */
@property(nonatomic, readwrite) BOOL hasMztkeyvalue;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown6;
/** Test to see if @c unkown6 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown6;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown7;
/** Test to see if @c unkown7 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown7;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown8;
/** Test to see if @c unkown8 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown8;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown9;
/** Test to see if @c unkown9 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown9;

@property(nonatomic, readwrite, copy, null_resettable) NSData *tablekey;
/** Test to see if @c tablekey has been set. */
@property(nonatomic, readwrite) BOOL hasTablekey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown11;
/** Test to see if @c unkown11 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown11;

@property(nonatomic, readwrite, copy, null_resettable) NSData *tablevalue;
/** Test to see if @c tablevalue has been set. */
@property(nonatomic, readwrite) BOOL hasTablevalue;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown13;
/** Test to see if @c unkown13 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown13;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown14;
/** Test to see if @c unkown14 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown14;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown15;
/** Test to see if @c unkown15 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown15;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown16;
/** Test to see if @c unkown16 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown16;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown17;
/** Test to see if @c unkown17 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown17;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown18;
/** Test to see if @c unkown18 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown18;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown19;
/** Test to see if @c unkown19 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown19;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown20;
/** Test to see if @c unkown20 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown20;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown21;
/** Test to see if @c unkown21 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown21;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown22;
/** Test to see if @c unkown22 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown22;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown23;
/** Test to see if @c unkown23 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown23;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown24;
/** Test to see if @c unkown24 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown24;

@property(nonatomic, readwrite, copy, null_resettable) NSData *unkown25;
/** Test to see if @c unkown25 has been set. */
@property(nonatomic, readwrite) BOOL hasUnkown25;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
