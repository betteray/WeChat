// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmgame.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BaseRequest;
@class BaseResponse;
@class CmdList;
@class DelGameMsgRsp;
@class EnemyGameKilled;
@class GameAnnouncementInfo;
@class GameConsumeProps;
@class GameMsg;
@class GamePropsInfo;
@class GameUserPropsInfo;
@class SKBuiltinBuffer_t;
@class SKBuiltinString_t;
@class UserGameAchieveInfo;
@class UserGameInfo;
@class UserGameWishInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MmgameRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MmgameRoot : GPBRootObject
@end

#pragma mark - EnemyGameInfo

typedef GPB_ENUM(EnemyGameInfo_FieldNumber) {
  EnemyGameInfo_FieldNumber_Type = 1,
  EnemyGameInfo_FieldNumber_Score = 2,
};

@interface EnemyGameInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) uint32_t score;

@property(nonatomic, readwrite) BOOL hasScore;
@end

#pragma mark - EnemyGameKilled

typedef GPB_ENUM(EnemyGameKilled_FieldNumber) {
  EnemyGameKilled_FieldNumber_Type = 1,
  EnemyGameKilled_FieldNumber_Count = 2,
  EnemyGameKilled_FieldNumber_GeneralCount = 3,
  EnemyGameKilled_FieldNumber_UsedCount = 4,
};

@interface EnemyGameKilled : GPBMessage

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite) uint32_t generalCount;

@property(nonatomic, readwrite) BOOL hasGeneralCount;
@property(nonatomic, readwrite) uint32_t usedCount;

@property(nonatomic, readwrite) BOOL hasUsedCount;
@end

#pragma mark - UserGameInfo

typedef GPB_ENUM(UserGameInfo_FieldNumber) {
  UserGameInfo_FieldNumber_UserName = 1,
  UserGameInfo_FieldNumber_NickName = 2,
  UserGameInfo_FieldNumber_HeadImageURL = 3,
};

@interface UserGameInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *headImageURL;
/** Test to see if @c headImageURL has been set. */
@property(nonatomic, readwrite) BOOL hasHeadImageURL;

@end

#pragma mark - UserGameAchieveInfo

typedef GPB_ENUM(UserGameAchieveInfo_FieldNumber) {
  UserGameAchieveInfo_FieldNumber_UserInfo = 1,
  UserGameAchieveInfo_FieldNumber_Score = 2,
  UserGameAchieveInfo_FieldNumber_Rank = 3,
};

@interface UserGameAchieveInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UserGameInfo *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

@property(nonatomic, readwrite) uint32_t score;

@property(nonatomic, readwrite) BOOL hasScore;
@property(nonatomic, readwrite) uint32_t rank;

@property(nonatomic, readwrite) BOOL hasRank;
@end

#pragma mark - UserGameWishInfo

typedef GPB_ENUM(UserGameWishInfo_FieldNumber) {
  UserGameWishInfo_FieldNumber_UserInfo = 1,
};

@interface UserGameWishInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UserGameInfo *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

@end

#pragma mark - GamePropsInfo

typedef GPB_ENUM(GamePropsInfo_FieldNumber) {
  GamePropsInfo_FieldNumber_PropsId = 1,
  GamePropsInfo_FieldNumber_IconURL = 2,
  GamePropsInfo_FieldNumber_Name = 3,
  GamePropsInfo_FieldNumber_Desc = 4,
  GamePropsInfo_FieldNumber_Type = 5,
};

@interface GamePropsInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t propsId;

@property(nonatomic, readwrite) BOOL hasPropsId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *iconURL;
/** Test to see if @c iconURL has been set. */
@property(nonatomic, readwrite) BOOL hasIconURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;
/** Test to see if @c desc has been set. */
@property(nonatomic, readwrite) BOOL hasDesc;

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@end

#pragma mark - GameUserPropsInfo

typedef GPB_ENUM(GameUserPropsInfo_FieldNumber) {
  GameUserPropsInfo_FieldNumber_PropsId = 1,
  GameUserPropsInfo_FieldNumber_Count = 2,
};

@interface GameUserPropsInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t propsId;

@property(nonatomic, readwrite) BOOL hasPropsId;
@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@end

#pragma mark - GameAnnouncementInfo

typedef GPB_ENUM(GameAnnouncementInfo_FieldNumber) {
  GameAnnouncementInfo_FieldNumber_Style = 1,
  GameAnnouncementInfo_FieldNumber_Title = 2,
  GameAnnouncementInfo_FieldNumber_Desc = 3,
};

@interface GameAnnouncementInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t style;

@property(nonatomic, readwrite) BOOL hasStyle;
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;
/** Test to see if @c desc has been set. */
@property(nonatomic, readwrite) BOOL hasDesc;

@end

#pragma mark - GameConsumeProps

typedef GPB_ENUM(GameConsumeProps_FieldNumber) {
  GameConsumeProps_FieldNumber_PropsId = 1,
  GameConsumeProps_FieldNumber_ConsumeCount = 2,
};

@interface GameConsumeProps : GPBMessage

@property(nonatomic, readwrite) uint32_t propsId;

@property(nonatomic, readwrite) BOOL hasPropsId;
@property(nonatomic, readwrite) int32_t consumeCount;

@property(nonatomic, readwrite) BOOL hasConsumeCount;
@end

#pragma mark - GameInitReq

typedef GPB_ENUM(GameInitReq_FieldNumber) {
  GameInitReq_FieldNumber_BaseRequest = 1,
  GameInitReq_FieldNumber_AppId = 2,
};

@interface GameInitReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@end

#pragma mark - GameInitResp

typedef GPB_ENUM(GameInitResp_FieldNumber) {
  GameInitResp_FieldNumber_BaseResponse = 1,
  GameInitResp_FieldNumber_LifeNum = 2,
  GameInitResp_FieldNumber_GameNumerConfig = 3,
  GameInitResp_FieldNumber_CheckLeftTime = 4,
  GameInitResp_FieldNumber_Token = 5,
  GameInitResp_FieldNumber_FriendCount = 6,
  GameInitResp_FieldNumber_FriendListArray = 7,
  GameInitResp_FieldNumber_WishCount = 8,
  GameInitResp_FieldNumber_WishListArray = 9,
  GameInitResp_FieldNumber_GamePropsCount = 10,
  GameInitResp_FieldNumber_GamePropsListArray = 11,
  GameInitResp_FieldNumber_GameAnnouncementCount = 12,
  GameInitResp_FieldNumber_GameAnnouncementListArray = 13,
  GameInitResp_FieldNumber_PropsViewTip = 14,
  GameInitResp_FieldNumber_RankViewTip = 15,
  GameInitResp_FieldNumber_GameCoinCount = 16,
  GameInitResp_FieldNumber_ProductIdCount = 17,
  GameInitResp_FieldNumber_ProductIdListArray = 18,
  GameInitResp_FieldNumber_BuyEngineOilWording = 19,
  GameInitResp_FieldNumber_OilPrice = 20,
  GameInitResp_FieldNumber_OilCurrency = 21,
};

@interface GameInitResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t lifeNum;

@property(nonatomic, readwrite) BOOL hasLifeNum;
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameNumerConfig;
/** Test to see if @c gameNumerConfig has been set. */
@property(nonatomic, readwrite) BOOL hasGameNumerConfig;

@property(nonatomic, readwrite) uint32_t checkLeftTime;

@property(nonatomic, readwrite) BOOL hasCheckLeftTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite) int32_t friendCount;

@property(nonatomic, readwrite) BOOL hasFriendCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGameInfo*> *friendListArray;
/** The number of items in @c friendListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger friendListArray_Count;

@property(nonatomic, readwrite) int32_t wishCount;

@property(nonatomic, readwrite) BOOL hasWishCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGameWishInfo*> *wishListArray;
/** The number of items in @c wishListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger wishListArray_Count;

@property(nonatomic, readwrite) int32_t gamePropsCount;

@property(nonatomic, readwrite) BOOL hasGamePropsCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameUserPropsInfo*> *gamePropsListArray;
/** The number of items in @c gamePropsListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gamePropsListArray_Count;

@property(nonatomic, readwrite) int32_t gameAnnouncementCount;

@property(nonatomic, readwrite) BOOL hasGameAnnouncementCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameAnnouncementInfo*> *gameAnnouncementListArray;
/** The number of items in @c gameAnnouncementListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gameAnnouncementListArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *propsViewTip;
/** Test to see if @c propsViewTip has been set. */
@property(nonatomic, readwrite) BOOL hasPropsViewTip;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rankViewTip;
/** Test to see if @c rankViewTip has been set. */
@property(nonatomic, readwrite) BOOL hasRankViewTip;

@property(nonatomic, readwrite) uint32_t gameCoinCount;

@property(nonatomic, readwrite) BOOL hasGameCoinCount;
@property(nonatomic, readwrite) uint32_t productIdCount;

@property(nonatomic, readwrite) BOOL hasProductIdCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SKBuiltinString_t*> *productIdListArray;
/** The number of items in @c productIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger productIdListArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buyEngineOilWording;
/** Test to see if @c buyEngineOilWording has been set. */
@property(nonatomic, readwrite) BOOL hasBuyEngineOilWording;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oilPrice;
/** Test to see if @c oilPrice has been set. */
@property(nonatomic, readwrite) BOOL hasOilPrice;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oilCurrency;
/** Test to see if @c oilCurrency has been set. */
@property(nonatomic, readwrite) BOOL hasOilCurrency;

@end

#pragma mark - GameEndReq

typedef GPB_ENUM(GameEndReq_FieldNumber) {
  GameEndReq_FieldNumber_BaseRequest = 1,
  GameEndReq_FieldNumber_AppId = 2,
  GameEndReq_FieldNumber_Count = 3,
  GameEndReq_FieldNumber_EnemyKilledArray = 4,
  GameEndReq_FieldNumber_LocalScore = 5,
  GameEndReq_FieldNumber_ConsumeTime = 6,
  GameEndReq_FieldNumber_Token = 7,
  GameEndReq_FieldNumber_DeadCount = 8,
  GameEndReq_FieldNumber_GameConsumePropsCount = 9,
  GameEndReq_FieldNumber_GameConsumePropsListArray = 10,
  GameEndReq_FieldNumber_GameStartTime = 11,
  GameEndReq_FieldNumber_GameEndTime = 12,
  GameEndReq_FieldNumber_ShieldNum = 13,
  GameEndReq_FieldNumber_TotalShots = 14,
  GameEndReq_FieldNumber_GameCoinCount = 15,
  GameEndReq_FieldNumber_ClientUseReviveNum = 16,
};

@interface GameEndReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EnemyGameKilled*> *enemyKilledArray;
/** The number of items in @c enemyKilledArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger enemyKilledArray_Count;

@property(nonatomic, readwrite) uint32_t localScore;

@property(nonatomic, readwrite) BOOL hasLocalScore;
@property(nonatomic, readwrite) uint32_t consumeTime;

@property(nonatomic, readwrite) BOOL hasConsumeTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite) uint32_t deadCount;

@property(nonatomic, readwrite) BOOL hasDeadCount;
@property(nonatomic, readwrite) int32_t gameConsumePropsCount;

@property(nonatomic, readwrite) BOOL hasGameConsumePropsCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameConsumeProps*> *gameConsumePropsListArray;
/** The number of items in @c gameConsumePropsListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gameConsumePropsListArray_Count;

@property(nonatomic, readwrite) uint32_t gameStartTime;

@property(nonatomic, readwrite) BOOL hasGameStartTime;
@property(nonatomic, readwrite) uint32_t gameEndTime;

@property(nonatomic, readwrite) BOOL hasGameEndTime;
@property(nonatomic, readwrite) uint32_t shieldNum;

@property(nonatomic, readwrite) BOOL hasShieldNum;
@property(nonatomic, readwrite) uint32_t totalShots;

@property(nonatomic, readwrite) BOOL hasTotalShots;
@property(nonatomic, readwrite) uint32_t gameCoinCount;

@property(nonatomic, readwrite) BOOL hasGameCoinCount;
@property(nonatomic, readwrite) uint32_t clientUseReviveNum;

@property(nonatomic, readwrite) BOOL hasClientUseReviveNum;
@end

#pragma mark - GameEndResp

typedef GPB_ENUM(GameEndResp_FieldNumber) {
  GameEndResp_FieldNumber_BaseResponse = 1,
  GameEndResp_FieldNumber_Score = 2,
  GameEndResp_FieldNumber_Achievement = 3,
  GameEndResp_FieldNumber_Rank = 4,
  GameEndResp_FieldNumber_LifeNum = 5,
  GameEndResp_FieldNumber_CheckLeftTime = 6,
  GameEndResp_FieldNumber_Count = 7,
  GameEndResp_FieldNumber_RankListArray = 8,
  GameEndResp_FieldNumber_PropsViewTip = 11,
  GameEndResp_FieldNumber_RankViewTip = 12,
  GameEndResp_FieldNumber_GameCoinCount = 13,
};

@interface GameEndResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t score;

@property(nonatomic, readwrite) BOOL hasScore;
@property(nonatomic, readwrite, copy, null_resettable) NSString *achievement;
/** Test to see if @c achievement has been set. */
@property(nonatomic, readwrite) BOOL hasAchievement;

@property(nonatomic, readwrite) uint32_t rank;

@property(nonatomic, readwrite) BOOL hasRank;
@property(nonatomic, readwrite) uint32_t lifeNum;

@property(nonatomic, readwrite) BOOL hasLifeNum;
@property(nonatomic, readwrite) uint32_t checkLeftTime;

@property(nonatomic, readwrite) BOOL hasCheckLeftTime;
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGameAchieveInfo*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *propsViewTip;
/** Test to see if @c propsViewTip has been set. */
@property(nonatomic, readwrite) BOOL hasPropsViewTip;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rankViewTip;
/** Test to see if @c rankViewTip has been set. */
@property(nonatomic, readwrite) BOOL hasRankViewTip;

@property(nonatomic, readwrite) uint32_t gameCoinCount;

@property(nonatomic, readwrite) BOOL hasGameCoinCount;
@end

#pragma mark - GameRankListReq

typedef GPB_ENUM(GameRankListReq_FieldNumber) {
  GameRankListReq_FieldNumber_BaseRequest = 1,
  GameRankListReq_FieldNumber_AppId = 2,
};

@interface GameRankListReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@end

#pragma mark - GameRankListResp

typedef GPB_ENUM(GameRankListResp_FieldNumber) {
  GameRankListResp_FieldNumber_BaseResponse = 1,
  GameRankListResp_FieldNumber_Count = 2,
  GameRankListResp_FieldNumber_RankListArray = 3,
};

@interface GameRankListResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGameAchieveInfo*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

@end

#pragma mark - GameStartReq

typedef GPB_ENUM(GameStartReq_FieldNumber) {
  GameStartReq_FieldNumber_BaseRequest = 1,
  GameStartReq_FieldNumber_AppId = 2,
  GameStartReq_FieldNumber_LocalLifeNum = 3,
  GameStartReq_FieldNumber_Token = 4,
  GameStartReq_FieldNumber_NeedClearWishList = 5,
  GameStartReq_FieldNumber_GameConsumePropsCount = 6,
  GameStartReq_FieldNumber_GameConsumePropsListArray = 7,
};

@interface GameStartReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite) uint32_t localLifeNum;

@property(nonatomic, readwrite) BOOL hasLocalLifeNum;
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite) uint32_t needClearWishList;

@property(nonatomic, readwrite) BOOL hasNeedClearWishList;
@property(nonatomic, readwrite) int32_t gameConsumePropsCount;

@property(nonatomic, readwrite) BOOL hasGameConsumePropsCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameConsumeProps*> *gameConsumePropsListArray;
/** The number of items in @c gameConsumePropsListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gameConsumePropsListArray_Count;

@end

#pragma mark - GameStartResp

typedef GPB_ENUM(GameStartResp_FieldNumber) {
  GameStartResp_FieldNumber_BaseResponse = 1,
  GameStartResp_FieldNumber_LifeNum = 2,
  GameStartResp_FieldNumber_CheckLeftTime = 3,
  GameStartResp_FieldNumber_Token = 4,
  GameStartResp_FieldNumber_Count = 5,
  GameStartResp_FieldNumber_RankListArray = 6,
  GameStartResp_FieldNumber_GamePropsCount = 7,
  GameStartResp_FieldNumber_GamePropsListArray = 8,
  GameStartResp_FieldNumber_GameCoinCount = 9,
};

@interface GameStartResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t lifeNum;

@property(nonatomic, readwrite) BOOL hasLifeNum;
@property(nonatomic, readwrite) uint32_t checkLeftTime;

@property(nonatomic, readwrite) BOOL hasCheckLeftTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGameAchieveInfo*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

@property(nonatomic, readwrite) int32_t gamePropsCount;

@property(nonatomic, readwrite) BOOL hasGamePropsCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameUserPropsInfo*> *gamePropsListArray;
/** The number of items in @c gamePropsListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gamePropsListArray_Count;

@property(nonatomic, readwrite) uint32_t gameCoinCount;

@property(nonatomic, readwrite) BOOL hasGameCoinCount;
@end

#pragma mark - GameCheckReq

typedef GPB_ENUM(GameCheckReq_FieldNumber) {
  GameCheckReq_FieldNumber_BaseRequest = 1,
  GameCheckReq_FieldNumber_AppId = 2,
  GameCheckReq_FieldNumber_LocalLifeNum = 3,
  GameCheckReq_FieldNumber_Token = 4,
};

@interface GameCheckReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite) uint32_t localLifeNum;

@property(nonatomic, readwrite) BOOL hasLocalLifeNum;
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@end

#pragma mark - GameCheckResp

typedef GPB_ENUM(GameCheckResp_FieldNumber) {
  GameCheckResp_FieldNumber_BaseResponse = 1,
  GameCheckResp_FieldNumber_CheckLeftTime = 2,
  GameCheckResp_FieldNumber_LifeNum = 3,
};

@interface GameCheckResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t checkLeftTime;

@property(nonatomic, readwrite) BOOL hasCheckLeftTime;
@property(nonatomic, readwrite) uint32_t lifeNum;

@property(nonatomic, readwrite) BOOL hasLifeNum;
@end

#pragma mark - GameWishReq

typedef GPB_ENUM(GameWishReq_FieldNumber) {
  GameWishReq_FieldNumber_BaseRequest = 1,
  GameWishReq_FieldNumber_AppId = 2,
  GameWishReq_FieldNumber_Count = 3,
  GameWishReq_FieldNumber_UserNameListArray = 4,
};

@interface GameWishReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SKBuiltinString_t*> *userNameListArray;
/** The number of items in @c userNameListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userNameListArray_Count;

@end

#pragma mark - GameWishResp

typedef GPB_ENUM(GameWishResp_FieldNumber) {
  GameWishResp_FieldNumber_BaseResponse = 1,
};

@interface GameWishResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - GameGiftReq

typedef GPB_ENUM(GameGiftReq_FieldNumber) {
  GameGiftReq_FieldNumber_BaseRequest = 1,
  GameGiftReq_FieldNumber_AppId = 2,
  GameGiftReq_FieldNumber_LocalLifeNum = 3,
  GameGiftReq_FieldNumber_Count = 4,
  GameGiftReq_FieldNumber_UserNameListArray = 5,
};

@interface GameGiftReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite) uint32_t localLifeNum;

@property(nonatomic, readwrite) BOOL hasLocalLifeNum;
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SKBuiltinString_t*> *userNameListArray;
/** The number of items in @c userNameListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userNameListArray_Count;

@end

#pragma mark - GameGiftResp

typedef GPB_ENUM(GameGiftResp_FieldNumber) {
  GameGiftResp_FieldNumber_BaseResponse = 1,
  GameGiftResp_FieldNumber_LifeNum = 2,
  GameGiftResp_FieldNumber_CheckLeftTime = 3,
};

@interface GameGiftResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t lifeNum;

@property(nonatomic, readwrite) BOOL hasLifeNum;
@property(nonatomic, readwrite) uint32_t checkLeftTime;

@property(nonatomic, readwrite) BOOL hasCheckLeftTime;
@end

#pragma mark - GameFriendListReq

typedef GPB_ENUM(GameFriendListReq_FieldNumber) {
  GameFriendListReq_FieldNumber_BaseRequest = 1,
  GameFriendListReq_FieldNumber_AppId = 2,
};

@interface GameFriendListReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@end

#pragma mark - GameFriendListResp

typedef GPB_ENUM(GameFriendListResp_FieldNumber) {
  GameFriendListResp_FieldNumber_BaseResponse = 1,
  GameFriendListResp_FieldNumber_Count = 2,
  GameFriendListResp_FieldNumber_FriendListArray = 3,
};

@interface GameFriendListResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGameInfo*> *friendListArray;
/** The number of items in @c friendListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger friendListArray_Count;

@end

#pragma mark - GameWishListReq

typedef GPB_ENUM(GameWishListReq_FieldNumber) {
  GameWishListReq_FieldNumber_BaseRequest = 1,
  GameWishListReq_FieldNumber_AppId = 2,
};

@interface GameWishListReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@end

#pragma mark - GameWishListResp

typedef GPB_ENUM(GameWishListResp_FieldNumber) {
  GameWishListResp_FieldNumber_BaseResponse = 1,
  GameWishListResp_FieldNumber_Count = 2,
  GameWishListResp_FieldNumber_WishListArray = 3,
};

@interface GameWishListResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGameWishInfo*> *wishListArray;
/** The number of items in @c wishListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger wishListArray_Count;

@end

#pragma mark - GameShareReq

typedef GPB_ENUM(GameShareReq_FieldNumber) {
  GameShareReq_FieldNumber_BaseRequest = 1,
  GameShareReq_FieldNumber_AppId = 2,
  GameShareReq_FieldNumber_Type = 3,
  GameShareReq_FieldNumber_Score = 4,
  GameShareReq_FieldNumber_Achieve = 5,
};

@interface GameShareReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) uint32_t score;

@property(nonatomic, readwrite) BOOL hasScore;
@property(nonatomic, readwrite, copy, null_resettable) NSString *achieve;
/** Test to see if @c achieve has been set. */
@property(nonatomic, readwrite) BOOL hasAchieve;

@end

#pragma mark - GameShareResp

typedef GPB_ENUM(GameShareResp_FieldNumber) {
  GameShareResp_FieldNumber_BaseResponse = 1,
};

@interface GameShareResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - GameResourceReq

typedef GPB_ENUM(GameResourceReq_FieldNumber) {
  GameResourceReq_FieldNumber_BaseRequest = 1,
  GameResourceReq_FieldNumber_PropsCount = 2,
  GameResourceReq_FieldNumber_PropsIdListArray = 3,
};

@interface GameResourceReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) int32_t propsCount;

@property(nonatomic, readwrite) BOOL hasPropsCount;
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *propsIdListArray;
/** The number of items in @c propsIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger propsIdListArray_Count;

@end

#pragma mark - GameResourceResp

typedef GPB_ENUM(GameResourceResp_FieldNumber) {
  GameResourceResp_FieldNumber_BaseResponse = 1,
  GameResourceResp_FieldNumber_PropsCount = 2,
  GameResourceResp_FieldNumber_PropsListArray = 3,
};

@interface GameResourceResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t propsCount;

@property(nonatomic, readwrite) BOOL hasPropsCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GamePropsInfo*> *propsListArray;
/** The number of items in @c propsListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger propsListArray_Count;

@end

#pragma mark - GameConsumeReq

typedef GPB_ENUM(GameConsumeReq_FieldNumber) {
  GameConsumeReq_FieldNumber_BaseRequest = 1,
  GameConsumeReq_FieldNumber_AppId = 2,
};

@interface GameConsumeReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@end

#pragma mark - GameConsumeResp

typedef GPB_ENUM(GameConsumeResp_FieldNumber) {
  GameConsumeResp_FieldNumber_BaseResponse = 1,
  GameConsumeResp_FieldNumber_ConsumeOk = 2,
  GameConsumeResp_FieldNumber_GameCoinCount = 3,
};

@interface GameConsumeResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t consumeOk;

@property(nonatomic, readwrite) BOOL hasConsumeOk;
@property(nonatomic, readwrite) uint32_t gameCoinCount;

@property(nonatomic, readwrite) BOOL hasGameCoinCount;
@end

#pragma mark - AddGameMsg

typedef GPB_ENUM(AddGameMsg_FieldNumber) {
  AddGameMsg_FieldNumber_MsgId = 1,
  AddGameMsg_FieldNumber_FromUserName = 2,
  AddGameMsg_FieldNumber_ToUserName = 3,
  AddGameMsg_FieldNumber_Type = 4,
  AddGameMsg_FieldNumber_Flag = 5,
  AddGameMsg_FieldNumber_Status = 6,
  AddGameMsg_FieldNumber_UpdateTime = 7,
  AddGameMsg_FieldNumber_UpdateSeq = 8,
};

@interface AddGameMsg : GPBMessage

@property(nonatomic, readwrite) int32_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromUserName;
/** Test to see if @c fromUserName has been set. */
@property(nonatomic, readwrite) BOOL hasFromUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *toUserName;
/** Test to see if @c toUserName has been set. */
@property(nonatomic, readwrite) BOOL hasToUserName;

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) uint32_t flag;

@property(nonatomic, readwrite) BOOL hasFlag;
@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) uint32_t updateTime;

@property(nonatomic, readwrite) BOOL hasUpdateTime;
@property(nonatomic, readwrite) uint32_t updateSeq;

@property(nonatomic, readwrite) BOOL hasUpdateSeq;
@end

#pragma mark - GameSyncRequest

typedef GPB_ENUM(GameSyncRequest_FieldNumber) {
  GameSyncRequest_FieldNumber_BaseRequest = 1,
  GameSyncRequest_FieldNumber_Selector = 2,
  GameSyncRequest_FieldNumber_KeyBuf = 3,
};

@interface GameSyncRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t selector;

@property(nonatomic, readwrite) BOOL hasSelector;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *keyBuf;
/** Test to see if @c keyBuf has been set. */
@property(nonatomic, readwrite) BOOL hasKeyBuf;

@end

#pragma mark - GameSyncResponse

typedef GPB_ENUM(GameSyncResponse_FieldNumber) {
  GameSyncResponse_FieldNumber_BaseResponse = 1,
  GameSyncResponse_FieldNumber_CmdList = 2,
  GameSyncResponse_FieldNumber_KeyBuf = 3,
  GameSyncResponse_FieldNumber_ContinueFlag = 4,
};

@interface GameSyncResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) CmdList *cmdList;
/** Test to see if @c cmdList has been set. */
@property(nonatomic, readwrite) BOOL hasCmdList;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *keyBuf;
/** Test to see if @c keyBuf has been set. */
@property(nonatomic, readwrite) BOOL hasKeyBuf;

@property(nonatomic, readwrite) uint32_t continueFlag;

@property(nonatomic, readwrite) BOOL hasContinueFlag;
@end

#pragma mark - GameMsg

typedef GPB_ENUM(GameMsg_FieldNumber) {
  GameMsg_FieldNumber_MsgId = 1,
  GameMsg_FieldNumber_Status = 2,
  GameMsg_FieldNumber_Object = 3,
  GameMsg_FieldNumber_UpdateTime = 4,
  GameMsg_FieldNumber_UpdateSeq = 5,
};

@interface GameMsg : GPBMessage

@property(nonatomic, readwrite) uint32_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *object;
/** Test to see if @c object has been set. */
@property(nonatomic, readwrite) BOOL hasObject;

@property(nonatomic, readwrite) uint32_t updateTime;

@property(nonatomic, readwrite) BOOL hasUpdateTime;
@property(nonatomic, readwrite) uint32_t updateSeq;

@property(nonatomic, readwrite) BOOL hasUpdateSeq;
@end

#pragma mark - BatchGetGameMsgRequest

typedef GPB_ENUM(BatchGetGameMsgRequest_FieldNumber) {
  BatchGetGameMsgRequest_FieldNumber_BaseRequest = 1,
  BatchGetGameMsgRequest_FieldNumber_Count = 2,
  BatchGetGameMsgRequest_FieldNumber_MsgIdListArray = 3,
};

@interface BatchGetGameMsgRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *msgIdListArray;
/** The number of items in @c msgIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgIdListArray_Count;

@end

#pragma mark - BatchGetGameMsgResponse

typedef GPB_ENUM(BatchGetGameMsgResponse_FieldNumber) {
  BatchGetGameMsgResponse_FieldNumber_BaseResponse = 1,
  BatchGetGameMsgResponse_FieldNumber_Count = 2,
  BatchGetGameMsgResponse_FieldNumber_MsgListArray = 3,
};

@interface BatchGetGameMsgResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameMsg*> *msgListArray;
/** The number of items in @c msgListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgListArray_Count;

@end

#pragma mark - BatchDelGameMsgRequest

typedef GPB_ENUM(BatchDelGameMsgRequest_FieldNumber) {
  BatchDelGameMsgRequest_FieldNumber_BaseRequest = 1,
  BatchDelGameMsgRequest_FieldNumber_Count = 2,
  BatchDelGameMsgRequest_FieldNumber_MsgIdListArray = 3,
};

@interface BatchDelGameMsgRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *msgIdListArray;
/** The number of items in @c msgIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgIdListArray_Count;

@end

#pragma mark - DelGameMsgRsp

typedef GPB_ENUM(DelGameMsgRsp_FieldNumber) {
  DelGameMsgRsp_FieldNumber_Ret = 1,
  DelGameMsgRsp_FieldNumber_MsgId = 2,
};

@interface DelGameMsgRsp : GPBMessage

@property(nonatomic, readwrite) int32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
@property(nonatomic, readwrite) uint32_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
@end

#pragma mark - BatchDelGameMsgResponse

typedef GPB_ENUM(BatchDelGameMsgResponse_FieldNumber) {
  BatchDelGameMsgResponse_FieldNumber_BaseResponse = 1,
  BatchDelGameMsgResponse_FieldNumber_Count = 2,
  BatchDelGameMsgResponse_FieldNumber_ListArray = 3,
};

@interface BatchDelGameMsgResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DelGameMsgRsp*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
