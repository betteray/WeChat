// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmopenapi.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Mmopenapi.pbobjc.h"
#import "Mmbuiltintype.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MmopenapiRoot

@implementation MmopenapiRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - MmopenapiRoot_FileDescriptor

static GPBFileDescriptor *MmopenapiRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"micromsg"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - GetA8KeyReq

@implementation GetA8KeyReq

@dynamic hasBaseRequest, baseRequest;
@dynamic hasOpCode, opCode;
@dynamic hasA2Key, a2Key;
@dynamic hasAppId, appId;
@dynamic hasScope, scope;
@dynamic hasState, state;
@dynamic hasReqURL, reqURL;
@dynamic hasFriendUserName, friendUserName;
@dynamic hasFriendQq, friendQq;
@dynamic hasScene, scene;
@dynamic hasUserName, userName;
@dynamic hasBundleId, bundleId;
@dynamic hasA2KeyNew, a2KeyNew;
@dynamic hasReason, reason;
@dynamic hasFontScale, fontScale;
@dynamic hasFlag, flag;
@dynamic hasNetType, netType;
@dynamic hasCodeType, codeType;
@dynamic hasCodeVersion, codeVersion;
@dynamic hasRequestId, requestId;
@dynamic hasFunctionId, functionId;
@dynamic hasWalletRegion, walletRegion;
@dynamic hasCookie, cookie;
@dynamic hasOuterURL, outerURL;
@dynamic hasSubScene, subScene;

typedef struct GetA8KeyReq__storage_ {
  uint32_t _has_storage_[1];
  uint32_t opCode;
  uint32_t friendQq;
  uint32_t scene;
  uint32_t reason;
  uint32_t fontScale;
  uint32_t flag;
  uint32_t codeType;
  uint32_t codeVersion;
  uint32_t requestId;
  uint32_t walletRegion;
  uint32_t subScene;
  BaseRequest *baseRequest;
  SKBuiltinBuffer_t *a2Key;
  SKBuiltinString_t *appId;
  SKBuiltinString_t *scope;
  SKBuiltinString_t *state;
  SKBuiltinString_t *reqURL;
  NSString *friendUserName;
  NSString *userName;
  NSString *bundleId;
  SKBuiltinBuffer_t *a2KeyNew;
  NSString *netType;
  NSString *functionId;
  SKBuiltinBuffer_t *cookie;
  NSString *outerURL;
} GetA8KeyReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetA8KeyReq_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "opCode",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_OpCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, opCode),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "a2Key",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetA8KeyReq_FieldNumber_A2Key,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, a2Key),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetA8KeyReq_FieldNumber_AppId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scope",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetA8KeyReq_FieldNumber_Scope,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, scope),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetA8KeyReq_FieldNumber_State,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "reqURL",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetA8KeyReq_FieldNumber_ReqURL,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, reqURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "friendUserName",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_FriendUserName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, friendUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "friendQq",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_FriendQq,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, friendQq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scene",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_Scene,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, scene),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_UserName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bundleId",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_BundleId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, bundleId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "a2KeyNew",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetA8KeyReq_FieldNumber_A2KeyNew,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, a2KeyNew),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "reason",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_Reason,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, reason),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fontScale",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_FontScale,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, fontScale),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "flag",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_Flag,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, flag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "netType",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_NetType,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, netType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeType",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_CodeType,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, codeType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "codeVersion",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_CodeVersion,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, codeVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_RequestId,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "functionId",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_FunctionId,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, functionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "walletRegion",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_WalletRegion,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, walletRegion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cookie",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetA8KeyReq_FieldNumber_Cookie,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, cookie),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "outerURL",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_OuterURL,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, outerURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "subScene",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyReq_FieldNumber_SubScene,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(GetA8KeyReq__storage_, subScene),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetA8KeyReq class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetA8KeyReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\030\001K\000\002F\000\003E\000\004DA\000\005E\000\006E\000\007D!!\000\010N\000\tGA\000\nE\000\013H\000\014G"
        "A\000\rH\000\016F\000\017I\000\020D\000\021G\000\022\010\000\023\013\000\024\t\000\025\n\000\026\014\000\030\006!!\000\031\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - JSAPIPermissionBitSet

@implementation JSAPIPermissionBitSet

@dynamic hasBitValue, bitValue;
@dynamic hasBitValue2, bitValue2;
@dynamic hasBitValue3, bitValue3;
@dynamic hasBitValue4, bitValue4;

typedef struct JSAPIPermissionBitSet__storage_ {
  uint32_t _has_storage_[1];
  uint32_t bitValue;
  uint32_t bitValue2;
  uint32_t bitValue3;
  uint32_t bitValue4;
} JSAPIPermissionBitSet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bitValue",
        .dataTypeSpecific.className = NULL,
        .number = JSAPIPermissionBitSet_FieldNumber_BitValue,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(JSAPIPermissionBitSet__storage_, bitValue),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "bitValue2",
        .dataTypeSpecific.className = NULL,
        .number = JSAPIPermissionBitSet_FieldNumber_BitValue2,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(JSAPIPermissionBitSet__storage_, bitValue2),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "bitValue3",
        .dataTypeSpecific.className = NULL,
        .number = JSAPIPermissionBitSet_FieldNumber_BitValue3,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(JSAPIPermissionBitSet__storage_, bitValue3),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "bitValue4",
        .dataTypeSpecific.className = NULL,
        .number = JSAPIPermissionBitSet_FieldNumber_BitValue4,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(JSAPIPermissionBitSet__storage_, bitValue4),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[JSAPIPermissionBitSet class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(JSAPIPermissionBitSet__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001H\000\002I\000\003I\000\004I\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GeneralControlBitSet

@implementation GeneralControlBitSet

@dynamic hasBitValue, bitValue;

typedef struct GeneralControlBitSet__storage_ {
  uint32_t _has_storage_[1];
  uint32_t bitValue;
} GeneralControlBitSet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bitValue",
        .dataTypeSpecific.className = NULL,
        .number = GeneralControlBitSet_FieldNumber_BitValue,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GeneralControlBitSet__storage_, bitValue),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GeneralControlBitSet class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GeneralControlBitSet__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DeepLinkBitSet

@implementation DeepLinkBitSet

@dynamic hasBitValue, bitValue;

typedef struct DeepLinkBitSet__storage_ {
  uint32_t _has_storage_[1];
  uint64_t bitValue;
} DeepLinkBitSet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bitValue",
        .dataTypeSpecific.className = NULL,
        .number = DeepLinkBitSet_FieldNumber_BitValue,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DeepLinkBitSet__storage_, bitValue),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DeepLinkBitSet class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DeepLinkBitSet__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BizApiInfo

@implementation BizApiInfo

@dynamic hasApiName, apiName;

typedef struct BizApiInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *apiName;
} BizApiInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "apiName",
        .dataTypeSpecific.className = NULL,
        .number = BizApiInfo_FieldNumber_ApiName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BizApiInfo__storage_, apiName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BizApiInfo class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BizApiInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BizScopeInfo

@implementation BizScopeInfo

@dynamic hasScope, scope;
@dynamic hasScopeStatus, scopeStatus;
@dynamic hasScopeDesc, scopeDesc;
@dynamic hasApiCount, apiCount;
@dynamic apiListArray, apiListArray_Count;

typedef struct BizScopeInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t scopeStatus;
  uint32_t apiCount;
  NSString *scope;
  NSString *scopeDesc;
  NSMutableArray *apiListArray;
} BizScopeInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "scope",
        .dataTypeSpecific.className = NULL,
        .number = BizScopeInfo_FieldNumber_Scope,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BizScopeInfo__storage_, scope),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scopeStatus",
        .dataTypeSpecific.className = NULL,
        .number = BizScopeInfo_FieldNumber_ScopeStatus,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BizScopeInfo__storage_, scopeStatus),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scopeDesc",
        .dataTypeSpecific.className = NULL,
        .number = BizScopeInfo_FieldNumber_ScopeDesc,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(BizScopeInfo__storage_, scopeDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "apiCount",
        .dataTypeSpecific.className = NULL,
        .number = BizScopeInfo_FieldNumber_ApiCount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(BizScopeInfo__storage_, apiCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "apiListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BizApiInfo),
        .number = BizScopeInfo_FieldNumber_ApiListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(BizScopeInfo__storage_, apiListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BizScopeInfo class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BizScopeInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001E\000\002K\000\003I\000\004H\000\005\000ApiList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - YYBStruct

@implementation YYBStruct

@dynamic hasAndroidDownloadFlag, androidDownloadFlag;
@dynamic hasDownloadURL, downloadURL;
@dynamic hasApkMd5, apkMd5;
@dynamic hasPreemptiveURL, preemptiveURL;
@dynamic hasExtInfo, extInfo;
@dynamic hasDownloadTipsWording, downloadTipsWording;
@dynamic hasSupportedVersionCode, supportedVersionCode;

typedef struct YYBStruct__storage_ {
  uint32_t _has_storage_[1];
  uint32_t androidDownloadFlag;
  int32_t supportedVersionCode;
  NSString *downloadURL;
  NSString *apkMd5;
  NSString *preemptiveURL;
  NSString *extInfo;
  NSString *downloadTipsWording;
} YYBStruct__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "androidDownloadFlag",
        .dataTypeSpecific.className = NULL,
        .number = YYBStruct_FieldNumber_AndroidDownloadFlag,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(YYBStruct__storage_, androidDownloadFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "downloadURL",
        .dataTypeSpecific.className = NULL,
        .number = YYBStruct_FieldNumber_DownloadURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(YYBStruct__storage_, downloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "apkMd5",
        .dataTypeSpecific.className = NULL,
        .number = YYBStruct_FieldNumber_ApkMd5,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(YYBStruct__storage_, apkMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "preemptiveURL",
        .dataTypeSpecific.className = NULL,
        .number = YYBStruct_FieldNumber_PreemptiveURL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(YYBStruct__storage_, preemptiveURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extInfo",
        .dataTypeSpecific.className = NULL,
        .number = YYBStruct_FieldNumber_ExtInfo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(YYBStruct__storage_, extInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "downloadTipsWording",
        .dataTypeSpecific.className = NULL,
        .number = YYBStruct_FieldNumber_DownloadTipsWording,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(YYBStruct__storage_, downloadTipsWording),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "supportedVersionCode",
        .dataTypeSpecific.className = NULL,
        .number = YYBStruct_FieldNumber_SupportedVersionCode,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(YYBStruct__storage_, supportedVersionCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[YYBStruct class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(YYBStruct__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001S\000\002I!!\000\003F\000\004K!!\000\005G\000\006S\000\007T\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HttpHeader

@implementation HttpHeader

@dynamic hasKey, key;
@dynamic hasValue, value;

typedef struct HttpHeader__storage_ {
  uint32_t _has_storage_[1];
  NSString *key;
  NSString *value;
} HttpHeader__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "key",
        .dataTypeSpecific.className = NULL,
        .number = HttpHeader_FieldNumber_Key,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HttpHeader__storage_, key),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "value",
        .dataTypeSpecific.className = NULL,
        .number = HttpHeader_FieldNumber_Value,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HttpHeader__storage_, value),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HttpHeader class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HttpHeader__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetA8KeyResp

@implementation GetA8KeyResp

@dynamic hasBaseResponse, baseResponse;
@dynamic hasFullURL, fullURL;
@dynamic hasA8Key, a8Key;
@dynamic hasActionCode, actionCode;
@dynamic hasTitle, title;
@dynamic hasContent, content;
@dynamic hasJsapipermission, jsapipermission;
@dynamic hasGeneralControlBitSet, generalControlBitSet;
@dynamic hasUserName, userName;
@dynamic hasShareURL, shareURL;
@dynamic hasScopeCount, scopeCount;
@dynamic scopeListArray, scopeListArray_Count;
@dynamic hasAntispamTicket, antispamTicket;
@dynamic hasSsid, ssid;
@dynamic hasMid, mid;
@dynamic hasDeepLinkBitSet, deepLinkBitSet;
@dynamic hasJsapicontrolBytes, jsapicontrolBytes;
@dynamic hasHTTPHeaderCount, HTTPHeaderCount;
@dynamic HTTPHeaderArray, HTTPHeaderArray_Count;
@dynamic hasWording, wording;
@dynamic hasHeadImg, headImg;
@dynamic hasCookie, cookie;
@dynamic hasMenuWording, menuWording;

typedef struct GetA8KeyResp__storage_ {
  uint32_t _has_storage_[1];
  uint32_t actionCode;
  uint32_t scopeCount;
  uint32_t HTTPHeaderCount;
  BaseResponse *baseResponse;
  NSString *fullURL;
  NSString *a8Key;
  NSString *title;
  NSString *content;
  JSAPIPermissionBitSet *jsapipermission;
  GeneralControlBitSet *generalControlBitSet;
  NSString *userName;
  NSString *shareURL;
  NSMutableArray *scopeListArray;
  NSString *antispamTicket;
  NSString *ssid;
  NSString *mid;
  DeepLinkBitSet *deepLinkBitSet;
  SKBuiltinBuffer_t *jsapicontrolBytes;
  NSMutableArray *HTTPHeaderArray;
  NSString *wording;
  NSString *headImg;
  SKBuiltinBuffer_t *cookie;
  NSString *menuWording;
} GetA8KeyResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetA8KeyResp_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fullURL",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_FullURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, fullURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "a8Key",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_A8Key,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, a8Key),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "actionCode",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_ActionCode,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, actionCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_Title,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_Content,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "jsapipermission",
        .dataTypeSpecific.className = GPBStringifySymbol(JSAPIPermissionBitSet),
        .number = GetA8KeyResp_FieldNumber_Jsapipermission,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, jsapipermission),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "generalControlBitSet",
        .dataTypeSpecific.className = GPBStringifySymbol(GeneralControlBitSet),
        .number = GetA8KeyResp_FieldNumber_GeneralControlBitSet,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, generalControlBitSet),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_UserName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shareURL",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_ShareURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, shareURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scopeCount",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_ScopeCount,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, scopeCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scopeListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BizScopeInfo),
        .number = GetA8KeyResp_FieldNumber_ScopeListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, scopeListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "antispamTicket",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_AntispamTicket,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, antispamTicket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ssid",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_Ssid,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, ssid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mid",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_Mid,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, mid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deepLinkBitSet",
        .dataTypeSpecific.className = GPBStringifySymbol(DeepLinkBitSet),
        .number = GetA8KeyResp_FieldNumber_DeepLinkBitSet,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, deepLinkBitSet),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "jsapicontrolBytes",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetA8KeyResp_FieldNumber_JsapicontrolBytes,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, jsapicontrolBytes),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "HTTPHeaderCount",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_HTTPHeaderCount,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, HTTPHeaderCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "HTTPHeaderArray",
        .dataTypeSpecific.className = GPBStringifySymbol(HttpHeader),
        .number = GetA8KeyResp_FieldNumber_HTTPHeaderArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, HTTPHeaderArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "wording",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_Wording,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, wording),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "headImg",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_HeadImg,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, headImg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cookie",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetA8KeyResp_FieldNumber_Cookie,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, cookie),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "menuWording",
        .dataTypeSpecific.className = NULL,
        .number = GetA8KeyResp_FieldNumber_MenuWording,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(GetA8KeyResp__storage_, menuWording),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetA8KeyResp class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetA8KeyResp__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\025\001L\000\002G\000\003E\000\004J\000\005E\000\006G\000\007f\t\000\010T\000\tH\000\017H\000\020J\000\021\000Sco"
        "peList\000\022N\000\024d\000\025c\000\026N\000\027f\013\000\030!!!,\000\031\000httpHeade"
        "r\000\033\007\000\035\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AdAppList

@implementation AdAppList

@dynamic hasAppId, appId;
@dynamic hasAppCoverURL, appCoverURL;
@dynamic hasAppDownloadURL, appDownloadURL;
@dynamic hasAndroidApkMd5, androidApkMd5;
@dynamic hasAppName, appName;
@dynamic hasAppIconURL, appIconURL;
@dynamic hasAppSnsDesc, appSnsDesc;
@dynamic hasAndroidPackageName, androidPackageName;
@dynamic hasGooglePlayDownloadURL, googlePlayDownloadURL;
@dynamic hasSyyb, syyb;
@dynamic hasExtAsXml, extAsXml;

typedef struct AdAppList__storage_ {
  uint32_t _has_storage_[1];
  NSString *appId;
  NSString *appCoverURL;
  NSString *appDownloadURL;
  NSString *androidApkMd5;
  NSString *appName;
  NSString *appIconURL;
  NSString *appSnsDesc;
  NSString *androidPackageName;
  NSString *googlePlayDownloadURL;
  YYBStruct *syyb;
  NSString *extAsXml;
} AdAppList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AdAppList__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appCoverURL",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AppCoverURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AdAppList__storage_, appCoverURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDownloadURL",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AppDownloadURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AdAppList__storage_, appDownloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidApkMd5",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AndroidApkMd5,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AdAppList__storage_, androidApkMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appName",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AppName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AdAppList__storage_, appName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appIconURL",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AppIconURL,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AdAppList__storage_, appIconURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appSnsDesc",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AppSnsDesc,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AdAppList__storage_, appSnsDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidPackageName",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_AndroidPackageName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AdAppList__storage_, androidPackageName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "googlePlayDownloadURL",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_GooglePlayDownloadURL,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AdAppList__storage_, googlePlayDownloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "syyb",
        .dataTypeSpecific.className = GPBStringifySymbol(YYBStruct),
        .number = AdAppList_FieldNumber_Syyb,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AdAppList__storage_, syyb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "extAsXml",
        .dataTypeSpecific.className = NULL,
        .number = AdAppList_FieldNumber_ExtAsXml,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(AdAppList__storage_, extAsXml),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AdAppList class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AdAppList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001DA\000\002I!!\000\003L!!\000\004M\000\005G\000\006H!!\000\007J\000\010R\000\tS!!\000\nd\000"
        "\013Fb\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GiftList

@implementation GiftList

@dynamic hasGiftId, giftId;
@dynamic hasIconURL, iconURL;
@dynamic hasTitle, title;
@dynamic hasDesc, desc;
@dynamic hasGiftURL, giftURL;

typedef struct GiftList__storage_ {
  uint32_t _has_storage_[1];
  NSString *giftId;
  NSString *iconURL;
  NSString *title;
  NSString *desc;
  NSString *giftURL;
} GiftList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "giftId",
        .dataTypeSpecific.className = NULL,
        .number = GiftList_FieldNumber_GiftId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GiftList__storage_, giftId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconURL",
        .dataTypeSpecific.className = NULL,
        .number = GiftList_FieldNumber_IconURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GiftList__storage_, iconURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = GiftList_FieldNumber_Title,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GiftList__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = GiftList_FieldNumber_Desc,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GiftList__storage_, desc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "giftURL",
        .dataTypeSpecific.className = NULL,
        .number = GiftList_FieldNumber_GiftURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GiftList__storage_, giftURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GiftList class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GiftList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001EA\000\002E!!\000\003E\000\004D\000\005E!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GiftEntranceItem

@implementation GiftEntranceItem

@dynamic hasCellTitle, cellTitle;
@dynamic hasEnranceWording, enranceWording;
@dynamic hasAllGiftURL, allGiftURL;

typedef struct GiftEntranceItem__storage_ {
  uint32_t _has_storage_[1];
  NSString *cellTitle;
  NSString *enranceWording;
  NSString *allGiftURL;
} GiftEntranceItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cellTitle",
        .dataTypeSpecific.className = NULL,
        .number = GiftEntranceItem_FieldNumber_CellTitle,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GiftEntranceItem__storage_, cellTitle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "enranceWording",
        .dataTypeSpecific.className = NULL,
        .number = GiftEntranceItem_FieldNumber_EnranceWording,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GiftEntranceItem__storage_, enranceWording),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "allGiftURL",
        .dataTypeSpecific.className = NULL,
        .number = GiftEntranceItem_FieldNumber_AllGiftURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GiftEntranceItem__storage_, allGiftURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GiftEntranceItem class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GiftEntranceItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001I\000\002N\000\003H!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RcAppList

@implementation RcAppList

@dynamic hasAppId, appId;
@dynamic hasAppName, appName;
@dynamic hasAppIconURL, appIconURL;
@dynamic hasAppDesc, appDesc;
@dynamic hasAppDownloadURL, appDownloadURL;
@dynamic hasAppCoverURL, appCoverURL;
@dynamic hasAppDevInfo, appDevInfo;
@dynamic hasAppScreenShotCount, appScreenShotCount;
@dynamic appScreenShotListArray, appScreenShotListArray_Count;
@dynamic hasAppSnsDesc, appSnsDesc;
@dynamic hasAppSnapshotURL, appSnapshotURL;
@dynamic hasAppDetailDesc, appDetailDesc;
@dynamic hasFriendCount, friendCount;
@dynamic hasAppType, appType;
@dynamic hasAndroidApkMd5, androidApkMd5;
@dynamic hasAndroidPackageName, androidPackageName;
@dynamic hasAppNamezhTw, appNamezhTw;
@dynamic hasAppNameEnUs, appNameEnUs;
@dynamic hasGooglePlayDownloadURL, googlePlayDownloadURL;
@dynamic hasAppSuggestionIconURL, appSuggestionIconURL;
@dynamic hasAppSuggestionIntroURL, appSuggestionIntroURL;
@dynamic hasSyyb, syyb;
@dynamic hasAppLaunchScheme, appLaunchScheme;
@dynamic hasGooglePlayDownloadFlag, googlePlayDownloadFlag;
@dynamic hasAppInfoFlag, appInfoFlag;

typedef struct RcAppList__storage_ {
  uint32_t _has_storage_[1];
  int32_t appScreenShotCount;
  uint32_t friendCount;
  uint32_t googlePlayDownloadFlag;
  uint32_t appInfoFlag;
  NSString *appId;
  NSString *appName;
  NSString *appIconURL;
  NSString *appDesc;
  NSString *appDownloadURL;
  NSString *appCoverURL;
  NSString *appDevInfo;
  NSMutableArray *appScreenShotListArray;
  NSString *appSnsDesc;
  NSString *appSnapshotURL;
  NSString *appDetailDesc;
  NSString *appType;
  NSString *androidApkMd5;
  NSString *androidPackageName;
  NSString *appNamezhTw;
  NSString *appNameEnUs;
  NSString *googlePlayDownloadURL;
  NSString *appSuggestionIconURL;
  NSString *appSuggestionIntroURL;
  YYBStruct *syyb;
  NSString *appLaunchScheme;
} RcAppList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appName",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appIconURL",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppIconURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appIconURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDesc",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppDesc,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDownloadURL",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppDownloadURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appDownloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appCoverURL",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppCoverURL,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appCoverURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDevInfo",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppDevInfo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appDevInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appScreenShotCount",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppScreenShotCount,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appScreenShotCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "appScreenShotListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = RcAppList_FieldNumber_AppScreenShotListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appScreenShotListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appSnsDesc",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppSnsDesc,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appSnsDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appSnapshotURL",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppSnapshotURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appSnapshotURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDetailDesc",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppDetailDesc,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appDetailDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "friendCount",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_FriendCount,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(RcAppList__storage_, friendCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appType",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppType,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidApkMd5",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AndroidApkMd5,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(RcAppList__storage_, androidApkMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidPackageName",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AndroidPackageName,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(RcAppList__storage_, androidPackageName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appNamezhTw",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppNamezhTw,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appNamezhTw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appNameEnUs",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppNameEnUs,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appNameEnUs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "googlePlayDownloadURL",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_GooglePlayDownloadURL,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(RcAppList__storage_, googlePlayDownloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appSuggestionIconURL",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppSuggestionIconURL,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appSuggestionIconURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appSuggestionIntroURL",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppSuggestionIntroURL,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appSuggestionIntroURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "syyb",
        .dataTypeSpecific.className = GPBStringifySymbol(YYBStruct),
        .number = RcAppList_FieldNumber_Syyb,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(RcAppList__storage_, syyb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appLaunchScheme",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppLaunchScheme,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appLaunchScheme),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "googlePlayDownloadFlag",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_GooglePlayDownloadFlag,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(RcAppList__storage_, googlePlayDownloadFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appInfoFlag",
        .dataTypeSpecific.className = NULL,
        .number = RcAppList_FieldNumber_AppInfoFlag,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(RcAppList__storage_, appInfoFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RcAppList class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RcAppList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\031\001DA\000\002G\000\003H!!\000\004G\000\005L!!\000\006I!!\000\007J\000\010R\000\t\000AppScr"
        "eenShotList\000\nJ\000\013L!!\000\014M\000\rK\000\016G\000\017M\000\020R\000\021JA\000\022"
        "JA\000\023S!!\000\024R!!\000\025S!!\000\026d\000\027O\000\030V\000\031K\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetGameIntroListRequest

@implementation GetGameIntroListRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasCount, count;
@dynamic appIdListArray, appIdListArray_Count;
@dynamic hasDevicePlatform, devicePlatform;

typedef struct GetGameIntroListRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t count;
  BaseRequest *baseRequest;
  NSMutableArray *appIdListArray;
  NSString *devicePlatform;
} GetGameIntroListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetGameIntroListRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetGameIntroListRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetGameIntroListRequest_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetGameIntroListRequest__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appIdListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetGameIntroListRequest_FieldNumber_AppIdListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetGameIntroListRequest__storage_, appIdListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "devicePlatform",
        .dataTypeSpecific.className = NULL,
        .number = GetGameIntroListRequest_FieldNumber_DevicePlatform,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetGameIntroListRequest__storage_, devicePlatform),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetGameIntroListRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetGameIntroListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001K\000\002E\000\003\000AppIdList\000\004N\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GameIntro

@implementation GameIntro

@dynamic hasAppId, appId;
@dynamic hasGameIntroPage, gameIntroPage;
@dynamic hasAndroidApkMd5, androidApkMd5;
@dynamic hasAppDownloadURL, appDownloadURL;
@dynamic hasGooglePlayDownloadURL, googlePlayDownloadURL;
@dynamic hasSyyb, syyb;

typedef struct GameIntro__storage_ {
  uint32_t _has_storage_[1];
  NSString *appId;
  NSString *gameIntroPage;
  NSString *androidApkMd5;
  NSString *appDownloadURL;
  NSString *googlePlayDownloadURL;
  YYBStruct *syyb;
} GameIntro__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = GameIntro_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GameIntro__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gameIntroPage",
        .dataTypeSpecific.className = NULL,
        .number = GameIntro_FieldNumber_GameIntroPage,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GameIntro__storage_, gameIntroPage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidApkMd5",
        .dataTypeSpecific.className = NULL,
        .number = GameIntro_FieldNumber_AndroidApkMd5,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GameIntro__storage_, androidApkMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDownloadURL",
        .dataTypeSpecific.className = NULL,
        .number = GameIntro_FieldNumber_AppDownloadURL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GameIntro__storage_, appDownloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "googlePlayDownloadURL",
        .dataTypeSpecific.className = NULL,
        .number = GameIntro_FieldNumber_GooglePlayDownloadURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GameIntro__storage_, googlePlayDownloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "syyb",
        .dataTypeSpecific.className = GPBStringifySymbol(YYBStruct),
        .number = GameIntro_FieldNumber_Syyb,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GameIntro__storage_, syyb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GameIntro class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GameIntro__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001DA\000\002M\000\003M\000\004L!!\000\005S!!\000\006d\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetGameIntroListResponse

@implementation GetGameIntroListResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasCount, count;
@dynamic gameIntroListArray, gameIntroListArray_Count;

typedef struct GetGameIntroListResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t count;
  BaseResponse *baseResponse;
  NSMutableArray *gameIntroListArray;
} GetGameIntroListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetGameIntroListResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetGameIntroListResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetGameIntroListResponse_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetGameIntroListResponse__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "gameIntroListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(GameIntro),
        .number = GetGameIntroListResponse_FieldNumber_GameIntroListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetGameIntroListResponse__storage_, gameIntroListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetGameIntroListResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetGameIntroListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002E\000\003\000GameIntroList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppPersonalInfoListRequest

@implementation GetAppPersonalInfoListRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasCount, count;
@dynamic appIdListArray, appIdListArray_Count;
@dynamic hasScene, scene;

typedef struct GetAppPersonalInfoListRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t count;
  uint32_t scene;
  BaseRequest *baseRequest;
  NSMutableArray *appIdListArray;
} GetAppPersonalInfoListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetAppPersonalInfoListRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppPersonalInfoListRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetAppPersonalInfoListRequest_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppPersonalInfoListRequest__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appIdListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetAppPersonalInfoListRequest_FieldNumber_AppIdListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetAppPersonalInfoListRequest__storage_, appIdListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scene",
        .dataTypeSpecific.className = NULL,
        .number = GetAppPersonalInfoListRequest_FieldNumber_Scene,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetAppPersonalInfoListRequest__storage_, scene),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppPersonalInfoListRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppPersonalInfoListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001K\000\002E\000\003\000AppIdList\000\004E\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AppPersonalInfo

@implementation AppPersonalInfo

@dynamic hasAppId, appId;
@dynamic hasPersonalSettingXml, personalSettingXml;

typedef struct AppPersonalInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *appId;
  NSString *personalSettingXml;
} AppPersonalInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = AppPersonalInfo_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppPersonalInfo__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "personalSettingXml",
        .dataTypeSpecific.className = NULL,
        .number = AppPersonalInfo_FieldNumber_PersonalSettingXml,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AppPersonalInfo__storage_, personalSettingXml),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppPersonalInfo class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppPersonalInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001DA\000\002R\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppPersonalInfoListResponse

@implementation GetAppPersonalInfoListResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasCount, count;
@dynamic appPersonalInfoListArray, appPersonalInfoListArray_Count;

typedef struct GetAppPersonalInfoListResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t count;
  BaseResponse *baseResponse;
  NSMutableArray *appPersonalInfoListArray;
} GetAppPersonalInfoListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetAppPersonalInfoListResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppPersonalInfoListResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetAppPersonalInfoListResponse_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppPersonalInfoListResponse__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appPersonalInfoListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(AppPersonalInfo),
        .number = GetAppPersonalInfoListResponse_FieldNumber_AppPersonalInfoListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetAppPersonalInfoListResponse__storage_, appPersonalInfoListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppPersonalInfoListResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppPersonalInfoListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002E\000\003\000AppPersonalInfoList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetSuggestionAppDetailRequest

@implementation GetSuggestionAppDetailRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;
@dynamic hasLang, lang;

typedef struct GetSuggestionAppDetailRequest__storage_ {
  uint32_t _has_storage_[1];
  BaseRequest *baseRequest;
  NSString *appId;
  NSString *lang;
} GetSuggestionAppDetailRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetSuggestionAppDetailRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetSuggestionAppDetailRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppDetailRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetSuggestionAppDetailRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lang",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppDetailRequest_FieldNumber_Lang,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetSuggestionAppDetailRequest__storage_, lang),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetSuggestionAppDetailRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetSuggestionAppDetailRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002DA\000\003D\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetSuggestionAppDetailResponse

@implementation GetSuggestionAppDetailResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasRcDetail, rcDetail;

typedef struct GetSuggestionAppDetailResponse__storage_ {
  uint32_t _has_storage_[1];
  BaseResponse *baseResponse;
  RcAppList *rcDetail;
} GetSuggestionAppDetailResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetSuggestionAppDetailResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetSuggestionAppDetailResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rcDetail",
        .dataTypeSpecific.className = GPBStringifySymbol(RcAppList),
        .number = GetSuggestionAppDetailResponse_FieldNumber_RcDetail,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetSuggestionAppDetailResponse__storage_, rcDetail),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetSuggestionAppDetailResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetSuggestionAppDetailResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001L\000\002H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserGameRankInfo

@implementation UserGameRankInfo

@dynamic hasUserName, userName;
@dynamic hasScore, score;
@dynamic hasRank, rank;

typedef struct UserGameRankInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t score;
  uint32_t rank;
  NSString *userName;
} UserGameRankInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = UserGameRankInfo_FieldNumber_UserName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserGameRankInfo__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = UserGameRankInfo_FieldNumber_Score,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserGameRankInfo__storage_, score),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "rank",
        .dataTypeSpecific.className = NULL,
        .number = UserGameRankInfo_FieldNumber_Rank,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserGameRankInfo__storage_, rank),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserGameRankInfo class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserGameRankInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001H\000\002E\000\003D\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetGameRankListRequest

@implementation GetGameRankListRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;

typedef struct GetGameRankListRequest__storage_ {
  uint32_t _has_storage_[1];
  BaseRequest *baseRequest;
  NSString *appId;
} GetGameRankListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetGameRankListRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetGameRankListRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = GetGameRankListRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetGameRankListRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetGameRankListRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetGameRankListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001K\000\002DA\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetGameRankListResponse

@implementation GetGameRankListResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasCount, count;
@dynamic rankListArray, rankListArray_Count;
@dynamic hasFriendsCount, friendsCount;
@dynamic hasHasReportScore, hasReportScore;
@dynamic hasSyyb, syyb;

typedef struct GetGameRankListResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t count;
  uint32_t friendsCount;
  uint32_t hasReportScore;
  BaseResponse *baseResponse;
  NSMutableArray *rankListArray;
  YYBStruct *syyb;
} GetGameRankListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetGameRankListResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetGameRankListResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetGameRankListResponse_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetGameRankListResponse__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "rankListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UserGameRankInfo),
        .number = GetGameRankListResponse_FieldNumber_RankListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetGameRankListResponse__storage_, rankListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "friendsCount",
        .dataTypeSpecific.className = NULL,
        .number = GetGameRankListResponse_FieldNumber_FriendsCount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetGameRankListResponse__storage_, friendsCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hasReportScore",
        .dataTypeSpecific.className = NULL,
        .number = GetGameRankListResponse_FieldNumber_HasReportScore,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetGameRankListResponse__storage_, hasReportScore),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "syyb",
        .dataTypeSpecific.className = GPBStringifySymbol(YYBStruct),
        .number = GetGameRankListResponse_FieldNumber_Syyb,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetGameRankListResponse__storage_, syyb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetGameRankListResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetGameRankListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001L\000\002E\000\003\000RankList\000\004L\000\005N\000\006d\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppInfoListRequest

@implementation GetAppInfoListRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasCount, count;
@dynamic appIdListArray, appIdListArray_Count;

typedef struct GetAppInfoListRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t count;
  BaseRequest *baseRequest;
  NSMutableArray *appIdListArray;
} GetAppInfoListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetAppInfoListRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppInfoListRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetAppInfoListRequest_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppInfoListRequest__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "appIdListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetAppInfoListRequest_FieldNumber_AppIdListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetAppInfoListRequest__storage_, appIdListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppInfoListRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppInfoListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002E\000\003\000AppIdList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BizAppInfo

@implementation BizAppInfo

@dynamic hasAppId, appId;
@dynamic hasName, name;
@dynamic hasDescription_p, description_p;
@dynamic hasName4EnUs, name4EnUs;
@dynamic hasDescription4EnUs, description4EnUs;
@dynamic hasName4ZhTw, name4ZhTw;
@dynamic hasDescription4ZhTw, description4ZhTw;
@dynamic hasIconURLSd, iconURLSd;
@dynamic hasIconURLHd, iconURLHd;
@dynamic hasStoreURL, storeURL;
@dynamic hasWatermarkURL, watermarkURL;
@dynamic hasAndroidPackageName, androidPackageName;
@dynamic hasAndroidSignature, androidSignature;
@dynamic hasAppType, appType;
@dynamic hasDevInfo, devInfo;
@dynamic hasAppInfoFlag, appInfoFlag;
@dynamic hasAppVersion, appVersion;
@dynamic hasAppUpdateVersion, appUpdateVersion;
@dynamic hasIconURLMdpi, iconURLMdpi;
@dynamic hasDownloadURL, downloadURL;
@dynamic hasDownloadURLMd5, downloadURLMd5;
@dynamic hasGooglePlayDownloadURL, googlePlayDownloadURL;

typedef struct BizAppInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appInfoFlag;
  uint32_t appVersion;
  uint32_t appUpdateVersion;
  NSString *appId;
  NSString *name;
  NSString *description_p;
  NSString *name4EnUs;
  NSString *description4EnUs;
  NSString *name4ZhTw;
  NSString *description4ZhTw;
  NSString *iconURLSd;
  NSString *iconURLHd;
  NSString *storeURL;
  NSString *watermarkURL;
  NSString *androidPackageName;
  NSString *androidSignature;
  NSString *appType;
  NSString *devInfo;
  NSString *iconURLMdpi;
  NSString *downloadURL;
  NSString *downloadURLMd5;
  NSString *googlePlayDownloadURL;
} BizAppInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_Description_p,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name4EnUs",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_Name4EnUs,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, name4EnUs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description4EnUs",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_Description4EnUs,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, description4EnUs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name4ZhTw",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_Name4ZhTw,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, name4ZhTw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description4ZhTw",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_Description4ZhTw,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, description4ZhTw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconURLSd",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_IconURLSd,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, iconURLSd),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconURLHd",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_IconURLHd,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, iconURLHd),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeURL",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_StoreURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, storeURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "watermarkURL",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_WatermarkURL,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, watermarkURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidPackageName",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_AndroidPackageName,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, androidPackageName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidSignature",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_AndroidSignature,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, androidSignature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appType",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_AppType,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, appType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "devInfo",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_DevInfo,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, devInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appInfoFlag",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_AppInfoFlag,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, appInfoFlag),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appVersion",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_AppVersion,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, appVersion),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appUpdateVersion",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_AppUpdateVersion,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, appUpdateVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "iconURLMdpi",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_IconURLMdpi,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, iconURLMdpi),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "downloadURL",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_DownloadURL,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, downloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "downloadURLMd5",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_DownloadURLMd5,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, downloadURLMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "googlePlayDownloadURL",
        .dataTypeSpecific.className = NULL,
        .number = BizAppInfo_FieldNumber_GooglePlayDownloadURL,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(BizAppInfo__storage_, googlePlayDownloadURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BizAppInfo class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BizAppInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\026\001E\000\002D\000\003\000Description\000\004HA\000\005OA\000\006HA\000\007OA\000\010E!"
        "\"A\000\tE!\"A\000\nF!!\000\013J!!\000\014R\000\rP\000\016G\000\017G\000\020K\000\021J\000\022P\000"
        "\023E!\"c\000\024I!!\000\025I!$\000\026S!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppInfoListResponse

@implementation GetAppInfoListResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasCount, count;
@dynamic appInfoListArray, appInfoListArray_Count;

typedef struct GetAppInfoListResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t count;
  BaseResponse *baseResponse;
  NSMutableArray *appInfoListArray;
} GetAppInfoListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetAppInfoListResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppInfoListResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetAppInfoListResponse_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppInfoListResponse__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "appInfoListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BizAppInfo),
        .number = GetAppInfoListResponse_FieldNumber_AppInfoListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetAppInfoListResponse__storage_, appInfoListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppInfoListResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppInfoListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002E\000\003\000AppInfoList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AppCenterRequest

@implementation AppCenterRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasType, type;
@dynamic hasReqBuf, reqBuf;

typedef struct AppCenterRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  BaseRequest *baseRequest;
  SKBuiltinBuffer_t *reqBuf;
} AppCenterRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = AppCenterRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppCenterRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = AppCenterRequest_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AppCenterRequest__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "reqBuf",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = AppCenterRequest_FieldNumber_ReqBuf,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AppCenterRequest__storage_, reqBuf),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppCenterRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppCenterRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002D\000\003F\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AppCenterResponse

@implementation AppCenterResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasRespBuf, respBuf;

typedef struct AppCenterResponse__storage_ {
  uint32_t _has_storage_[1];
  BaseResponse *baseResponse;
  SKBuiltinBuffer_t *respBuf;
} AppCenterResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = AppCenterResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppCenterResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "respBuf",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = AppCenterResponse_FieldNumber_RespBuf,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AppCenterResponse__storage_, respBuf),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppCenterResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppCenterResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001L\000\002G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAuthAppListRequest

@implementation GetAuthAppListRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasType, type;
@dynamic hasLang, lang;

typedef struct GetAuthAppListRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  BaseRequest *baseRequest;
  NSString *lang;
} GetAuthAppListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetAuthAppListRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAuthAppListRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = GetAuthAppListRequest_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAuthAppListRequest__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lang",
        .dataTypeSpecific.className = NULL,
        .number = GetAuthAppListRequest_FieldNumber_Lang,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetAuthAppListRequest__storage_, lang),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAuthAppListRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAuthAppListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002D\000\003D\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AuthAppBaseInfo

@implementation AuthAppBaseInfo

@dynamic hasAppId, appId;
@dynamic hasAppType, appType;
@dynamic hasIconURL, iconURL;
@dynamic hasAppName, appName;
@dynamic hasAppFlag, appFlag;
@dynamic hasExternInfo, externInfo;
@dynamic hasAuthInfo, authInfo;
@dynamic hasDevInfo, devInfo;

typedef struct AuthAppBaseInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appFlag;
  NSString *appId;
  NSString *appType;
  NSString *iconURL;
  NSString *appName;
  NSString *externInfo;
  NSString *authInfo;
  NSString *devInfo;
} AuthAppBaseInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appType",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_AppType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, appType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconURL",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_IconURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, iconURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appName",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_AppName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, appName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appFlag",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_AppFlag,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, appFlag),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "externInfo",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_ExternInfo,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, externInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "authInfo",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_AuthInfo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, authInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "devInfo",
        .dataTypeSpecific.className = NULL,
        .number = AuthAppBaseInfo_FieldNumber_DevInfo,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AuthAppBaseInfo__storage_, devInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AuthAppBaseInfo class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AuthAppBaseInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001DA\000\002G\000\003E!!\000\004G\000\005G\000\006J\000\007H\000\010G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAuthAppListResponse

@implementation GetAuthAppListResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasAppCount, appCount;
@dynamic authAppListArray, authAppListArray_Count;

typedef struct GetAuthAppListResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appCount;
  BaseResponse *baseResponse;
  NSMutableArray *authAppListArray;
} GetAuthAppListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetAuthAppListResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAuthAppListResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appCount",
        .dataTypeSpecific.className = NULL,
        .number = GetAuthAppListResponse_FieldNumber_AppCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAuthAppListResponse__storage_, appCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "authAppListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(AuthAppBaseInfo),
        .number = GetAuthAppListResponse_FieldNumber_AuthAppListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetAuthAppListResponse__storage_, authAppListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAuthAppListResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAuthAppListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002H\000\003\000AuthAppList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAuthAppInfoRequest

@implementation GetAuthAppInfoRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;

typedef struct GetAuthAppInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  BaseRequest *baseRequest;
  NSString *appId;
} GetAuthAppInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetAuthAppInfoRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAuthAppInfoRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = GetAuthAppInfoRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAuthAppInfoRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAuthAppInfoRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAuthAppInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001K\000\002DA\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAuthAppInfoResponse

@implementation GetAuthAppInfoResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasBaseInfo, baseInfo;
@dynamic hasAuthInfo, authInfo;
@dynamic hasDevInfo, devInfo;
@dynamic hasExternInfo, externInfo;

typedef struct GetAuthAppInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  BaseResponse *baseResponse;
  AuthAppBaseInfo *baseInfo;
  NSString *authInfo;
  NSString *devInfo;
  NSString *externInfo;
} GetAuthAppInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetAuthAppInfoResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAuthAppInfoResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "baseInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(AuthAppBaseInfo),
        .number = GetAuthAppInfoResponse_FieldNumber_BaseInfo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAuthAppInfoResponse__storage_, baseInfo),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "authInfo",
        .dataTypeSpecific.className = NULL,
        .number = GetAuthAppInfoResponse_FieldNumber_AuthInfo,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetAuthAppInfoResponse__storage_, authInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "devInfo",
        .dataTypeSpecific.className = NULL,
        .number = GetAuthAppInfoResponse_FieldNumber_DevInfo,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetAuthAppInfoResponse__storage_, devInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "externInfo",
        .dataTypeSpecific.className = NULL,
        .number = GetAuthAppInfoResponse_FieldNumber_ExternInfo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetAuthAppInfoResponse__storage_, externInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAuthAppInfoResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAuthAppInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001L\000\002H\000\003H\000\004G\000\005J\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SetAppSettingRequest

@implementation SetAppSettingRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;
@dynamic hasCmdId, cmdId;
@dynamic hasCmdValue, cmdValue;

typedef struct SetAppSettingRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t cmdId;
  BaseRequest *baseRequest;
  NSString *appId;
  NSString *cmdValue;
} SetAppSettingRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = SetAppSettingRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SetAppSettingRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = SetAppSettingRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SetAppSettingRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cmdId",
        .dataTypeSpecific.className = NULL,
        .number = SetAppSettingRequest_FieldNumber_CmdId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SetAppSettingRequest__storage_, cmdId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cmdValue",
        .dataTypeSpecific.className = NULL,
        .number = SetAppSettingRequest_FieldNumber_CmdValue,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SetAppSettingRequest__storage_, cmdValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SetAppSettingRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SetAppSettingRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001K\000\002DA\000\003DA\000\004H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SetAppSettingResponse

@implementation SetAppSettingResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasAppId, appId;
@dynamic hasAppFlag, appFlag;
@dynamic hasCmdId, cmdId;

typedef struct SetAppSettingResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appFlag;
  uint32_t cmdId;
  BaseResponse *baseResponse;
  NSString *appId;
} SetAppSettingResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = SetAppSettingResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SetAppSettingResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = SetAppSettingResponse_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SetAppSettingResponse__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appFlag",
        .dataTypeSpecific.className = NULL,
        .number = SetAppSettingResponse_FieldNumber_AppFlag,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SetAppSettingResponse__storage_, appFlag),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cmdId",
        .dataTypeSpecific.className = NULL,
        .number = SetAppSettingResponse_FieldNumber_CmdId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SetAppSettingResponse__storage_, cmdId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SetAppSettingResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SetAppSettingResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001L\000\002DA\000\003G\000\004DA\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AppSettingReq

@implementation AppSettingReq

@dynamic hasAppId, appId;

typedef struct AppSettingReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *appId;
} AppSettingReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = AppSettingReq_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppSettingReq__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppSettingReq class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppSettingReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001DA\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AppSetting

@implementation AppSetting

@dynamic hasAppId, appId;
@dynamic hasAppFlag, appFlag;
@dynamic hasOpenId, openId;

typedef struct AppSetting__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appFlag;
  NSString *appId;
  NSString *openId;
} AppSetting__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = AppSetting_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppSetting__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appFlag",
        .dataTypeSpecific.className = NULL,
        .number = AppSetting_FieldNumber_AppFlag,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AppSetting__storage_, appFlag),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "openId",
        .dataTypeSpecific.className = NULL,
        .number = AppSetting_FieldNumber_OpenId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AppSetting__storage_, openId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppSetting class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppSetting__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001DA\000\002G\000\003EA\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppSettingRequest

@implementation GetAppSettingRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppCount, appCount;
@dynamic appSettingReqListArray, appSettingReqListArray_Count;

typedef struct GetAppSettingRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appCount;
  BaseRequest *baseRequest;
  NSMutableArray *appSettingReqListArray;
} GetAppSettingRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetAppSettingRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppSettingRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appCount",
        .dataTypeSpecific.className = NULL,
        .number = GetAppSettingRequest_FieldNumber_AppCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppSettingRequest__storage_, appCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appSettingReqListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(AppSettingReq),
        .number = GetAppSettingRequest_FieldNumber_AppSettingReqListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetAppSettingRequest__storage_, appSettingReqListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppSettingRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppSettingRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002H\000\003\000AppSettingReqList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppSettingResponse

@implementation GetAppSettingResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasAppCount, appCount;
@dynamic settingListArray, settingListArray_Count;

typedef struct GetAppSettingResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appCount;
  BaseResponse *baseResponse;
  NSMutableArray *settingListArray;
} GetAppSettingResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetAppSettingResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppSettingResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appCount",
        .dataTypeSpecific.className = NULL,
        .number = GetAppSettingResponse_FieldNumber_AppCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppSettingResponse__storage_, appCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "settingListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(AppSetting),
        .number = GetAppSettingResponse_FieldNumber_SettingListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetAppSettingResponse__storage_, settingListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppSettingResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppSettingResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002H\000\003\000SettingList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetSuggestionAppListRequest

@implementation GetSuggestionAppListRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppType, appType;
@dynamic hasOffSet, offSet;
@dynamic hasLimit, limit;
@dynamic hasLang, lang;
@dynamic hasInstalledAppCount, installedAppCount;
@dynamic installedAppListArray, installedAppListArray_Count;

typedef struct GetSuggestionAppListRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appType;
  uint32_t offSet;
  uint32_t limit;
  uint32_t installedAppCount;
  BaseRequest *baseRequest;
  NSString *lang;
  NSMutableArray *installedAppListArray;
} GetSuggestionAppListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetSuggestionAppListRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetSuggestionAppListRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appType",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListRequest_FieldNumber_AppType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetSuggestionAppListRequest__storage_, appType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "offSet",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListRequest_FieldNumber_OffSet,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetSuggestionAppListRequest__storage_, offSet),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "limit",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListRequest_FieldNumber_Limit,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetSuggestionAppListRequest__storage_, limit),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lang",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListRequest_FieldNumber_Lang,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetSuggestionAppListRequest__storage_, lang),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "installedAppCount",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListRequest_FieldNumber_InstalledAppCount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetSuggestionAppListRequest__storage_, installedAppCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "installedAppListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetSuggestionAppListRequest_FieldNumber_InstalledAppListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetSuggestionAppListRequest__storage_, installedAppListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetSuggestionAppListRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetSuggestionAppListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001K\000\002G\000\003F\000\004E\000\005D\000\006Q\000\007\000InstalledAppList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetSuggestionAppListResponse

@implementation GetSuggestionAppListResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasRcCount, rcCount;
@dynamic rcListArray, rcListArray_Count;
@dynamic hasIsInternalDownload, isInternalDownload;
@dynamic hasAdCount, adCount;
@dynamic adListArray, adListArray_Count;
@dynamic hasGiftCount, giftCount;
@dynamic giftListArray, giftListArray_Count;
@dynamic hasGiftEntranceItem, giftEntranceItem;

typedef struct GetSuggestionAppListResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t rcCount;
  uint32_t isInternalDownload;
  uint32_t adCount;
  uint32_t giftCount;
  BaseResponse *baseResponse;
  NSMutableArray *rcListArray;
  NSMutableArray *adListArray;
  NSMutableArray *giftListArray;
  GiftEntranceItem *giftEntranceItem;
} GetSuggestionAppListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetSuggestionAppListResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rcCount",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListResponse_FieldNumber_RcCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, rcCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "rcListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(RcAppList),
        .number = GetSuggestionAppListResponse_FieldNumber_RcListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, rcListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "isInternalDownload",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListResponse_FieldNumber_IsInternalDownload,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, isInternalDownload),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "adCount",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListResponse_FieldNumber_AdCount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, adCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "adListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(AdAppList),
        .number = GetSuggestionAppListResponse_FieldNumber_AdListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, adListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "giftCount",
        .dataTypeSpecific.className = NULL,
        .number = GetSuggestionAppListResponse_FieldNumber_GiftCount,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, giftCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "giftListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(GiftList),
        .number = GetSuggestionAppListResponse_FieldNumber_GiftListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, giftListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "giftEntranceItem",
        .dataTypeSpecific.className = GPBStringifySymbol(GiftEntranceItem),
        .number = GetSuggestionAppListResponse_FieldNumber_GiftEntranceItem,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetSuggestionAppListResponse__storage_, giftEntranceItem),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetSuggestionAppListResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetSuggestionAppListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001L\000\002G\000\003\000RcList\000\004R\000\005G\000\006\000AdList\000\007I\000\010\000Gift"
        "List\000\tP\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - JSOAuthRequest

@implementation JSOAuthRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;
@dynamic hasURL, URL;
@dynamic hasScope, scope;
@dynamic hasSignature, signature;
@dynamic hasSignatureMethod, signatureMethod;
@dynamic hasTimeStamp, timeStamp;
@dynamic hasNonce, nonce;

typedef struct JSOAuthRequest__storage_ {
  uint32_t _has_storage_[1];
  BaseRequest *baseRequest;
  NSString *appId;
  NSString *URL;
  NSString *scope;
  NSString *signature;
  NSString *signatureMethod;
  NSString *timeStamp;
  NSString *nonce;
} JSOAuthRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = JSOAuthRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthRequest_FieldNumber_URL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, URL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scope",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthRequest_FieldNumber_Scope,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, scope),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthRequest_FieldNumber_Signature,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, signature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "signatureMethod",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthRequest_FieldNumber_SignatureMethod,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, signatureMethod),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timeStamp",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthRequest_FieldNumber_TimeStamp,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, timeStamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nonce",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthRequest_FieldNumber_Nonce,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(JSOAuthRequest__storage_, nonce),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[JSOAuthRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(JSOAuthRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001K\000\002DA\000\003\001!!\000\004E\000\005I\000\006I\246\000\007I\000\010E\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - JSOAuthResponse

@implementation JSOAuthResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasScopeCount, scopeCount;
@dynamic scopeListArray, scopeListArray_Count;
@dynamic hasOauthTitle, oauthTitle;

typedef struct JSOAuthResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t scopeCount;
  BaseResponse *baseResponse;
  NSMutableArray *scopeListArray;
  NSString *oauthTitle;
} JSOAuthResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = JSOAuthResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(JSOAuthResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scopeCount",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthResponse_FieldNumber_ScopeCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(JSOAuthResponse__storage_, scopeCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scopeListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BizScopeInfo),
        .number = JSOAuthResponse_FieldNumber_ScopeListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(JSOAuthResponse__storage_, scopeListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "oauthTitle",
        .dataTypeSpecific.className = NULL,
        .number = JSOAuthResponse_FieldNumber_OauthTitle,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(JSOAuthResponse__storage_, oauthTitle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[JSOAuthResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(JSOAuthResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001L\000\002J\000\003\000ScopeList\000\004b\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SetOAuthScopeRequest

@implementation SetOAuthScopeRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;
@dynamic hasScopeCount, scopeCount;
@dynamic scopeListArray, scopeListArray_Count;

typedef struct SetOAuthScopeRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t scopeCount;
  BaseRequest *baseRequest;
  NSString *appId;
  NSMutableArray *scopeListArray;
} SetOAuthScopeRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = SetOAuthScopeRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SetOAuthScopeRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = SetOAuthScopeRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SetOAuthScopeRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scopeCount",
        .dataTypeSpecific.className = NULL,
        .number = SetOAuthScopeRequest_FieldNumber_ScopeCount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SetOAuthScopeRequest__storage_, scopeCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scopeListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BizScopeInfo),
        .number = SetOAuthScopeRequest_FieldNumber_ScopeListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(SetOAuthScopeRequest__storage_, scopeListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SetOAuthScopeRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SetOAuthScopeRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001K\000\002DA\000\003J\000\004\000ScopeList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SetOAuthScopeResponse

@implementation SetOAuthScopeResponse

@dynamic hasBaseRequest, baseRequest;
@dynamic hasScopeCount, scopeCount;
@dynamic scopeListArray, scopeListArray_Count;

typedef struct SetOAuthScopeResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t scopeCount;
  BaseRequest *baseRequest;
  NSMutableArray *scopeListArray;
} SetOAuthScopeResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = SetOAuthScopeResponse_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SetOAuthScopeResponse__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scopeCount",
        .dataTypeSpecific.className = NULL,
        .number = SetOAuthScopeResponse_FieldNumber_ScopeCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SetOAuthScopeResponse__storage_, scopeCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scopeListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BizScopeInfo),
        .number = SetOAuthScopeResponse_FieldNumber_ScopeListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(SetOAuthScopeResponse__storage_, scopeListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SetOAuthScopeResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SetOAuthScopeResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002J\000\003\000ScopeList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetUserInfoInAppRequest

@implementation GetUserInfoInAppRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;
@dynamic hasUserCount, userCount;
@dynamic userNameListArray, userNameListArray_Count;
@dynamic hasScene, scene;

typedef struct GetUserInfoInAppRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t userCount;
  uint32_t scene;
  BaseRequest *baseRequest;
  NSString *appId;
  NSMutableArray *userNameListArray;
} GetUserInfoInAppRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetUserInfoInAppRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetUserInfoInAppRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = GetUserInfoInAppRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetUserInfoInAppRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userCount",
        .dataTypeSpecific.className = NULL,
        .number = GetUserInfoInAppRequest_FieldNumber_UserCount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetUserInfoInAppRequest__storage_, userCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "userNameListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetUserInfoInAppRequest_FieldNumber_UserNameListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetUserInfoInAppRequest__storage_, userNameListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scene",
        .dataTypeSpecific.className = NULL,
        .number = GetUserInfoInAppRequest_FieldNumber_Scene,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetUserInfoInAppRequest__storage_, scene),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetUserInfoInAppRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetUserInfoInAppRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001K\000\002DA\000\003I\000\004\000UserNameList\000\005E\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserInfoInApp

@implementation UserInfoInApp

@dynamic hasUserName, userName;
@dynamic hasPersonalSettingXml, personalSettingXml;

typedef struct UserInfoInApp__storage_ {
  uint32_t _has_storage_[1];
  NSString *userName;
  NSString *personalSettingXml;
} UserInfoInApp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = UserInfoInApp_FieldNumber_UserName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserInfoInApp__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "personalSettingXml",
        .dataTypeSpecific.className = NULL,
        .number = UserInfoInApp_FieldNumber_PersonalSettingXml,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserInfoInApp__storage_, personalSettingXml),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserInfoInApp class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserInfoInApp__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001H\000\002R\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetUserInfoInAppResponse

@implementation GetUserInfoInAppResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasUserCount, userCount;
@dynamic userInfoListArray, userInfoListArray_Count;

typedef struct GetUserInfoInAppResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t userCount;
  BaseResponse *baseResponse;
  NSMutableArray *userInfoListArray;
} GetUserInfoInAppResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetUserInfoInAppResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetUserInfoInAppResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "userCount",
        .dataTypeSpecific.className = NULL,
        .number = GetUserInfoInAppResponse_FieldNumber_UserCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetUserInfoInAppResponse__storage_, userCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "userInfoListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(UserInfoInApp),
        .number = GetUserInfoInAppResponse_FieldNumber_UserInfoListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetUserInfoInAppResponse__storage_, userInfoListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetUserInfoInAppResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetUserInfoInAppResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002I\000\003\000UserInfoList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckCanSubscribeBizRequest

@implementation CheckCanSubscribeBizRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasSource, source;
@dynamic hasToUserName, toUserName;
@dynamic hasExtInfo, extInfo;
@dynamic hasAppId, appId;
@dynamic hasPackNum, packNum;
@dynamic androidPackNameListArray, androidPackNameListArray_Count;
@dynamic hasIosBunddleId, iosBunddleId;
@dynamic hasFromURL, fromURL;
@dynamic hasScene, scene;

typedef struct CheckCanSubscribeBizRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t source;
  uint32_t packNum;
  uint32_t scene;
  BaseRequest *baseRequest;
  NSString *toUserName;
  NSString *extInfo;
  NSString *appId;
  NSMutableArray *androidPackNameListArray;
  NSString *iosBunddleId;
  NSString *fromURL;
} CheckCanSubscribeBizRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = CheckCanSubscribeBizRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "source",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_Source,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, source),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_ToUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extInfo",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_ExtInfo,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, extInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_AppId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "packNum",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_PackNum,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, packNum),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "androidPackNameListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = CheckCanSubscribeBizRequest_FieldNumber_AndroidPackNameListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, androidPackNameListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "iosBunddleId",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_IosBunddleId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, iosBunddleId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromURL",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_FromURL,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, fromURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scene",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizRequest_FieldNumber_Scene,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizRequest__storage_, scene),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckCanSubscribeBizRequest class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckCanSubscribeBizRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001K\000\002F\000\003J\000\004G\000\005DA\000\006G\000\007\000AndroidPackNameLis"
        "t\000\010KA\000\tG\000\nE\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckCanSubscribeBizResponse

@implementation CheckCanSubscribeBizResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasCheckTicket, checkTicket;
@dynamic hasToUserName, toUserName;
@dynamic hasWebViewURL, webViewURL;
@dynamic hasShowWord, showWord;

typedef struct CheckCanSubscribeBizResponse__storage_ {
  uint32_t _has_storage_[1];
  BaseResponse *baseResponse;
  NSString *checkTicket;
  NSString *toUserName;
  NSString *webViewURL;
  NSString *showWord;
} CheckCanSubscribeBizResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = CheckCanSubscribeBizResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "checkTicket",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizResponse_FieldNumber_CheckTicket,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizResponse__storage_, checkTicket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizResponse_FieldNumber_ToUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizResponse__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "webViewURL",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizResponse_FieldNumber_WebViewURL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizResponse__storage_, webViewURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "showWord",
        .dataTypeSpecific.className = NULL,
        .number = CheckCanSubscribeBizResponse_FieldNumber_ShowWord,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CheckCanSubscribeBizResponse__storage_, showWord),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckCanSubscribeBizResponse class]
                                     rootClass:[MmopenapiRoot class]
                                          file:MmopenapiRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckCanSubscribeBizResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001L\000\002K\000\003J\000\004H!!\000\005H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
