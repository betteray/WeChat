// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmimg.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Mmimg.pbobjc.h"
#import "Mmbuiltintype.pbobjc.h"
#import "Mmbase.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MmimgRoot

@implementation MmimgRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - MmimgRoot_FileDescriptor

static GPBFileDescriptor *MmimgRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"micromsg"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - GetUpdateInfoRequest

@implementation GetUpdateInfoRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasUpdateType, updateType;
@dynamic hasChannel, channel;

typedef struct GetUpdateInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t updateType;
  uint32_t channel;
  BaseRequest *baseRequest;
} GetUpdateInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetUpdateInfoRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetUpdateInfoRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "updateType",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoRequest_FieldNumber_UpdateType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetUpdateInfoRequest__storage_, updateType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "channel",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoRequest_FieldNumber_Channel,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetUpdateInfoRequest__storage_, channel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetUpdateInfoRequest class]
                                     rootClass:[MmimgRoot class]
                                          file:MmimgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetUpdateInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002J\000\003G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetUpdateInfoResponse

@implementation GetUpdateInfoResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasPackVersion, packVersion;
@dynamic hasPackMd5, packMd5;
@dynamic hasPackSize, packSize;
@dynamic hasPackDescription, packDescription;
@dynamic hasURLCount, URLCount;
@dynamic downLoadURLArray, downLoadURLArray_Count;
@dynamic hasPatchInfo, patchInfo;

typedef struct GetUpdateInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t packVersion;
  uint32_t packSize;
  uint32_t URLCount;
  BaseResponse *baseResponse;
  NSString *packMd5;
  NSString *packDescription;
  NSMutableArray *downLoadURLArray;
  NSString *patchInfo;
} GetUpdateInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetUpdateInfoResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "packVersion",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoResponse_FieldNumber_PackVersion,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, packVersion),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "packMd5",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoResponse_FieldNumber_PackMd5,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, packMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "packSize",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoResponse_FieldNumber_PackSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, packSize),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "packDescription",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoResponse_FieldNumber_PackDescription,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, packDescription),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URLCount",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoResponse_FieldNumber_URLCount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, URLCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "downLoadURLArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetUpdateInfoResponse_FieldNumber_DownLoadURLArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, downLoadURLArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "patchInfo",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdateInfoResponse_FieldNumber_PatchInfo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetUpdateInfoResponse__storage_, patchInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetUpdateInfoResponse class]
                                     rootClass:[MmimgRoot class]
                                          file:MmimgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetUpdateInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001L\000\002K\000\003G\000\004H\000\005O\000\006\001!&\000\007\000DownLoadUrl\000\010I\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetUpdatePackRequest

@implementation GetUpdatePackRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasUpdateType, updateType;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasChannel, channel;

typedef struct GetUpdatePackRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t updateType;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t channel;
  BaseRequest *baseRequest;
} GetUpdatePackRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetUpdatePackRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetUpdatePackRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "updateType",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdatePackRequest_FieldNumber_UpdateType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetUpdatePackRequest__storage_, updateType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdatePackRequest_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetUpdatePackRequest__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdatePackRequest_FieldNumber_StartPos,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetUpdatePackRequest__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "channel",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdatePackRequest_FieldNumber_Channel,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetUpdatePackRequest__storage_, channel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetUpdatePackRequest class]
                                     rootClass:[MmimgRoot class]
                                          file:MmimgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetUpdatePackRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001K\000\002J\000\003H\000\004H\000\005G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetUpdatePackResponse

@implementation GetUpdatePackResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasData_p, data_p;

typedef struct GetUpdatePackResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  BaseResponse *baseResponse;
  SKBuiltinBuffer_t *data_p;
} GetUpdatePackResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetUpdatePackResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetUpdatePackResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdatePackResponse_FieldNumber_TotalLen,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetUpdatePackResponse__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdatePackResponse_FieldNumber_StartPos,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetUpdatePackResponse__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = GetUpdatePackResponse_FieldNumber_DataLen,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetUpdatePackResponse__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetUpdatePackResponse_FieldNumber_Data_p,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetUpdatePackResponse__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetUpdatePackResponse class]
                                     rootClass:[MmimgRoot class]
                                          file:MmimgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetUpdatePackResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001L\000\002H\000\003H\000\004G\000\005\000Data\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
