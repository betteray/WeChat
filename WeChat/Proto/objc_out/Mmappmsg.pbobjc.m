// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmappmsg.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Mmappmsg.pbobjc.h"
#import "Mmbuiltintype.pbobjc.h"
#import "Mmbase.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MmappmsgRoot

@implementation MmappmsgRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - MmappmsgRoot_FileDescriptor

static GPBFileDescriptor *MmappmsgRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"micromsg"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - AppMsg

@implementation AppMsg

@dynamic hasFromUserName, fromUserName;
@dynamic hasAppId, appId;
@dynamic hasSdkVersion, sdkVersion;
@dynamic hasToUserName, toUserName;
@dynamic hasType, type;
@dynamic hasContent, content;
@dynamic hasCreateTime, createTime;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasThumb, thumb;
@dynamic hasSource, source;
@dynamic hasRemindId, remindId;
@dynamic hasMsgSource, msgSource;
@dynamic hasShareURLOriginal, shareURLOriginal;
@dynamic hasShareURLOpen, shareURLOpen;
@dynamic hasJsAppId, jsAppId;

typedef struct AppMsg__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sdkVersion;
  uint32_t type;
  uint32_t createTime;
  int32_t source;
  int32_t remindId;
  NSString *fromUserName;
  NSString *appId;
  NSString *toUserName;
  NSString *content;
  NSString *clientMsgId;
  SKBuiltinBuffer_t *thumb;
  NSString *msgSource;
  NSString *shareURLOriginal;
  NSString *shareURLOpen;
  NSString *jsAppId;
} AppMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_FromUserName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppMsg__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AppMsg__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sdkVersion",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_SdkVersion,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AppMsg__storage_, sdkVersion),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_ToUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AppMsg__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AppMsg__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_Content,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AppMsg__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_CreateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AppMsg__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_ClientMsgId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AppMsg__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "thumb",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = AppMsg_FieldNumber_Thumb,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AppMsg__storage_, thumb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "source",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_Source,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AppMsg__storage_, source),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "remindId",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_RemindId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(AppMsg__storage_, remindId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msgSource",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_MsgSource,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(AppMsg__storage_, msgSource),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shareURLOriginal",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_ShareURLOriginal,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(AppMsg__storage_, shareURLOriginal),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shareURLOpen",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_ShareURLOpen,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(AppMsg__storage_, shareURLOpen),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "jsAppId",
        .dataTypeSpecific.className = NULL,
        .number = AppMsg_FieldNumber_JsAppId,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(AppMsg__storage_, jsAppId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppMsg class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppMsg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\017\001L\000\002E\000\003J\000\004J\000\005D\000\006G\000\007J\000\010K\000\tE\000\nF\000\013H\000\014I\000\rF!"
        ")\000\016F!%\000\017G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendAppMsgRequest

@implementation SendAppMsgRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasMsg, msg;
@dynamic hasCommentURL, commentURL;
@dynamic hasReqTime, reqTime;
@dynamic hasMd5, md5;
@dynamic hasFileType, fileType;
@dynamic hasSignature, signature;
@dynamic hasFromSence, fromSence;
@dynamic hasHitMd5, hitMd5;
@dynamic hasCrc32, crc32;
@dynamic hasMsgForwardType, msgForwardType;

typedef struct SendAppMsgRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t reqTime;
  uint32_t fileType;
  uint32_t hitMd5;
  uint32_t crc32;
  uint32_t msgForwardType;
  BaseRequest *baseRequest;
  AppMsg *msg;
  NSString *commentURL;
  NSString *md5;
  NSString *signature;
  NSString *fromSence;
} SendAppMsgRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = SendAppMsgRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msg",
        .dataTypeSpecific.className = GPBStringifySymbol(AppMsg),
        .number = SendAppMsgRequest_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "commentURL",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_CommentURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, commentURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqTime",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_ReqTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, reqTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_Md5,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, md5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileType",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_FileType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, fileType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_Signature,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, signature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromSence",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_FromSence,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, fromSence),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hitMd5",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_HitMd5,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, hitMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "crc32",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_Crc32,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, crc32),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgForwardType",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgRequest_FieldNumber_MsgForwardType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(SendAppMsgRequest__storage_, msgForwardType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendAppMsgRequest class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendAppMsgRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001K\000\002C\000\003H!!\000\004G\000\005C\000\006H\000\007I\000\010I\000\tF\000\nc\002\000\013N\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendAppMsgResponse

@implementation SendAppMsgResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasAppId, appId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasMsgId, msgId;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasCreateTime, createTime;
@dynamic hasType, type;
@dynamic hasNewMsgId, newMsgId;
@dynamic hasAeskey, aeskey;

typedef struct SendAppMsgResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t createTime;
  uint32_t type;
  BaseResponse *baseResponse;
  NSString *appId;
  NSString *fromUserName;
  NSString *toUserName;
  NSString *clientMsgId;
  NSString *aeskey;
  uint64_t newMsgId;
} SendAppMsgResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = SendAppMsgResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_FromUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_ToUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_MsgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_ClientMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_CreateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_Type,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_NewMsgId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = SendAppMsgResponse_FieldNumber_Aeskey,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(SendAppMsgResponse__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendAppMsgResponse class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendAppMsgResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001L\000\002E\000\003L\000\004J\000\005E\000\006K\000\007J\000\010D\000\tH\000\nd\002\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadAppAttachRequest

@implementation DownloadAppAttachRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;
@dynamic hasSdkVersion, sdkVersion;
@dynamic hasMediaId, mediaId;
@dynamic hasUserName, userName;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasOutFmt, outFmt;
@dynamic hasRotation, rotation;
@dynamic hasType, type;
@dynamic hasCdntype, cdntype;

typedef struct DownloadAppAttachRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sdkVersion;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  int32_t rotation;
  uint32_t type;
  uint32_t cdntype;
  BaseRequest *baseRequest;
  NSString *appId;
  NSString *mediaId;
  NSString *userName;
  NSString *outFmt;
} DownloadAppAttachRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = DownloadAppAttachRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sdkVersion",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_SdkVersion,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, sdkVersion),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "mediaId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_MediaId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, mediaId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_UserName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_TotalLen,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_StartPos,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_DataLen,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "outFmt",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_OutFmt,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, outFmt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rotation",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_Rotation,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, rotation),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_Type,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cdntype",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachRequest_FieldNumber_Cdntype,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(DownloadAppAttachRequest__storage_, cdntype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadAppAttachRequest class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadAppAttachRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\014\001K\000\002E\000\003J\000\004G\000\005H\000\006H\000\007H\000\010G\000\tF\000\nH\000\013D\000\014d\003\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadAppAttachResponse

@implementation DownloadAppAttachResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasAppId, appId;
@dynamic hasMediaId, mediaId;
@dynamic hasUserName, userName;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasData_p, data_p;

typedef struct DownloadAppAttachResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  BaseResponse *baseResponse;
  NSString *appId;
  NSString *mediaId;
  NSString *userName;
  SKBuiltinBuffer_t *data_p;
} DownloadAppAttachResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = DownloadAppAttachResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachResponse_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mediaId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachResponse_FieldNumber_MediaId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, mediaId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachResponse_FieldNumber_UserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachResponse_FieldNumber_TotalLen,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachResponse_FieldNumber_StartPos,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = DownloadAppAttachResponse_FieldNumber_DataLen,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = DownloadAppAttachResponse_FieldNumber_Data_p,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(DownloadAppAttachResponse__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadAppAttachResponse class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadAppAttachResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001L\000\002E\000\003G\000\004H\000\005H\000\006H\000\007G\000\010\000Data\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OpenAppInfo

@implementation OpenAppInfo

@dynamic hasAppId, appId;
@dynamic hasAppName, appName;
@dynamic hasAppDescription, appDescription;
@dynamic hasAppIconURL, appIconURL;
@dynamic hasAppStoreURL, appStoreURL;
@dynamic hasAppVersion, appVersion;
@dynamic hasAppWatermarkURL, appWatermarkURL;
@dynamic hasAndroidPackageName, androidPackageName;
@dynamic hasAndroidSignature, androidSignature;
@dynamic hasAppName4EnUs, appName4EnUs;
@dynamic hasAppDescription4EnUs, appDescription4EnUs;
@dynamic hasAppName4ZhTw, appName4ZhTw;
@dynamic hasAppDescription4ZhTw, appDescription4ZhTw;
@dynamic hasAppInfoFlag, appInfoFlag;

typedef struct OpenAppInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t appVersion;
  uint32_t appInfoFlag;
  NSString *appId;
  NSString *appName;
  NSString *appDescription;
  NSString *appIconURL;
  NSString *appStoreURL;
  NSString *appWatermarkURL;
  NSString *androidPackageName;
  NSString *androidSignature;
  NSString *appName4EnUs;
  NSString *appDescription4EnUs;
  NSString *appName4ZhTw;
  NSString *appDescription4ZhTw;
} OpenAppInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appName",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDescription",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppDescription,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appDescription),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appIconURL",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppIconURL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appIconURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appStoreURL",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppStoreURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appStoreURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appVersion",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppVersion,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appVersion),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appWatermarkURL",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppWatermarkURL,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appWatermarkURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidPackageName",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AndroidPackageName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, androidPackageName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "androidSignature",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AndroidSignature,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, androidSignature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appName4EnUs",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppName4EnUs,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appName4EnUs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDescription4EnUs",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppDescription4EnUs,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appDescription4EnUs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appName4ZhTw",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppName4ZhTw,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appName4ZhTw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appDescription4ZhTw",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppDescription4ZhTw,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appDescription4ZhTw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appInfoFlag",
        .dataTypeSpecific.className = NULL,
        .number = OpenAppInfo_FieldNumber_AppInfoFlag,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OpenAppInfo__storage_, appInfoFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OpenAppInfo class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OpenAppInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\001DA\000\002G\000\003N\000\004H!!\000\005I!!\000\006J\000\007M!!\000\010R\000\tP\000\nKA\000\013"
        "RA\000\014KA\000\rRA\000\016K\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppInfoRequest

@implementation GetAppInfoRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasAppId, appId;
@dynamic hasIconType, iconType;

typedef struct GetAppInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t iconType;
  BaseRequest *baseRequest;
  NSString *appId;
} GetAppInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetAppInfoRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppInfoRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = GetAppInfoRequest_FieldNumber_AppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppInfoRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconType",
        .dataTypeSpecific.className = NULL,
        .number = GetAppInfoRequest_FieldNumber_IconType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetAppInfoRequest__storage_, iconType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppInfoRequest class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002DA\000\003H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAppInfoResponse

@implementation GetAppInfoResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasAppInfo, appInfo;
@dynamic hasNoUse, noUse;
@dynamic hasDevInfo, devInfo;
@dynamic hasAppType, appType;

typedef struct GetAppInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t noUse;
  BaseResponse *baseResponse;
  OpenAppInfo *appInfo;
  NSString *devInfo;
  NSString *appType;
} GetAppInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetAppInfoResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAppInfoResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(OpenAppInfo),
        .number = GetAppInfoResponse_FieldNumber_AppInfo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAppInfoResponse__storage_, appInfo),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "noUse",
        .dataTypeSpecific.className = NULL,
        .number = GetAppInfoResponse_FieldNumber_NoUse,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetAppInfoResponse__storage_, noUse),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "devInfo",
        .dataTypeSpecific.className = NULL,
        .number = GetAppInfoResponse_FieldNumber_DevInfo,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetAppInfoResponse__storage_, devInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appType",
        .dataTypeSpecific.className = NULL,
        .number = GetAppInfoResponse_FieldNumber_AppType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetAppInfoResponse__storage_, appType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAppInfoResponse class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAppInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001L\000\002G\000\003E\000\004G\000\005G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetRecommendAppListRequest

@implementation GetRecommendAppListRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasStart, start;
@dynamic hasCount, count;
@dynamic hasInstalledList, installedList;
@dynamic hasIconType, iconType;

typedef struct GetRecommendAppListRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t start;
  uint32_t count;
  uint32_t iconType;
  BaseRequest *baseRequest;
  NSString *installedList;
} GetRecommendAppListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetRecommendAppListRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetRecommendAppListRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "start",
        .dataTypeSpecific.className = NULL,
        .number = GetRecommendAppListRequest_FieldNumber_Start,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetRecommendAppListRequest__storage_, start),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetRecommendAppListRequest_FieldNumber_Count,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetRecommendAppListRequest__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "installedList",
        .dataTypeSpecific.className = NULL,
        .number = GetRecommendAppListRequest_FieldNumber_InstalledList,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetRecommendAppListRequest__storage_, installedList),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconType",
        .dataTypeSpecific.className = NULL,
        .number = GetRecommendAppListRequest_FieldNumber_IconType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetRecommendAppListRequest__storage_, iconType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetRecommendAppListRequest class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetRecommendAppListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001K\000\002E\000\003E\000\004M\000\005H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetRecommendAppListResponse

@implementation GetRecommendAppListResponse

@dynamic hasTotal, total;
@dynamic hasBaseResponse, baseResponse;
@dynamic hasCount, count;
@dynamic appListArray, appListArray_Count;

typedef struct GetRecommendAppListResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t total;
  uint32_t count;
  BaseResponse *baseResponse;
  NSMutableArray *appListArray;
} GetRecommendAppListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "total",
        .dataTypeSpecific.className = NULL,
        .number = GetRecommendAppListResponse_FieldNumber_Total,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetRecommendAppListResponse__storage_, total),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetRecommendAppListResponse_FieldNumber_BaseResponse,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetRecommendAppListResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetRecommendAppListResponse_FieldNumber_Count,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetRecommendAppListResponse__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "appListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(OpenAppInfo),
        .number = GetRecommendAppListResponse_FieldNumber_AppListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetRecommendAppListResponse__storage_, appListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetRecommendAppListResponse class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetRecommendAppListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001E\000\002L\000\003E\000\004\000AppList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckPCWechatFileRequest

@implementation CheckPCWechatFileRequest

@dynamic hasFileName, fileName;
@dynamic hasMd5, md5;
@dynamic hasFileId, fileId;
@dynamic hasAesKey, aesKey;
@dynamic hasFromUsername, fromUsername;
@dynamic hasToUsername, toUsername;

typedef struct CheckPCWechatFileRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *fileName;
  NSString *md5;
  NSString *fileId;
  NSString *aesKey;
  NSString *fromUsername;
  NSString *toUsername;
} CheckPCWechatFileRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fileName",
        .dataTypeSpecific.className = NULL,
        .number = CheckPCWechatFileRequest_FieldNumber_FileName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckPCWechatFileRequest__storage_, fileName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = CheckPCWechatFileRequest_FieldNumber_Md5,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckPCWechatFileRequest__storage_, md5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileId",
        .dataTypeSpecific.className = NULL,
        .number = CheckPCWechatFileRequest_FieldNumber_FileId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CheckPCWechatFileRequest__storage_, fileId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "aesKey",
        .dataTypeSpecific.className = NULL,
        .number = CheckPCWechatFileRequest_FieldNumber_AesKey,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CheckPCWechatFileRequest__storage_, aesKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUsername",
        .dataTypeSpecific.className = NULL,
        .number = CheckPCWechatFileRequest_FieldNumber_FromUsername,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CheckPCWechatFileRequest__storage_, fromUsername),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUsername",
        .dataTypeSpecific.className = NULL,
        .number = CheckPCWechatFileRequest_FieldNumber_ToUsername,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CheckPCWechatFileRequest__storage_, toUsername),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckPCWechatFileRequest class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckPCWechatFileRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001H\000\002b\001\000\003F\000\004F\000\005L\000\006J\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckPCWechatFileResponse

@implementation CheckPCWechatFileResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasBlockStatus, blockStatus;

typedef struct CheckPCWechatFileResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t blockStatus;
  BaseResponse *baseResponse;
} CheckPCWechatFileResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = CheckPCWechatFileResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckPCWechatFileResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "blockStatus",
        .dataTypeSpecific.className = NULL,
        .number = CheckPCWechatFileResponse_FieldNumber_BlockStatus,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckPCWechatFileResponse__storage_, blockStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckPCWechatFileResponse class]
                                     rootClass:[MmappmsgRoot class]
                                          file:MmappmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckPCWechatFileResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001L\000\002K\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
