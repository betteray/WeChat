// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmerror.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "Mmerror.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MmerrorRoot

@implementation MmerrorRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - Enum MM_ERR

GPBEnumDescriptor *MM_ERR_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "MmErrServerFileExpired\000MmErrForceQuit\000Mm"
        "ErrClient\000MmErrChatroomPartialInvite\000MmE"
        "rrChatroomNeedInvite\000MmErrConnectInfoURL"
        "Invalid\000MmErrClidbEncryptKeyinfoInvalid\000"
        "MmErrLoginURLDeviceUnsafe\000MmErrCookieKic"
        "k\000MmErrLoginQrcodeUuidExpired\000MmErrKeybu"
        "fInvalid\000MmErrForceRedirect\000MmErrQrcodev"
        "erifyBanbyexpose\000MmErrShakebanbyexpose\000M"
        "mErrBottlebanbyexpose\000MmErrLbsbanbyexpos"
        "e\000MmErrLbsdatanotfound\000MmErrImgRead\000MmEr"
        "rFacingCreatechatroomRetry\000MmErrRadarPas"
        "swordSimple\000MmErrRevokemsgTimeout\000MmErrF"
        "avAlready\000MmErrFileExpired\000MmErrUserNotV"
        "erifyuser\000MmErrIdcRedirect\000MmErrRegButLo"
        "gin\000MmErrUnbindMainAcct\000MmErrQqOkNeedMob"
        "ile\000MmErrOtherMainAcct\000MmErrNodata\000MmErr"
        "UnbindMobileNeedQqpwd\000MmErrQqBan\000MmErrAc"
        "countBan\000MmErrQaRelation\000MmErrNoQuestion"
        "\000MmErrQuestionCount\000MmErrAnswerCount\000MmE"
        "rrEmailFormat\000MmErrWrongLogic\000MmErrBlock"
        "BySpam\000MmErrCertExpired\000MmErrNoRetry\000MmE"
        "rrAuthAnotherplace\000MmErrUserNotSupport\000M"
        "mErrShakeTranImgOther\000MmErrShakeTranImgC"
        "ontinue\000MmErrShakeTranImgNotfound\000MmErrS"
        "hakeTranImgCancel\000MmErrBizFansLimited\000Mm"
        "ErrBindEmailSameAsQmail\000MmErrBindedByOth"
        "er\000MmErrHasBinded\000MmErrHasUnbinded\000MmErr"
        "OneBindtypeLeft\000MmErrNotbindqq\000MmErrWeib"
        "oPushTrans\000MmErrNewUser\000MmErrSvrMobileFo"
        "rmat\000MmErrWrongSessionKey\000MmErrUuidBinde"
        "d\000MmErrAlphaForbidden\000MmErrMobileNeedadj"
        "ust\000MmErrTryqqpwd\000MmErrNiceqqExpired\000MmE"
        "rrTolistLimited\000MmErrGetmfriendNotReady\000"
        "MmErrBigbizAuth\000MmFacebookAccesstokenUnv"
        "alid\000MmErrHaveBindFacebook\000MmErrIsNotOwn"
        "er\000MmErrUnbindRegbymobile\000MmErrParseMail"
        "\000MmErrGmailImap\000MmErrGmailWeblogin\000MmErr"
        "GmailOnlinelimite\000MmErrGmailPwd\000MmErrUns"
        "upportCountry\000MmErrPickbottleNobottle\000Mm"
        "ErrSendVerifycode\000MmErrNoBottlecount\000MmE"
        "rrNoHdheadimg\000MmErrInvalidHdheadimgReqTo"
        "talLen\000MmErrHasNoHeadimg\000MmErrInvalidGro"
        "upcardContact\000MmErrVerifycodeNotexist\000Mm"
        "ErrBinduinBinded\000MmErrNeedQqpwd\000MmErrTic"
        "ketNotfound\000MmErrTicketUnmatch\000MmErrNotq"
        "qcontact\000MmErrBatchgetcontactprofileMode"
        "\000MmErrNeedVerifyUser\000MmErrUserBindMobile"
        "\000MmErrUserMobileUnmatch\000MmErrMobileForma"
        "t\000MmErrUnmatchMobile\000MmErrMobileNull\000MmE"
        "rrInvalidUploadmcontactOpmode\000MmErrInval"
        "idBindOpmode\000MmErrMobileUnbinded\000MmErrMo"
        "bileBinded\000MmErrFreqLimited\000MmErrVerifyc"
        "odeTimeout\000MmErrVerifycodeUnmatch\000MmErrN"
        "eedsecondpwd\000MmErrNeedreg\000MmErrOidbtimeo"
        "ut\000MmErrBademail\000MmErrDomaindisable\000MmEr"
        "rDomainmaxlimited\000MmErrDomainverified\000Mm"
        "ErrSpam\000MmErrMemberToomuch\000MmErrBlacklis"
        "t\000MmErrNotchatroomcontact\000MmErrNotmicrob"
        "logcontact\000MmErrNotopenprivatemsg\000MmErrN"
        "oupdateinfo\000MmErrRecommendedupdate\000MmErr"
        "Criticalupdate\000MmErrNicknameinvalid\000MmEr"
        "rUsernameinvalid\000MmErrSessiontimeout\000MmE"
        "rrUinexist\000MmErrNickreserved\000MmErrUserre"
        "served\000MmErrEmailnotverify\000MmErrEmailexi"
        "st\000MmErrUserexist\000MmErrNeedVerify\000MmErrA"
        "ccessDenied\000MmErrNouser\000MmErrPassword\000Mm"
        "ErrArg\000MmErrSys\000MmOk\000";
    static const int32_t values[] = {
        MM_ERR_MmErrServerFileExpired,
        MM_ERR_MmErrForceQuit,
        MM_ERR_MmErrClient,
        MM_ERR_MmErrChatroomPartialInvite,
        MM_ERR_MmErrChatroomNeedInvite,
        MM_ERR_MmErrConnectInfoURLInvalid,
        MM_ERR_MmErrClidbEncryptKeyinfoInvalid,
        MM_ERR_MmErrLoginURLDeviceUnsafe,
        MM_ERR_MmErrCookieKick,
        MM_ERR_MmErrLoginQrcodeUuidExpired,
        MM_ERR_MmErrKeybufInvalid,
        MM_ERR_MmErrForceRedirect,
        MM_ERR_MmErrQrcodeverifyBanbyexpose,
        MM_ERR_MmErrShakebanbyexpose,
        MM_ERR_MmErrBottlebanbyexpose,
        MM_ERR_MmErrLbsbanbyexpose,
        MM_ERR_MmErrLbsdatanotfound,
        MM_ERR_MmErrImgRead,
        MM_ERR_MmErrFacingCreatechatroomRetry,
        MM_ERR_MmErrRadarPasswordSimple,
        MM_ERR_MmErrRevokemsgTimeout,
        MM_ERR_MmErrFavAlready,
        MM_ERR_MmErrFileExpired,
        MM_ERR_MmErrUserNotVerifyuser,
        MM_ERR_MmErrIdcRedirect,
        MM_ERR_MmErrRegButLogin,
        MM_ERR_MmErrUnbindMainAcct,
        MM_ERR_MmErrQqOkNeedMobile,
        MM_ERR_MmErrOtherMainAcct,
        MM_ERR_MmErrNodata,
        MM_ERR_MmErrUnbindMobileNeedQqpwd,
        MM_ERR_MmErrQqBan,
        MM_ERR_MmErrAccountBan,
        MM_ERR_MmErrQaRelation,
        MM_ERR_MmErrNoQuestion,
        MM_ERR_MmErrQuestionCount,
        MM_ERR_MmErrAnswerCount,
        MM_ERR_MmErrEmailFormat,
        MM_ERR_MmErrWrongLogic,
        MM_ERR_MmErrBlockBySpam,
        MM_ERR_MmErrCertExpired,
        MM_ERR_MmErrNoRetry,
        MM_ERR_MmErrAuthAnotherplace,
        MM_ERR_MmErrUserNotSupport,
        MM_ERR_MmErrShakeTranImgOther,
        MM_ERR_MmErrShakeTranImgContinue,
        MM_ERR_MmErrShakeTranImgNotfound,
        MM_ERR_MmErrShakeTranImgCancel,
        MM_ERR_MmErrBizFansLimited,
        MM_ERR_MmErrBindEmailSameAsQmail,
        MM_ERR_MmErrBindedByOther,
        MM_ERR_MmErrHasBinded,
        MM_ERR_MmErrHasUnbinded,
        MM_ERR_MmErrOneBindtypeLeft,
        MM_ERR_MmErrNotbindqq,
        MM_ERR_MmErrWeiboPushTrans,
        MM_ERR_MmErrNewUser,
        MM_ERR_MmErrSvrMobileFormat,
        MM_ERR_MmErrWrongSessionKey,
        MM_ERR_MmErrUuidBinded,
        MM_ERR_MmErrAlphaForbidden,
        MM_ERR_MmErrMobileNeedadjust,
        MM_ERR_MmErrTryqqpwd,
        MM_ERR_MmErrNiceqqExpired,
        MM_ERR_MmErrTolistLimited,
        MM_ERR_MmErrGetmfriendNotReady,
        MM_ERR_MmErrBigbizAuth,
        MM_ERR_MmFacebookAccesstokenUnvalid,
        MM_ERR_MmErrHaveBindFacebook,
        MM_ERR_MmErrIsNotOwner,
        MM_ERR_MmErrUnbindRegbymobile,
        MM_ERR_MmErrParseMail,
        MM_ERR_MmErrGmailImap,
        MM_ERR_MmErrGmailWeblogin,
        MM_ERR_MmErrGmailOnlinelimite,
        MM_ERR_MmErrGmailPwd,
        MM_ERR_MmErrUnsupportCountry,
        MM_ERR_MmErrPickbottleNobottle,
        MM_ERR_MmErrSendVerifycode,
        MM_ERR_MmErrNoBottlecount,
        MM_ERR_MmErrNoHdheadimg,
        MM_ERR_MmErrInvalidHdheadimgReqTotalLen,
        MM_ERR_MmErrHasNoHeadimg,
        MM_ERR_MmErrInvalidGroupcardContact,
        MM_ERR_MmErrVerifycodeNotexist,
        MM_ERR_MmErrBinduinBinded,
        MM_ERR_MmErrNeedQqpwd,
        MM_ERR_MmErrTicketNotfound,
        MM_ERR_MmErrTicketUnmatch,
        MM_ERR_MmErrNotqqcontact,
        MM_ERR_MmErrBatchgetcontactprofileMode,
        MM_ERR_MmErrNeedVerifyUser,
        MM_ERR_MmErrUserBindMobile,
        MM_ERR_MmErrUserMobileUnmatch,
        MM_ERR_MmErrMobileFormat,
        MM_ERR_MmErrUnmatchMobile,
        MM_ERR_MmErrMobileNull,
        MM_ERR_MmErrInvalidUploadmcontactOpmode,
        MM_ERR_MmErrInvalidBindOpmode,
        MM_ERR_MmErrMobileUnbinded,
        MM_ERR_MmErrMobileBinded,
        MM_ERR_MmErrFreqLimited,
        MM_ERR_MmErrVerifycodeTimeout,
        MM_ERR_MmErrVerifycodeUnmatch,
        MM_ERR_MmErrNeedsecondpwd,
        MM_ERR_MmErrNeedreg,
        MM_ERR_MmErrOidbtimeout,
        MM_ERR_MmErrBademail,
        MM_ERR_MmErrDomaindisable,
        MM_ERR_MmErrDomainmaxlimited,
        MM_ERR_MmErrDomainverified,
        MM_ERR_MmErrSpam,
        MM_ERR_MmErrMemberToomuch,
        MM_ERR_MmErrBlacklist,
        MM_ERR_MmErrNotchatroomcontact,
        MM_ERR_MmErrNotmicroblogcontact,
        MM_ERR_MmErrNotopenprivatemsg,
        MM_ERR_MmErrNoupdateinfo,
        MM_ERR_MmErrRecommendedupdate,
        MM_ERR_MmErrCriticalupdate,
        MM_ERR_MmErrNicknameinvalid,
        MM_ERR_MmErrUsernameinvalid,
        MM_ERR_MmErrSessiontimeout,
        MM_ERR_MmErrUinexist,
        MM_ERR_MmErrNickreserved,
        MM_ERR_MmErrUserreserved,
        MM_ERR_MmErrEmailnotverify,
        MM_ERR_MmErrEmailexist,
        MM_ERR_MmErrUserexist,
        MM_ERR_MmErrNeedVerify,
        MM_ERR_MmErrAccessDenied,
        MM_ERR_MmErrNouser,
        MM_ERR_MmErrPassword,
        MM_ERR_MmErrArg,
        MM_ERR_MmErrSys,
        MM_ERR_MmOk,
    };
    static const char *extraTextFormatInfo = "\002\005b\343\347\344\203\347\000\007b\343\345\203\346\346\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MM_ERR)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:MM_ERR_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL MM_ERR_IsValidValue(int32_t value__) {
  switch (value__) {
    case MM_ERR_MmErrServerFileExpired:
    case MM_ERR_MmErrForceQuit:
    case MM_ERR_MmErrClient:
    case MM_ERR_MmErrChatroomPartialInvite:
    case MM_ERR_MmErrChatroomNeedInvite:
    case MM_ERR_MmErrConnectInfoURLInvalid:
    case MM_ERR_MmErrClidbEncryptKeyinfoInvalid:
    case MM_ERR_MmErrLoginURLDeviceUnsafe:
    case MM_ERR_MmErrCookieKick:
    case MM_ERR_MmErrLoginQrcodeUuidExpired:
    case MM_ERR_MmErrKeybufInvalid:
    case MM_ERR_MmErrForceRedirect:
    case MM_ERR_MmErrQrcodeverifyBanbyexpose:
    case MM_ERR_MmErrShakebanbyexpose:
    case MM_ERR_MmErrBottlebanbyexpose:
    case MM_ERR_MmErrLbsbanbyexpose:
    case MM_ERR_MmErrLbsdatanotfound:
    case MM_ERR_MmErrImgRead:
    case MM_ERR_MmErrFacingCreatechatroomRetry:
    case MM_ERR_MmErrRadarPasswordSimple:
    case MM_ERR_MmErrRevokemsgTimeout:
    case MM_ERR_MmErrFavAlready:
    case MM_ERR_MmErrFileExpired:
    case MM_ERR_MmErrUserNotVerifyuser:
    case MM_ERR_MmErrIdcRedirect:
    case MM_ERR_MmErrRegButLogin:
    case MM_ERR_MmErrUnbindMainAcct:
    case MM_ERR_MmErrQqOkNeedMobile:
    case MM_ERR_MmErrOtherMainAcct:
    case MM_ERR_MmErrNodata:
    case MM_ERR_MmErrUnbindMobileNeedQqpwd:
    case MM_ERR_MmErrQqBan:
    case MM_ERR_MmErrAccountBan:
    case MM_ERR_MmErrQaRelation:
    case MM_ERR_MmErrNoQuestion:
    case MM_ERR_MmErrQuestionCount:
    case MM_ERR_MmErrAnswerCount:
    case MM_ERR_MmErrEmailFormat:
    case MM_ERR_MmErrWrongLogic:
    case MM_ERR_MmErrBlockBySpam:
    case MM_ERR_MmErrCertExpired:
    case MM_ERR_MmErrNoRetry:
    case MM_ERR_MmErrAuthAnotherplace:
    case MM_ERR_MmErrUserNotSupport:
    case MM_ERR_MmErrShakeTranImgOther:
    case MM_ERR_MmErrShakeTranImgContinue:
    case MM_ERR_MmErrShakeTranImgNotfound:
    case MM_ERR_MmErrShakeTranImgCancel:
    case MM_ERR_MmErrBizFansLimited:
    case MM_ERR_MmErrBindEmailSameAsQmail:
    case MM_ERR_MmErrBindedByOther:
    case MM_ERR_MmErrHasBinded:
    case MM_ERR_MmErrHasUnbinded:
    case MM_ERR_MmErrOneBindtypeLeft:
    case MM_ERR_MmErrNotbindqq:
    case MM_ERR_MmErrWeiboPushTrans:
    case MM_ERR_MmErrNewUser:
    case MM_ERR_MmErrSvrMobileFormat:
    case MM_ERR_MmErrWrongSessionKey:
    case MM_ERR_MmErrUuidBinded:
    case MM_ERR_MmErrAlphaForbidden:
    case MM_ERR_MmErrMobileNeedadjust:
    case MM_ERR_MmErrTryqqpwd:
    case MM_ERR_MmErrNiceqqExpired:
    case MM_ERR_MmErrTolistLimited:
    case MM_ERR_MmErrGetmfriendNotReady:
    case MM_ERR_MmErrBigbizAuth:
    case MM_ERR_MmFacebookAccesstokenUnvalid:
    case MM_ERR_MmErrHaveBindFacebook:
    case MM_ERR_MmErrIsNotOwner:
    case MM_ERR_MmErrUnbindRegbymobile:
    case MM_ERR_MmErrParseMail:
    case MM_ERR_MmErrGmailImap:
    case MM_ERR_MmErrGmailWeblogin:
    case MM_ERR_MmErrGmailOnlinelimite:
    case MM_ERR_MmErrGmailPwd:
    case MM_ERR_MmErrUnsupportCountry:
    case MM_ERR_MmErrPickbottleNobottle:
    case MM_ERR_MmErrSendVerifycode:
    case MM_ERR_MmErrNoBottlecount:
    case MM_ERR_MmErrNoHdheadimg:
    case MM_ERR_MmErrInvalidHdheadimgReqTotalLen:
    case MM_ERR_MmErrHasNoHeadimg:
    case MM_ERR_MmErrInvalidGroupcardContact:
    case MM_ERR_MmErrVerifycodeNotexist:
    case MM_ERR_MmErrBinduinBinded:
    case MM_ERR_MmErrNeedQqpwd:
    case MM_ERR_MmErrTicketNotfound:
    case MM_ERR_MmErrTicketUnmatch:
    case MM_ERR_MmErrNotqqcontact:
    case MM_ERR_MmErrBatchgetcontactprofileMode:
    case MM_ERR_MmErrNeedVerifyUser:
    case MM_ERR_MmErrUserBindMobile:
    case MM_ERR_MmErrUserMobileUnmatch:
    case MM_ERR_MmErrMobileFormat:
    case MM_ERR_MmErrUnmatchMobile:
    case MM_ERR_MmErrMobileNull:
    case MM_ERR_MmErrInvalidUploadmcontactOpmode:
    case MM_ERR_MmErrInvalidBindOpmode:
    case MM_ERR_MmErrMobileUnbinded:
    case MM_ERR_MmErrMobileBinded:
    case MM_ERR_MmErrFreqLimited:
    case MM_ERR_MmErrVerifycodeTimeout:
    case MM_ERR_MmErrVerifycodeUnmatch:
    case MM_ERR_MmErrNeedsecondpwd:
    case MM_ERR_MmErrNeedreg:
    case MM_ERR_MmErrOidbtimeout:
    case MM_ERR_MmErrBademail:
    case MM_ERR_MmErrDomaindisable:
    case MM_ERR_MmErrDomainmaxlimited:
    case MM_ERR_MmErrDomainverified:
    case MM_ERR_MmErrSpam:
    case MM_ERR_MmErrMemberToomuch:
    case MM_ERR_MmErrBlacklist:
    case MM_ERR_MmErrNotchatroomcontact:
    case MM_ERR_MmErrNotmicroblogcontact:
    case MM_ERR_MmErrNotopenprivatemsg:
    case MM_ERR_MmErrNoupdateinfo:
    case MM_ERR_MmErrRecommendedupdate:
    case MM_ERR_MmErrCriticalupdate:
    case MM_ERR_MmErrNicknameinvalid:
    case MM_ERR_MmErrUsernameinvalid:
    case MM_ERR_MmErrSessiontimeout:
    case MM_ERR_MmErrUinexist:
    case MM_ERR_MmErrNickreserved:
    case MM_ERR_MmErrUserreserved:
    case MM_ERR_MmErrEmailnotverify:
    case MM_ERR_MmErrEmailexist:
    case MM_ERR_MmErrUserexist:
    case MM_ERR_MmErrNeedVerify:
    case MM_ERR_MmErrAccessDenied:
    case MM_ERR_MmErrNouser:
    case MM_ERR_MmErrPassword:
    case MM_ERR_MmErrArg:
    case MM_ERR_MmErrSys:
    case MM_ERR_MmOk:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
