// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmextsend.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Mmextsend.pbobjc.h"
#import "Mmbuiltintype.pbobjc.h"
#import "Mmbase.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MmextsendRoot

@implementation MmextsendRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - MmextsendRoot_FileDescriptor

static GPBFileDescriptor *MmextsendRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"micromsg"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - GetCDNDnsRequest

@implementation GetCDNDnsRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasClientIp, clientIp;

typedef struct GetCDNDnsRequest__storage_ {
  uint32_t _has_storage_[1];
  BaseRequest *baseRequest;
  NSString *clientIp;
} GetCDNDnsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetCDNDnsRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetCDNDnsRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientIp",
        .dataTypeSpecific.className = NULL,
        .number = GetCDNDnsRequest_FieldNumber_ClientIp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetCDNDnsRequest__storage_, clientIp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetCDNDnsRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetCDNDnsRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001K\000\002GA\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetCDNDnsResponse

@implementation GetCDNDnsResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasDnsInfo, dnsInfo;
@dynamic hasSnsDnsInfo, snsDnsInfo;
@dynamic hasAppDnsInfo, appDnsInfo;
@dynamic hasCdndnsRuleBuf, cdndnsRuleBuf;
@dynamic hasFakeCdndnsRuleBuf, fakeCdndnsRuleBuf;
@dynamic hasFakeDnsInfo, fakeDnsInfo;
@dynamic hasGetCdnDnsIntervalMs, getCdnDnsIntervalMs;
@dynamic hasDefaultConfig, defaultConfig;
@dynamic hasDisasterConfig, disasterConfig;

typedef struct GetCDNDnsResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t getCdnDnsIntervalMs;
  BaseResponse *baseResponse;
  CDNDnsInfo *dnsInfo;
  CDNDnsInfo *snsDnsInfo;
  CDNDnsInfo *appDnsInfo;
  SKBuiltinBuffer_t *cdndnsRuleBuf;
  SKBuiltinBuffer_t *fakeCdndnsRuleBuf;
  CDNDnsInfo *fakeDnsInfo;
  CDNClientConfig *defaultConfig;
  CDNClientConfig *disasterConfig;
} GetCDNDnsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetCDNDnsResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "dnsInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(CDNDnsInfo),
        .number = GetCDNDnsResponse_FieldNumber_DnsInfo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, dnsInfo),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "snsDnsInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(CDNDnsInfo),
        .number = GetCDNDnsResponse_FieldNumber_SnsDnsInfo,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, snsDnsInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appDnsInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(CDNDnsInfo),
        .number = GetCDNDnsResponse_FieldNumber_AppDnsInfo,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, appDnsInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "cdndnsRuleBuf",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetCDNDnsResponse_FieldNumber_CdndnsRuleBuf,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, cdndnsRuleBuf),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fakeCdndnsRuleBuf",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetCDNDnsResponse_FieldNumber_FakeCdndnsRuleBuf,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, fakeCdndnsRuleBuf),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fakeDnsInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(CDNDnsInfo),
        .number = GetCDNDnsResponse_FieldNumber_FakeDnsInfo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, fakeDnsInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "getCdnDnsIntervalMs",
        .dataTypeSpecific.className = NULL,
        .number = GetCDNDnsResponse_FieldNumber_GetCdnDnsIntervalMs,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, getCdnDnsIntervalMs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "defaultConfig",
        .dataTypeSpecific.className = GPBStringifySymbol(CDNClientConfig),
        .number = GetCDNDnsResponse_FieldNumber_DefaultConfig,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, defaultConfig),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "disasterConfig",
        .dataTypeSpecific.className = GPBStringifySymbol(CDNClientConfig),
        .number = GetCDNDnsResponse_FieldNumber_DisasterConfig,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(GetCDNDnsResponse__storage_, disasterConfig),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetCDNDnsResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetCDNDnsResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001L\000\002G\000\003J\000\004J\000\005d\t\000\006Ec\t\000\007K\000\010\023\000\t\r\000\n\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - EmojiUploadInfoReq

@implementation EmojiUploadInfoReq

@dynamic hasMd5, md5;
@dynamic hasStartPos, startPos;
@dynamic hasTotalLen, totalLen;
@dynamic hasEmojiBuffer, emojiBuffer;
@dynamic hasType, type;
@dynamic hasToUserName, toUserName;
@dynamic hasExternXml, externXml;
@dynamic hasReport, report;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasMsgSource, msgSource;
@dynamic hasNewXmlFlag, newXmlFlag;

typedef struct EmojiUploadInfoReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t startPos;
  int32_t totalLen;
  int32_t type;
  int32_t newXmlFlag;
  NSString *md5;
  SKBuiltinBuffer_t *emojiBuffer;
  NSString *toUserName;
  NSString *externXml;
  NSString *report;
  NSString *clientMsgId;
  NSString *msgSource;
} EmojiUploadInfoReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_Md5,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, md5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_StartPos,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "emojiBuffer",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = EmojiUploadInfoReq_FieldNumber_EmojiBuffer,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, emojiBuffer),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_ToUserName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "externXml",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_ExternXml,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, externXml),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "report",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_Report,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, report),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_ClientMsgId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgSource",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_MsgSource,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, msgSource),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newXmlFlag",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoReq_FieldNumber_NewXmlFlag,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(EmojiUploadInfoReq__storage_, newXmlFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[EmojiUploadInfoReq class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(EmojiUploadInfoReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001b\001\000\002H\000\003H\000\004K\000\005D\000\006J\000\007Gb\000\010F\000\tJA\000\nI\000\013J\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadEmojiRequest

@implementation UploadEmojiRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasEmojiItemCount, emojiItemCount;
@dynamic emojiItemArray, emojiItemArray_Count;
@dynamic hasReqTime, reqTime;

typedef struct UploadEmojiRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t emojiItemCount;
  uint32_t reqTime;
  BaseRequest *baseRequest;
  NSMutableArray *emojiItemArray;
} UploadEmojiRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = UploadEmojiRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadEmojiRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "emojiItemCount",
        .dataTypeSpecific.className = NULL,
        .number = UploadEmojiRequest_FieldNumber_EmojiItemCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadEmojiRequest__storage_, emojiItemCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "emojiItemArray",
        .dataTypeSpecific.className = GPBStringifySymbol(EmojiUploadInfoReq),
        .number = UploadEmojiRequest_FieldNumber_EmojiItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UploadEmojiRequest__storage_, emojiItemArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "reqTime",
        .dataTypeSpecific.className = NULL,
        .number = UploadEmojiRequest_FieldNumber_ReqTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadEmojiRequest__storage_, reqTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadEmojiRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadEmojiRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001K\000\002N\000\003\000EmojiItem\000\004G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - EmojiUploadInfoResp

@implementation EmojiUploadInfoResp

@dynamic hasRet, ret;
@dynamic hasStartPos, startPos;
@dynamic hasTotalLen, totalLen;
@dynamic hasMd5, md5;
@dynamic hasMsgId, msgId;
@dynamic hasNewMsgId, newMsgId;

typedef struct EmojiUploadInfoResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t ret;
  int32_t startPos;
  int32_t totalLen;
  uint32_t msgId;
  NSString *md5;
  uint64_t newMsgId;
} EmojiUploadInfoResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ret",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoResp_FieldNumber_Ret,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(EmojiUploadInfoResp__storage_, ret),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoResp_FieldNumber_StartPos,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(EmojiUploadInfoResp__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoResp_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(EmojiUploadInfoResp__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoResp_FieldNumber_Md5,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(EmojiUploadInfoResp__storage_, md5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoResp_FieldNumber_MsgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(EmojiUploadInfoResp__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = EmojiUploadInfoResp_FieldNumber_NewMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(EmojiUploadInfoResp__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[EmojiUploadInfoResp class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(EmojiUploadInfoResp__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001C\000\002H\000\003H\000\004b\001\000\005DA\000\006H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadEmojiResponse

@implementation UploadEmojiResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasEmojiItemCount, emojiItemCount;
@dynamic emojiItemArray, emojiItemArray_Count;

typedef struct UploadEmojiResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t emojiItemCount;
  BaseResponse *baseResponse;
  NSMutableArray *emojiItemArray;
} UploadEmojiResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = UploadEmojiResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadEmojiResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "emojiItemCount",
        .dataTypeSpecific.className = NULL,
        .number = UploadEmojiResponse_FieldNumber_EmojiItemCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadEmojiResponse__storage_, emojiItemCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "emojiItemArray",
        .dataTypeSpecific.className = GPBStringifySymbol(EmojiUploadInfoResp),
        .number = UploadEmojiResponse_FieldNumber_EmojiItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UploadEmojiResponse__storage_, emojiItemArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadEmojiResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadEmojiResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002N\000\003\000EmojiItem\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - EmojiDownloadInfoReq

@implementation EmojiDownloadInfoReq

@dynamic hasId_p, id_p;
@dynamic hasStartPos, startPos;
@dynamic hasTotalLen, totalLen;
@dynamic hasMd5, md5;

typedef struct EmojiDownloadInfoReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t startPos;
  int32_t totalLen;
  NSString *id_p;
  NSString *md5;
} EmojiDownloadInfoReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoReq_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoReq__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoReq_FieldNumber_StartPos,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoReq__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoReq_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoReq__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoReq_FieldNumber_Md5,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoReq__storage_, md5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[EmojiDownloadInfoReq class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(EmojiDownloadInfoReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\000ID\000\002H\000\003H\000\004b\001\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadEmojiRequest

@implementation DownloadEmojiRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasEmojiItemCount, emojiItemCount;
@dynamic emojiItemArray, emojiItemArray_Count;

typedef struct DownloadEmojiRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t emojiItemCount;
  BaseRequest *baseRequest;
  NSMutableArray *emojiItemArray;
} DownloadEmojiRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = DownloadEmojiRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadEmojiRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "emojiItemCount",
        .dataTypeSpecific.className = NULL,
        .number = DownloadEmojiRequest_FieldNumber_EmojiItemCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadEmojiRequest__storage_, emojiItemCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "emojiItemArray",
        .dataTypeSpecific.className = GPBStringifySymbol(EmojiDownloadInfoReq),
        .number = DownloadEmojiRequest_FieldNumber_EmojiItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DownloadEmojiRequest__storage_, emojiItemArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadEmojiRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadEmojiRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001K\000\002N\000\003\000EmojiItem\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - EmojiDownloadInfoResp

@implementation EmojiDownloadInfoResp

@dynamic hasRet, ret;
@dynamic hasStartPos, startPos;
@dynamic hasTotalLen, totalLen;
@dynamic hasEmojiBuffer, emojiBuffer;
@dynamic hasMd5, md5;
@dynamic hasId_p, id_p;

typedef struct EmojiDownloadInfoResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t ret;
  int32_t startPos;
  int32_t totalLen;
  SKBuiltinBuffer_t *emojiBuffer;
  NSString *md5;
  NSString *id_p;
} EmojiDownloadInfoResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ret",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoResp_FieldNumber_Ret,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoResp__storage_, ret),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoResp_FieldNumber_StartPos,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoResp__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoResp_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoResp__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "emojiBuffer",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = EmojiDownloadInfoResp_FieldNumber_EmojiBuffer,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoResp__storage_, emojiBuffer),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoResp_FieldNumber_Md5,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoResp__storage_, md5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = EmojiDownloadInfoResp_FieldNumber_Id_p,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(EmojiDownloadInfoResp__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[EmojiDownloadInfoResp class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(EmojiDownloadInfoResp__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001C\000\002H\000\003H\000\004K\000\005b\001\000\006\000ID\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadEmojiResponse

@implementation DownloadEmojiResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasEmojiItemCount, emojiItemCount;
@dynamic emojiItemArray, emojiItemArray_Count;

typedef struct DownloadEmojiResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t emojiItemCount;
  BaseResponse *baseResponse;
  NSMutableArray *emojiItemArray;
} DownloadEmojiResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = DownloadEmojiResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadEmojiResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "emojiItemCount",
        .dataTypeSpecific.className = NULL,
        .number = DownloadEmojiResponse_FieldNumber_EmojiItemCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadEmojiResponse__storage_, emojiItemCount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "emojiItemArray",
        .dataTypeSpecific.className = GPBStringifySymbol(EmojiDownloadInfoResp),
        .number = DownloadEmojiResponse_FieldNumber_EmojiItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DownloadEmojiResponse__storage_, emojiItemArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadEmojiResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadEmojiResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002N\000\003\000EmojiItem\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadVoiceRequest

@implementation DownloadVoiceRequest

@dynamic hasMsgId, msgId;
@dynamic hasOffset, offset;
@dynamic hasLength, length;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasBaseRequest, baseRequest;
@dynamic hasNewMsgId, newMsgId;
@dynamic hasChatRoomName, chatRoomName;
@dynamic hasMasterBufId, masterBufId;

typedef struct DownloadVoiceRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t offset;
  uint32_t length;
  NSString *clientMsgId;
  BaseRequest *baseRequest;
  NSString *chatRoomName;
  uint64_t newMsgId;
  uint64_t masterBufId;
} DownloadVoiceRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceRequest_FieldNumber_MsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "offset",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceRequest_FieldNumber_Offset,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, offset),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "length",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceRequest_FieldNumber_Length,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, length),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceRequest_FieldNumber_ClientMsgId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = DownloadVoiceRequest_FieldNumber_BaseRequest,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceRequest_FieldNumber_NewMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "chatRoomName",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceRequest_FieldNumber_ChatRoomName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, chatRoomName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "masterBufId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceRequest_FieldNumber_MasterBufId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(DownloadVoiceRequest__storage_, masterBufId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadVoiceRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadVoiceRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001E\000\002F\000\003F\000\004K\000\005K\000\006H\000\007L\000\010K\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadVoiceResponse

@implementation DownloadVoiceResponse

@dynamic hasMsgId, msgId;
@dynamic hasOffset, offset;
@dynamic hasLength, length;
@dynamic hasVoiceLength, voiceLength;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasData_p, data_p;
@dynamic hasEndFlag, endFlag;
@dynamic hasBaseResponse, baseResponse;
@dynamic hasCancelFlag, cancelFlag;
@dynamic hasNewMsgId, newMsgId;

typedef struct DownloadVoiceResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t offset;
  uint32_t length;
  uint32_t voiceLength;
  uint32_t endFlag;
  uint32_t cancelFlag;
  NSString *clientMsgId;
  SKBuiltinBuffer_t *data_p;
  BaseResponse *baseResponse;
  uint64_t newMsgId;
} DownloadVoiceResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_MsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "offset",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_Offset,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, offset),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "length",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_Length,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, length),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "voiceLength",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_VoiceLength,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, voiceLength),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_ClientMsgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = DownloadVoiceResponse_FieldNumber_Data_p,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "endFlag",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_EndFlag,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, endFlag),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = DownloadVoiceResponse_FieldNumber_BaseResponse,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "cancelFlag",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_CancelFlag,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, cancelFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVoiceResponse_FieldNumber_NewMsgId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(DownloadVoiceResponse__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadVoiceResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadVoiceResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001E\000\002F\000\003F\000\005K\000\006K\000\007\000Data\000\010G\000\tL\000\nJ\000\013H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadMsgImgRequest

@implementation UploadMsgImgRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasClientImgId, clientImgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasData_p, data_p;
@dynamic hasMsgType, msgType;
@dynamic hasMsgSource, msgSource;
@dynamic hasCompressType, compressType;
@dynamic hasNetType, netType;
@dynamic hasPhotoFrom, photoFrom;
@dynamic hasMediaId, mediaId;
@dynamic hasCdnbigImgURL, cdnbigImgURL;
@dynamic hasCdnmidImgURL, cdnmidImgURL;
@dynamic hasAeskey, aeskey;
@dynamic hasEncryVer, encryVer;
@dynamic hasCdnbigImgSize, cdnbigImgSize;
@dynamic hasCdnmidImgSize, cdnmidImgSize;
@dynamic hasCdnthumbImgURL, cdnthumbImgURL;
@dynamic hasCdnthumbImgSize, cdnthumbImgSize;
@dynamic hasCdnthumbImgHeight, cdnthumbImgHeight;
@dynamic hasCdnthumbImgWidth, cdnthumbImgWidth;
@dynamic hasCdnthumbAeskey, cdnthumbAeskey;
@dynamic hasReqTime, reqTime;
@dynamic hasMd5, md5;
@dynamic hasCrc32, crc32;
@dynamic hasMsgForwardType, msgForwardType;
@dynamic hasHitMd5, hitMd5;

typedef struct UploadMsgImgRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  uint32_t msgType;
  uint32_t compressType;
  int32_t netType;
  int32_t photoFrom;
  int32_t encryVer;
  int32_t cdnbigImgSize;
  int32_t cdnmidImgSize;
  int32_t cdnthumbImgSize;
  int32_t cdnthumbImgHeight;
  int32_t cdnthumbImgWidth;
  uint32_t reqTime;
  uint32_t crc32;
  uint32_t msgForwardType;
  uint32_t hitMd5;
  BaseRequest *baseRequest;
  SKBuiltinString_t *clientImgId;
  SKBuiltinString_t *fromUserName;
  SKBuiltinString_t *toUserName;
  SKBuiltinBuffer_t *data_p;
  NSString *msgSource;
  NSString *mediaId;
  NSString *cdnbigImgURL;
  NSString *cdnmidImgURL;
  NSString *aeskey;
  NSString *cdnthumbImgURL;
  NSString *cdnthumbAeskey;
  NSString *md5;
} UploadMsgImgRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = UploadMsgImgRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientImgId",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = UploadMsgImgRequest_FieldNumber_ClientImgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, clientImgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = UploadMsgImgRequest_FieldNumber_FromUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = UploadMsgImgRequest_FieldNumber_ToUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_TotalLen,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_StartPos,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_DataLen,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = UploadMsgImgRequest_FieldNumber_Data_p,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_MsgType,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgSource",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_MsgSource,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, msgSource),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "compressType",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CompressType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, compressType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "netType",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_NetType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, netType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "photoFrom",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_PhotoFrom,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, photoFrom),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "mediaId",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_MediaId,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, mediaId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cdnbigImgURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnbigImgURL,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnbigImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cdnmidImgURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnmidImgURL,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnmidImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_Aeskey,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "encryVer",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_EncryVer,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, encryVer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnbigImgSize",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnbigImgSize,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnbigImgSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnmidImgSize",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnmidImgSize,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnmidImgSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbImgURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnthumbImgURL,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnthumbImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cdnthumbImgSize",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnthumbImgSize,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnthumbImgSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbImgHeight",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnthumbImgHeight,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnthumbImgHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbImgWidth",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnthumbImgWidth,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnthumbImgWidth),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbAeskey",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_CdnthumbAeskey,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, cdnthumbAeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqTime",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_ReqTime,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, reqTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_Md5,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, md5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "crc32",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_Crc32,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, crc32),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgForwardType",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_MsgForwardType,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, msgForwardType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hitMd5",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgRequest_FieldNumber_HitMd5,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(UploadMsgImgRequest__storage_, hitMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadMsgImgRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadMsgImgRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\036\001K\000\002K\000\003L\000\004J\000\005H\000\006H\000\007G\000\010\000Data\000\tG\000\nI\000\013L\000\014G"
        "\000\rI\000\016G\000\017d\006!!\000\020d\006!!\000\021d\002\000\022H\000\023d\t\000\024d\t\000\025d\010!!\000"
        "\026d\013\000\027d\r\000\030d\014\000\031d\005c\002\000\032G\000\033C\000\034c\002\000\035N\000\036F\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadMsgImgResponse

@implementation UploadMsgImgResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasMsgId, msgId;
@dynamic hasClientImgId, clientImgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasCreateTime, createTime;
@dynamic hasNewMsgId, newMsgId;
@dynamic hasAeskey, aeskey;
@dynamic hasFileId, fileId;

typedef struct UploadMsgImgResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  uint32_t createTime;
  BaseResponse *baseResponse;
  SKBuiltinString_t *clientImgId;
  SKBuiltinString_t *fromUserName;
  SKBuiltinString_t *toUserName;
  NSString *aeskey;
  NSString *fileId;
  uint64_t newMsgId;
} UploadMsgImgResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = UploadMsgImgResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_MsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "clientImgId",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = UploadMsgImgResponse_FieldNumber_ClientImgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, clientImgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = UploadMsgImgResponse_FieldNumber_FromUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = UploadMsgImgResponse_FieldNumber_ToUserName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_TotalLen,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_StartPos,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_DataLen,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_NewMsgId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_Aeskey,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileId",
        .dataTypeSpecific.className = NULL,
        .number = UploadMsgImgResponse_FieldNumber_FileId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UploadMsgImgResponse__storage_, fileId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadMsgImgResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadMsgImgResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\014\001L\000\002E\000\003K\000\004L\000\005J\000\006H\000\007H\000\010G\000\tJ\000\nH\000\013d\002\000\014F\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CDNUploadMsgImgPrepareRequest

@implementation CDNUploadMsgImgPrepareRequest

@dynamic hasClientImgId, clientImgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasThumbHeight, thumbHeight;
@dynamic hasThumbWidth, thumbWidth;
@dynamic hasMsgSource, msgSource;
@dynamic hasClientStat, clientStat;
@dynamic hasScene, scene;
@dynamic hasLongitude, longitude;
@dynamic hasLatitude, latitude;
@dynamic hasAttachedContent, attachedContent;
@dynamic hasMidHeight, midHeight;
@dynamic hasMidWidth, midWidth;
@dynamic hasHdheight, hdheight;
@dynamic hasHdwidth, hdwidth;
@dynamic hasAeskey, aeskey;
@dynamic hasEncryVer, encryVer;
@dynamic hasCrc32, crc32;
@dynamic hasMsgForwardType, msgForwardType;

typedef struct CDNUploadMsgImgPrepareRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t thumbHeight;
  int32_t thumbWidth;
  int32_t scene;
  float longitude;
  float latitude;
  int32_t midHeight;
  int32_t midWidth;
  int32_t hdheight;
  int32_t hdwidth;
  int32_t encryVer;
  uint32_t crc32;
  uint32_t msgForwardType;
  NSString *clientImgId;
  NSString *fromUserName;
  NSString *toUserName;
  NSString *msgSource;
  SKBuiltinBuffer_t *clientStat;
  NSString *attachedContent;
  NSString *aeskey;
} CDNUploadMsgImgPrepareRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "clientImgId",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_ClientImgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, clientImgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_FromUserName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_ToUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "thumbHeight",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_ThumbHeight,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, thumbHeight),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "thumbWidth",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_ThumbWidth,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, thumbWidth),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msgSource",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_MsgSource,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, msgSource),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientStat",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_ClientStat,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, clientStat),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scene",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_Scene,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, scene),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "longitude",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_Longitude,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, longitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "latitude",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_Latitude,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, latitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "attachedContent",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_AttachedContent,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, attachedContent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "midHeight",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_MidHeight,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, midHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "midWidth",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_MidWidth,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, midWidth),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "hdheight",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_Hdheight,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, hdheight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "hdwidth",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_Hdwidth,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, hdwidth),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_Aeskey,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "encryVer",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_EncryVer,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, encryVer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "crc32",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_Crc32,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, crc32),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgForwardType",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareRequest_FieldNumber_MsgForwardType,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareRequest__storage_, msgForwardType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CDNUploadMsgImgPrepareRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CDNUploadMsgImgPrepareRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\023\001K\000\002L\000\003J\000\004K\000\005J\000\006I\000\007J\000\010E\000\tI\000\nH\000\013O\000\014I\000\rH\000"
        "\016c\005\000\017c\004\000\020d\002\000\021H\000\022c\002\000\023N\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CDNUploadMsgImgPrepareResponse

@implementation CDNUploadMsgImgPrepareResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasClientImgId, clientImgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasCreateTime, createTime;
@dynamic hasNewMsgId, newMsgId;
@dynamic hasAeskey, aeskey;
@dynamic hasFileId, fileId;

typedef struct CDNUploadMsgImgPrepareResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t createTime;
  BaseResponse *baseResponse;
  NSString *clientImgId;
  NSString *fromUserName;
  NSString *toUserName;
  NSString *aeskey;
  NSString *fileId;
  uint64_t newMsgId;
} CDNUploadMsgImgPrepareResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientImgId",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_ClientImgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, clientImgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_FromUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_ToUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_NewMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_Aeskey,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileId",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgPrepareResponse_FieldNumber_FileId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgPrepareResponse__storage_, fileId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CDNUploadMsgImgPrepareResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CDNUploadMsgImgPrepareResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001L\000\003K\000\004L\000\005J\000\tJ\000\nH\000\013d\002\000\014F\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CDNUploadMsgImgCommitRequest

@implementation CDNUploadMsgImgCommitRequest

@dynamic hasTicket, ticket;
@dynamic hasImgURL, imgURL;
@dynamic hasAeskey, aeskey;
@dynamic hasEncryVer, encryVer;
@dynamic hasMidSize, midSize;
@dynamic hasThumbSize, thumbSize;
@dynamic hasBigSize, bigSize;
@dynamic hasMd5Sum, md5Sum;
@dynamic hasSafeProto, safeProto;
@dynamic hasHit, hit;
@dynamic hasFileInfo, fileInfo;

typedef struct CDNUploadMsgImgCommitRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t encryVer;
  int32_t midSize;
  int32_t thumbSize;
  int32_t bigSize;
  int32_t safeProto;
  int32_t hit;
  NSString *ticket;
  NSString *imgURL;
  NSString *aeskey;
  NSString *md5Sum;
  NSString *fileInfo;
} CDNUploadMsgImgCommitRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ticket",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_Ticket,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, ticket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imgURL",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_ImgURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, imgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_Aeskey,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "encryVer",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_EncryVer,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, encryVer),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "midSize",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_MidSize,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, midSize),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "thumbSize",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_ThumbSize,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, thumbSize),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "bigSize",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_BigSize,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, bigSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "md5Sum",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_Md5Sum,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, md5Sum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "safeProto",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_SafeProto,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, safeProto),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "hit",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_Hit,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, hit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fileInfo",
        .dataTypeSpecific.className = NULL,
        .number = CDNUploadMsgImgCommitRequest_FieldNumber_FileInfo,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitRequest__storage_, fileInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CDNUploadMsgImgCommitRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CDNUploadMsgImgCommitRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001F\000\002D!!\000\003d\002\000\004H\000\005G\000\006I\000\tG\000\nF\000\013I\000\014C\000\rH\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CDNUploadMsgImgCommitResponse

@implementation CDNUploadMsgImgCommitResponse

@dynamic hasBaseResponse, baseResponse;

typedef struct CDNUploadMsgImgCommitResponse__storage_ {
  uint32_t _has_storage_[1];
  BaseResponse *baseResponse;
} CDNUploadMsgImgCommitResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = CDNUploadMsgImgCommitResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CDNUploadMsgImgCommitResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CDNUploadMsgImgCommitResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CDNUploadMsgImgCommitResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001L\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadWeiboImgRequest

@implementation UploadWeiboImgRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasClientImgId, clientImgId;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasData_p, data_p;
@dynamic hasContent, content;
@dynamic hasFilterType, filterType;
@dynamic hasFlag, flag;

typedef struct UploadWeiboImgRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  uint32_t filterType;
  uint32_t flag;
  BaseRequest *baseRequest;
  NSString *clientImgId;
  NSData *data_p;
  NSString *content;
} UploadWeiboImgRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = UploadWeiboImgRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientImgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_ClientImgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, clientImgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_StartPos,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_DataLen,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_Data_p,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_Content,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "filterType",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_FilterType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, filterType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "flag",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgRequest_FieldNumber_Flag,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UploadWeiboImgRequest__storage_, flag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadWeiboImgRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadWeiboImgRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001K\000\002K\000\003H\000\004H\000\005G\000\006\000Data\000\007G\000\010J\000\tD\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadWeiboImgResponse

@implementation UploadWeiboImgResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasClientImgId, clientImgId;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;

typedef struct UploadWeiboImgResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  BaseResponse *baseResponse;
  NSString *clientImgId;
} UploadWeiboImgResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = UploadWeiboImgResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadWeiboImgResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientImgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgResponse_FieldNumber_ClientImgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadWeiboImgResponse__storage_, clientImgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgResponse_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadWeiboImgResponse__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgResponse_FieldNumber_StartPos,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadWeiboImgResponse__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadWeiboImgResponse_FieldNumber_DataLen,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadWeiboImgResponse__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadWeiboImgResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadWeiboImgResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001L\000\002K\000\003H\000\004H\000\005G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadToWeiboRequest

@implementation UploadToWeiboRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasType, type;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasData_p, data_p;
@dynamic hasContent, content;
@dynamic hasFilterType, filterType;

typedef struct UploadToWeiboRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  uint32_t filterType;
  BaseRequest *baseRequest;
  NSString *clientMsgId;
  NSData *data_p;
  NSString *content;
} UploadToWeiboRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = UploadToWeiboRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_ClientMsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_TotalLen,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_StartPos,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_DataLen,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_Data_p,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_Content,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "filterType",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboRequest_FieldNumber_FilterType,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UploadToWeiboRequest__storage_, filterType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadToWeiboRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadToWeiboRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001K\000\002K\000\003D\000\004H\000\005H\000\006G\000\007\000Data\000\010G\000\tJ\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadToWeiboResponse

@implementation UploadToWeiboResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasType, type;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;

typedef struct UploadToWeiboResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  BaseResponse *baseResponse;
  NSString *clientMsgId;
} UploadToWeiboResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = UploadToWeiboResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadToWeiboResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboResponse_FieldNumber_ClientMsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadToWeiboResponse__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboResponse_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadToWeiboResponse__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboResponse_FieldNumber_TotalLen,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadToWeiboResponse__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboResponse_FieldNumber_StartPos,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadToWeiboResponse__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadToWeiboResponse_FieldNumber_DataLen,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UploadToWeiboResponse__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadToWeiboResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadToWeiboResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001L\000\002K\000\003D\000\004H\000\005H\000\006G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetMsgImgRequest

@implementation GetMsgImgRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasMsgId, msgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasCompressType, compressType;
@dynamic hasNewMsgId, newMsgId;

typedef struct GetMsgImgRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  uint32_t compressType;
  BaseRequest *baseRequest;
  SKBuiltinString_t *fromUserName;
  SKBuiltinString_t *toUserName;
  uint64_t newMsgId;
} GetMsgImgRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = GetMsgImgRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgRequest_FieldNumber_MsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetMsgImgRequest_FieldNumber_FromUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetMsgImgRequest_FieldNumber_ToUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgRequest_FieldNumber_TotalLen,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgRequest_FieldNumber_StartPos,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgRequest_FieldNumber_DataLen,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "compressType",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgRequest_FieldNumber_CompressType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, compressType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgRequest_FieldNumber_NewMsgId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(GetMsgImgRequest__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetMsgImgRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetMsgImgRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001K\000\002E\000\003L\000\004J\000\005H\000\006H\000\007G\000\010L\000\tH\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetMsgImgResponse

@implementation GetMsgImgResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasMsgId, msgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasDataLen, dataLen;
@dynamic hasData_p, data_p;
@dynamic hasNewMsgId, newMsgId;

typedef struct GetMsgImgResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t dataLen;
  BaseResponse *baseResponse;
  SKBuiltinString_t *fromUserName;
  SKBuiltinString_t *toUserName;
  SKBuiltinBuffer_t *data_p;
  uint64_t newMsgId;
} GetMsgImgResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = GetMsgImgResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgResponse_FieldNumber_MsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetMsgImgResponse_FieldNumber_FromUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinString_t),
        .number = GetMsgImgResponse_FieldNumber_ToUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgResponse_FieldNumber_TotalLen,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgResponse_FieldNumber_StartPos,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dataLen",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgResponse_FieldNumber_DataLen,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, dataLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = GetMsgImgResponse_FieldNumber_Data_p,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = GetMsgImgResponse_FieldNumber_NewMsgId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(GetMsgImgResponse__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetMsgImgResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetMsgImgResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001L\000\002E\000\003L\000\004J\000\005H\000\006H\000\007G\000\010\000Data\000\tH\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadVideoRequest

@implementation UploadVideoRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasThumbTotalLen, thumbTotalLen;
@dynamic hasThumbStartPos, thumbStartPos;
@dynamic hasThumbData, thumbData;
@dynamic hasVideoTotalLen, videoTotalLen;
@dynamic hasVideoStartPos, videoStartPos;
@dynamic hasVideoData, videoData;
@dynamic hasPlayLength, playLength;
@dynamic hasNetworkEnv, networkEnv;
@dynamic hasCameraType, cameraType;
@dynamic hasFuncFlag, funcFlag;
@dynamic hasMsgSource, msgSource;
@dynamic hasCdnvideoURL, cdnvideoURL;
@dynamic hasAeskey, aeskey;
@dynamic hasEncryVer, encryVer;
@dynamic hasCdnthumbURL, cdnthumbURL;
@dynamic hasCdnthumbImgSize, cdnthumbImgSize;
@dynamic hasCdnthumbImgHeight, cdnthumbImgHeight;
@dynamic hasCdnthumbImgWidth, cdnthumbImgWidth;
@dynamic hasCdnthumbAeskey, cdnthumbAeskey;
@dynamic hasVideoFrom, videoFrom;
@dynamic hasReqTime, reqTime;
@dynamic hasVideoMd5, videoMd5;
@dynamic hasStreamVideoURL, streamVideoURL;
@dynamic hasStreamVideoTotalTime, streamVideoTotalTime;
@dynamic hasStreamVideoTitle, streamVideoTitle;
@dynamic hasStreamVideoWording, streamVideoWording;
@dynamic hasStreamVideoWebURL, streamVideoWebURL;
@dynamic hasStreamVideoThumbURL, streamVideoThumbURL;
@dynamic hasStreamVideoPublishId, streamVideoPublishId;
@dynamic hasStreamVideoAdUxInfo, streamVideoAdUxInfo;
@dynamic hasStatExtStr, statExtStr;
@dynamic hasHitMd5, hitMd5;
@dynamic hasVideoNewMd5, videoNewMd5;
@dynamic hasCrc32, crc32;
@dynamic hasMsgForwardType, msgForwardType;

typedef struct UploadVideoRequest__storage_ {
  uint32_t _has_storage_[2];
  uint32_t thumbTotalLen;
  uint32_t thumbStartPos;
  uint32_t videoTotalLen;
  uint32_t videoStartPos;
  uint32_t playLength;
  uint32_t networkEnv;
  uint32_t cameraType;
  uint32_t funcFlag;
  int32_t encryVer;
  int32_t cdnthumbImgSize;
  int32_t cdnthumbImgHeight;
  int32_t cdnthumbImgWidth;
  int32_t videoFrom;
  uint32_t reqTime;
  uint32_t streamVideoTotalTime;
  uint32_t hitMd5;
  uint32_t crc32;
  uint32_t msgForwardType;
  BaseRequest *baseRequest;
  NSString *clientMsgId;
  NSString *fromUserName;
  NSString *toUserName;
  SKBuiltinBuffer_t *thumbData;
  SKBuiltinBuffer_t *videoData;
  NSString *msgSource;
  NSString *cdnvideoURL;
  NSString *aeskey;
  NSString *cdnthumbURL;
  NSString *cdnthumbAeskey;
  NSString *videoMd5;
  NSString *streamVideoURL;
  NSString *streamVideoTitle;
  NSString *streamVideoWording;
  NSString *streamVideoWebURL;
  NSString *streamVideoThumbURL;
  NSString *streamVideoPublishId;
  NSString *streamVideoAdUxInfo;
  NSString *statExtStr;
  NSString *videoNewMd5;
} UploadVideoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = UploadVideoRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_ClientMsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_FromUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_ToUserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "thumbTotalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_ThumbTotalLen,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, thumbTotalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "thumbStartPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_ThumbStartPos,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, thumbStartPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "thumbData",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = UploadVideoRequest_FieldNumber_ThumbData,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, thumbData),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "videoTotalLen",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_VideoTotalLen,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, videoTotalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "videoStartPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_VideoStartPos,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, videoStartPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "videoData",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = UploadVideoRequest_FieldNumber_VideoData,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, videoData),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "playLength",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_PlayLength,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, playLength),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "networkEnv",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_NetworkEnv,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, networkEnv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cameraType",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_CameraType,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, cameraType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "funcFlag",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_FuncFlag,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, funcFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgSource",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_MsgSource,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, msgSource),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cdnvideoURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_CdnvideoURL,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, cdnvideoURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_Aeskey,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "encryVer",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_EncryVer,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, encryVer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_CdnthumbURL,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, cdnthumbURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cdnthumbImgSize",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_CdnthumbImgSize,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, cdnthumbImgSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbImgHeight",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_CdnthumbImgHeight,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, cdnthumbImgHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbImgWidth",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_CdnthumbImgWidth,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, cdnthumbImgWidth),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cdnthumbAeskey",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_CdnthumbAeskey,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, cdnthumbAeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "videoFrom",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_VideoFrom,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, videoFrom),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "reqTime",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_ReqTime,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, reqTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "videoMd5",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_VideoMd5,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, videoMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamVideoURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoURL,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamVideoTotalTime",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoTotalTime,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoTotalTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "streamVideoTitle",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoTitle,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoTitle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamVideoWording",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoWording,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoWording),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamVideoWebURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoWebURL,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoWebURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamVideoThumbURL",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoThumbURL,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoThumbURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamVideoPublishId",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoPublishId,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoPublishId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamVideoAdUxInfo",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StreamVideoAdUxInfo,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, streamVideoAdUxInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "statExtStr",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_StatExtStr,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, statExtStr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hitMd5",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_HitMd5,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, hitMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "videoNewMd5",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_VideoNewMd5,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, videoNewMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "crc32",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_Crc32,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, crc32),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgForwardType",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoRequest_FieldNumber_MsgForwardType,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(UploadVideoRequest__storage_, msgForwardType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadVideoRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadVideoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\'\001K\000\002K\000\003L\000\004J\000\005M\000\006M\000\007I\000\010M\000\tM\000\nI\000\013J\000\014J\000\rJ\000"
        "\016H\000\017I\000\020d\005!!\000\021d\002\000\022H\000\023d\005!!\000\024d\013\000\025d\r\000\026d\014\000\027d\005"
        "c\002\000\030I\000\031G\000\032H\000\033L!!\000\034T\000\035P\000\036R\000\037O!!\000 Q!!\000!T\000\""
        "S\000#J\000$F\000%K\000&c\002\000\'N\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UploadVideoResponse

@implementation UploadVideoResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasMsgId, msgId;
@dynamic hasThumbStartPos, thumbStartPos;
@dynamic hasVideoStartPos, videoStartPos;
@dynamic hasNewMsgId, newMsgId;
@dynamic hasAeskey, aeskey;

typedef struct UploadVideoResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t thumbStartPos;
  uint32_t videoStartPos;
  BaseResponse *baseResponse;
  NSString *clientMsgId;
  NSString *aeskey;
  uint64_t newMsgId;
} UploadVideoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = UploadVideoResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UploadVideoResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoResponse_FieldNumber_ClientMsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UploadVideoResponse__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoResponse_FieldNumber_MsgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UploadVideoResponse__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "thumbStartPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoResponse_FieldNumber_ThumbStartPos,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UploadVideoResponse__storage_, thumbStartPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "videoStartPos",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoResponse_FieldNumber_VideoStartPos,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UploadVideoResponse__storage_, videoStartPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoResponse_FieldNumber_NewMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UploadVideoResponse__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = UploadVideoResponse_FieldNumber_Aeskey,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UploadVideoResponse__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UploadVideoResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UploadVideoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001L\000\002K\000\003E\000\004M\000\005M\000\006H\000\007d\002\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadVideoRequest

@implementation DownloadVideoRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasMsgId, msgId;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasNetworkEnv, networkEnv;
@dynamic hasMxPackSize, mxPackSize;
@dynamic hasNewMsgId, newMsgId;

typedef struct DownloadVideoRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t totalLen;
  uint32_t startPos;
  uint32_t networkEnv;
  uint32_t mxPackSize;
  BaseRequest *baseRequest;
  uint64_t newMsgId;
} DownloadVideoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = DownloadVideoRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadVideoRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoRequest_FieldNumber_MsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadVideoRequest__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoRequest_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DownloadVideoRequest__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoRequest_FieldNumber_StartPos,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DownloadVideoRequest__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "networkEnv",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoRequest_FieldNumber_NetworkEnv,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DownloadVideoRequest__storage_, networkEnv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "mxPackSize",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoRequest_FieldNumber_MxPackSize,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DownloadVideoRequest__storage_, mxPackSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoRequest_FieldNumber_NewMsgId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(DownloadVideoRequest__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadVideoRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadVideoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001K\000\002E\000\003H\000\004H\000\005J\000\006J\000\007H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DownloadVideoResponse

@implementation DownloadVideoResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasMsgId, msgId;
@dynamic hasTotalLen, totalLen;
@dynamic hasStartPos, startPos;
@dynamic hasData_p, data_p;
@dynamic hasNewMsgId, newMsgId;

typedef struct DownloadVideoResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgId;
  uint32_t totalLen;
  uint32_t startPos;
  BaseResponse *baseResponse;
  SKBuiltinBuffer_t *data_p;
  uint64_t newMsgId;
} DownloadVideoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = DownloadVideoResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownloadVideoResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoResponse_FieldNumber_MsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownloadVideoResponse__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "totalLen",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoResponse_FieldNumber_TotalLen,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DownloadVideoResponse__storage_, totalLen),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startPos",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoResponse_FieldNumber_StartPos,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DownloadVideoResponse__storage_, startPos),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = GPBStringifySymbol(SKBuiltinBuffer_t),
        .number = DownloadVideoResponse_FieldNumber_Data_p,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DownloadVideoResponse__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "newMsgId",
        .dataTypeSpecific.className = NULL,
        .number = DownloadVideoResponse_FieldNumber_NewMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DownloadVideoResponse__storage_, newMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DownloadVideoResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownloadVideoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001L\000\002E\000\003H\000\004H\000\005\000Data\000\006H\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RevokeMsgRequest

@implementation RevokeMsgRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasNewClientMsgId, newClientMsgId;
@dynamic hasCreateTime, createTime;
@dynamic hasSvrMsgId, svrMsgId;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasIndexOfRequest, indexOfRequest;
@dynamic hasSvrNewMsgId, svrNewMsgId;

typedef struct RevokeMsgRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t newClientMsgId;
  uint32_t createTime;
  uint32_t svrMsgId;
  uint32_t indexOfRequest;
  BaseRequest *baseRequest;
  NSString *clientMsgId;
  NSString *fromUserName;
  NSString *toUserName;
  uint64_t svrNewMsgId;
} RevokeMsgRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = RevokeMsgRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_ClientMsgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newClientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_NewClientMsgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, newClientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_CreateTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "svrMsgId",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_SvrMsgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, svrMsgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_FromUserName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_ToUserName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "indexOfRequest",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_IndexOfRequest,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, indexOfRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "svrNewMsgId",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgRequest_FieldNumber_SvrNewMsgId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(RevokeMsgRequest__storage_, svrNewMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RevokeMsgRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RevokeMsgRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001K\000\002K\000\003N\000\004J\000\005H\000\006L\000\007J\000\010N\000\tK\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RevokeMsgResponse

@implementation RevokeMsgResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasIntroduction, introduction;
@dynamic hasSysWording, sysWording;

typedef struct RevokeMsgResponse__storage_ {
  uint32_t _has_storage_[1];
  BaseResponse *baseResponse;
  NSString *introduction;
  NSString *sysWording;
} RevokeMsgResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = RevokeMsgResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RevokeMsgResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "introduction",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgResponse_FieldNumber_Introduction,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RevokeMsgResponse__storage_, introduction),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sysWording",
        .dataTypeSpecific.className = NULL,
        .number = RevokeMsgResponse_FieldNumber_SysWording,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RevokeMsgResponse__storage_, sysWording),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RevokeMsgResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RevokeMsgResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001L\000\002L\000\003J\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendYoRequest

@implementation SendYoRequest

@dynamic hasToUserName, toUserName;
@dynamic hasType, type;
@dynamic hasCount, count;
@dynamic hasCreateTime, createTime;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasMsgSource, msgSource;
@dynamic hasYoType, yoType;

typedef struct SendYoRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t count;
  uint32_t createTime;
  uint32_t clientMsgId;
  uint32_t yoType;
  NSString *toUserName;
  NSString *msgSource;
} SendYoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = SendYoRequest_FieldNumber_ToUserName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SendYoRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = SendYoRequest_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SendYoRequest__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = SendYoRequest_FieldNumber_Count,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SendYoRequest__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = SendYoRequest_FieldNumber_CreateTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SendYoRequest__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.className = NULL,
        .number = SendYoRequest_FieldNumber_ClientMsgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SendYoRequest__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgSource",
        .dataTypeSpecific.className = NULL,
        .number = SendYoRequest_FieldNumber_MsgSource,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SendYoRequest__storage_, msgSource),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "yoType",
        .dataTypeSpecific.className = NULL,
        .number = SendYoRequest_FieldNumber_YoType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SendYoRequest__storage_, yoType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendYoRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendYoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001J\000\002D\000\003E\000\004J\000\005K\000\006I\000\007F\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendYoResponse

@implementation SendYoResponse

@dynamic hasRet, ret;
@dynamic hasServerTime, serverTime;
@dynamic hasMsgId, msgId;

typedef struct SendYoResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t ret;
  uint32_t serverTime;
  uint64_t msgId;
} SendYoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ret",
        .dataTypeSpecific.className = NULL,
        .number = SendYoResponse_FieldNumber_Ret,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SendYoResponse__storage_, ret),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "serverTime",
        .dataTypeSpecific.className = NULL,
        .number = SendYoResponse_FieldNumber_ServerTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SendYoResponse__storage_, serverTime),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = SendYoResponse_FieldNumber_MsgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SendYoResponse__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendYoResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendYoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001C\000\002J\000\003E\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckBigFileUploadRequest

@implementation CheckBigFileUploadRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasFileSize, fileSize;
@dynamic hasAeskey, aeskey;
@dynamic hasFileMd5, fileMd5;
@dynamic hasFileType, fileType;
@dynamic hasFileExt, fileExt;
@dynamic hasFileName, fileName;

typedef struct CheckBigFileUploadRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t fileType;
  BaseRequest *baseRequest;
  NSString *fromUserName;
  NSString *toUserName;
  NSString *aeskey;
  NSString *fileMd5;
  NSString *fileExt;
  NSString *fileName;
  uint64_t fileSize;
} CheckBigFileUploadRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = CheckBigFileUploadRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_FromUserName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_ToUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileSize",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_FileSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, fileSize),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_Aeskey,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileMd5",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_FileMd5,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, fileMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileType",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_FileType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, fileType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fileExt",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_FileExt,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, fileExt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileName",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadRequest_FieldNumber_FileName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CheckBigFileUploadRequest__storage_, fileName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckBigFileUploadRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckBigFileUploadRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001K\000\002L\000\003J\000\004H\000\005d\002\000\006G\000\007H\000\010G\000\tH\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckBigFileUploadResponse

@implementation CheckBigFileUploadResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasSignature, signature;
@dynamic hasFakeuin, fakeuin;
@dynamic hasFakeAeskey, fakeAeskey;
@dynamic hasFakeSignature, fakeSignature;

typedef struct CheckBigFileUploadResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t fakeuin;
  BaseResponse *baseResponse;
  NSString *signature;
  NSString *fakeAeskey;
  NSString *fakeSignature;
} CheckBigFileUploadResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = CheckBigFileUploadResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckBigFileUploadResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadResponse_FieldNumber_Signature,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckBigFileUploadResponse__storage_, signature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fakeuin",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadResponse_FieldNumber_Fakeuin,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CheckBigFileUploadResponse__storage_, fakeuin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fakeAeskey",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadResponse_FieldNumber_FakeAeskey,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CheckBigFileUploadResponse__storage_, fakeAeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fakeSignature",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileUploadResponse_FieldNumber_FakeSignature,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CheckBigFileUploadResponse__storage_, fakeSignature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckBigFileUploadResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckBigFileUploadResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001L\000\002I\000\003G\000\004Ec\002\000\005M\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckBigFileDownloadRequest

@implementation CheckBigFileDownloadRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasFromUserName, fromUserName;
@dynamic hasToUserName, toUserName;
@dynamic hasFileSize, fileSize;
@dynamic hasAeskey, aeskey;
@dynamic hasFileMd5, fileMd5;
@dynamic hasFileType, fileType;
@dynamic hasFileExt, fileExt;
@dynamic hasFileName, fileName;

typedef struct CheckBigFileDownloadRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t fileType;
  BaseRequest *baseRequest;
  NSString *fromUserName;
  NSString *toUserName;
  NSString *aeskey;
  NSString *fileMd5;
  NSString *fileExt;
  NSString *fileName;
  uint64_t fileSize;
} CheckBigFileDownloadRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = CheckBigFileDownloadRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, baseRequest),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_FromUserName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, fromUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_ToUserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, toUserName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileSize",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_FileSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, fileSize),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "aeskey",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_Aeskey,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, aeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileMd5",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_FileMd5,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, fileMd5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileType",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_FileType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, fileType),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fileExt",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_FileExt,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, fileExt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileName",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadRequest_FieldNumber_FileName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadRequest__storage_, fileName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckBigFileDownloadRequest class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckBigFileDownloadRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001K\000\002L\000\003J\000\004H\000\005d\002\000\006G\000\007H\000\010G\000\tH\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CheckBigFileDownloadResponse

@implementation CheckBigFileDownloadResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasSignature, signature;
@dynamic hasFakeuin, fakeuin;
@dynamic hasFakeAeskey, fakeAeskey;
@dynamic hasFakeSignature, fakeSignature;

typedef struct CheckBigFileDownloadResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t fakeuin;
  BaseResponse *baseResponse;
  NSString *signature;
  NSString *fakeAeskey;
  NSString *fakeSignature;
} CheckBigFileDownloadResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseResponse),
        .number = CheckBigFileDownloadResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadResponse__storage_, baseResponse),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadResponse_FieldNumber_Signature,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadResponse__storage_, signature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fakeuin",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadResponse_FieldNumber_Fakeuin,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadResponse__storage_, fakeuin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fakeAeskey",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadResponse_FieldNumber_FakeAeskey,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadResponse__storage_, fakeAeskey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fakeSignature",
        .dataTypeSpecific.className = NULL,
        .number = CheckBigFileDownloadResponse_FieldNumber_FakeSignature,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CheckBigFileDownloadResponse__storage_, fakeSignature),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CheckBigFileDownloadResponse class]
                                     rootClass:[MmextsendRoot class]
                                          file:MmextsendRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CheckBigFileDownloadResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001L\000\002I\000\003G\000\004Ec\002\000\005M\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
