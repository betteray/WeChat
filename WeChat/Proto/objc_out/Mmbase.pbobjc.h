// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmbase.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AdditionalContactList;
@class BaseRequest;
@class BaseResponse;
@class BuiltinIP;
@class ChatRoomMemberData;
@class ChatRoomMemberInfo;
@class CmdItem;
@class CustomizedInfo;
@class DisturbSetting;
@class DisturbTimeSpan;
@class GmailInfo;
@class GmailList;
@class Host;
@class LinkedinContactItem;
@class PatternLockInfo;
@class PhoneNumItem;
@class PhoneNumListInfo;
@class PluginKey;
@class RoomInfo;
@class SKBuiltinBuffer_t;
@class SKBuiltinString_t;
@class SafeDevice;
@class SafeDeviceList;
@class SnsUserInfo;
@class StyleKeyVal;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MmbaseRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MmbaseRoot : GPBRootObject
@end

#pragma mark - BuiltinIP

typedef GPB_ENUM(BuiltinIP_FieldNumber) {
  BuiltinIP_FieldNumber_Type = 1,
  BuiltinIP_FieldNumber_Port = 2,
  BuiltinIP_FieldNumber_Ip = 3,
  BuiltinIP_FieldNumber_Domain = 4,
};

@interface BuiltinIP : GPBMessage

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) uint32_t port;

@property(nonatomic, readwrite) BOOL hasPort;
@property(nonatomic, readwrite, copy, null_resettable) NSData *ip;
/** Test to see if @c ip has been set. */
@property(nonatomic, readwrite) BOOL hasIp;

@property(nonatomic, readwrite, copy, null_resettable) NSData *domain;
/** Test to see if @c domain has been set. */
@property(nonatomic, readwrite) BOOL hasDomain;

@end

#pragma mark - BuiltinIPList

typedef GPB_ENUM(BuiltinIPList_FieldNumber) {
  BuiltinIPList_FieldNumber_LongConnectIpcount = 1,
  BuiltinIPList_FieldNumber_ShortConnectIpcount = 2,
  BuiltinIPList_FieldNumber_LongConnectIplistArray = 3,
  BuiltinIPList_FieldNumber_ShortConnectIplistArray = 4,
  BuiltinIPList_FieldNumber_Seq = 5,
};

@interface BuiltinIPList : GPBMessage

@property(nonatomic, readwrite) uint32_t longConnectIpcount;

@property(nonatomic, readwrite) BOOL hasLongConnectIpcount;
@property(nonatomic, readwrite) uint32_t shortConnectIpcount;

@property(nonatomic, readwrite) BOOL hasShortConnectIpcount;
@property(nonatomic, readwrite) uint32_t seq;

@property(nonatomic, readwrite) BOOL hasSeq;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BuiltinIP*> *longConnectIplistArray;
/** The number of items in @c longConnectIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger longConnectIplistArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BuiltinIP*> *shortConnectIplistArray;
/** The number of items in @c shortConnectIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shortConnectIplistArray_Count;

@end

#pragma mark - NetworkControl

typedef GPB_ENUM(NetworkControl_FieldNumber) {
  NetworkControl_FieldNumber_PortList = 1,
  NetworkControl_FieldNumber_TimeoutList = 2,
  NetworkControl_FieldNumber_MinNoopInterval = 3,
  NetworkControl_FieldNumber_MaxNoopInterval = 4,
  NetworkControl_FieldNumber_TypingInterval = 5,
  NetworkControl_FieldNumber_NoopIntervalTime = 7,
};

@interface NetworkControl : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portList;
/** Test to see if @c portList has been set. */
@property(nonatomic, readwrite) BOOL hasPortList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeoutList;
/** Test to see if @c timeoutList has been set. */
@property(nonatomic, readwrite) BOOL hasTimeoutList;

@property(nonatomic, readwrite) uint32_t minNoopInterval;

@property(nonatomic, readwrite) BOOL hasMinNoopInterval;
@property(nonatomic, readwrite) uint32_t maxNoopInterval;

@property(nonatomic, readwrite) BOOL hasMaxNoopInterval;
@property(nonatomic, readwrite) int32_t typingInterval;

@property(nonatomic, readwrite) BOOL hasTypingInterval;
@property(nonatomic, readwrite) int32_t noopIntervalTime;

@property(nonatomic, readwrite) BOOL hasNoopIntervalTime;
@end

#pragma mark - PluginKey

typedef GPB_ENUM(PluginKey_FieldNumber) {
  PluginKey_FieldNumber_Key = 1,
  PluginKey_FieldNumber_Id_p = 2,
};

@interface PluginKey : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite) uint32_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
@end

#pragma mark - PluginKeyList

typedef GPB_ENUM(PluginKeyList_FieldNumber) {
  PluginKeyList_FieldNumber_Count = 1,
  PluginKeyList_FieldNumber_ListArray = 2,
};

@interface PluginKeyList : GPBMessage

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PluginKey*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - Host

typedef GPB_ENUM(Host_FieldNumber) {
  Host_FieldNumber_Origin = 1,
  Host_FieldNumber_Substitute = 2,
  Host_FieldNumber_Priority = 3,
};

@interface Host : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *origin;
/** Test to see if @c origin has been set. */
@property(nonatomic, readwrite) BOOL hasOrigin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *substitute;
/** Test to see if @c substitute has been set. */
@property(nonatomic, readwrite) BOOL hasSubstitute;

@property(nonatomic, readwrite) int32_t priority;

@property(nonatomic, readwrite) BOOL hasPriority;
@end

#pragma mark - HostList

typedef GPB_ENUM(HostList_FieldNumber) {
  HostList_FieldNumber_Count = 1,
  HostList_FieldNumber_ListArray = 2,
};

@interface HostList : GPBMessage

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Host*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PositionInfo

typedef GPB_ENUM(PositionInfo_FieldNumber) {
  PositionInfo_FieldNumber_Longitude = 1,
  PositionInfo_FieldNumber_Latitude = 2,
  PositionInfo_FieldNumber_Precision = 3,
  PositionInfo_FieldNumber_MacAddr = 4,
  PositionInfo_FieldNumber_CellId = 5,
  PositionInfo_FieldNumber_Gpssource = 6,
};

@interface PositionInfo : GPBMessage

@property(nonatomic, readwrite) float longitude;

@property(nonatomic, readwrite) BOOL hasLongitude;
@property(nonatomic, readwrite) float latitude;

@property(nonatomic, readwrite) BOOL hasLatitude;
@property(nonatomic, readwrite) int32_t precision;

@property(nonatomic, readwrite) BOOL hasPrecision;
@property(nonatomic, readwrite, copy, null_resettable) NSString *macAddr;
/** Test to see if @c macAddr has been set. */
@property(nonatomic, readwrite) BOOL hasMacAddr;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cellId;
/** Test to see if @c cellId has been set. */
@property(nonatomic, readwrite) BOOL hasCellId;

@property(nonatomic, readwrite) int32_t gpssource;

@property(nonatomic, readwrite) BOOL hasGpssource;
@end

#pragma mark - SnsUserInfo

typedef GPB_ENUM(SnsUserInfo_FieldNumber) {
  SnsUserInfo_FieldNumber_SnsFlag = 1,
  SnsUserInfo_FieldNumber_SnsBgimgId = 2,
  SnsUserInfo_FieldNumber_SnsBgobjectId = 3,
  SnsUserInfo_FieldNumber_SnsFlagEx = 4,
};

@interface SnsUserInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t snsFlag;

@property(nonatomic, readwrite) BOOL hasSnsFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *snsBgimgId;
/** Test to see if @c snsBgimgId has been set. */
@property(nonatomic, readwrite) BOOL hasSnsBgimgId;

@property(nonatomic, readwrite) uint64_t snsBgobjectId;

@property(nonatomic, readwrite) BOOL hasSnsBgobjectId;
@property(nonatomic, readwrite) uint32_t snsFlagEx;

@property(nonatomic, readwrite) BOOL hasSnsFlagEx;
@end

#pragma mark - CustomizedInfo

typedef GPB_ENUM(CustomizedInfo_FieldNumber) {
  CustomizedInfo_FieldNumber_BrandFlag = 1,
  CustomizedInfo_FieldNumber_ExternalInfo = 2,
  CustomizedInfo_FieldNumber_BrandInfo = 3,
  CustomizedInfo_FieldNumber_BrandIconURL = 4,
};

@interface CustomizedInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t brandFlag;

@property(nonatomic, readwrite) BOOL hasBrandFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *externalInfo;
/** Test to see if @c externalInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExternalInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *brandInfo;
/** Test to see if @c brandInfo has been set. */
@property(nonatomic, readwrite) BOOL hasBrandInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *brandIconURL;
/** Test to see if @c brandIconURL has been set. */
@property(nonatomic, readwrite) BOOL hasBrandIconURL;

@end

#pragma mark - CmdItem

typedef GPB_ENUM(CmdItem_FieldNumber) {
  CmdItem_FieldNumber_CmdId = 1,
  CmdItem_FieldNumber_CmdBuf = 2,
};

@interface CmdItem : GPBMessage

@property(nonatomic, readwrite) int32_t cmdId;

@property(nonatomic, readwrite) BOOL hasCmdId;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cmdBuf;
/** Test to see if @c cmdBuf has been set. */
@property(nonatomic, readwrite) BOOL hasCmdBuf;

@end

#pragma mark - CmdList

typedef GPB_ENUM(CmdList_FieldNumber) {
  CmdList_FieldNumber_Count = 1,
  CmdList_FieldNumber_ListArray = 2,
};

@interface CmdList : GPBMessage

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CmdItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - ShakeSyncRequest

typedef GPB_ENUM(ShakeSyncRequest_FieldNumber) {
  ShakeSyncRequest_FieldNumber_BaseRequest = 1,
  ShakeSyncRequest_FieldNumber_Longitude = 2,
  ShakeSyncRequest_FieldNumber_Latitude = 3,
  ShakeSyncRequest_FieldNumber_Precision = 4,
  ShakeSyncRequest_FieldNumber_MacAddr = 5,
  ShakeSyncRequest_FieldNumber_CellId = 6,
  ShakeSyncRequest_FieldNumber_ImgId = 7,
  ShakeSyncRequest_FieldNumber_Times = 8,
};

@interface ShakeSyncRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) float longitude;

@property(nonatomic, readwrite) BOOL hasLongitude;
@property(nonatomic, readwrite) float latitude;

@property(nonatomic, readwrite) BOOL hasLatitude;
@property(nonatomic, readwrite) int32_t precision;

@property(nonatomic, readwrite) BOOL hasPrecision;
@property(nonatomic, readwrite, copy, null_resettable) NSString *macAddr;
/** Test to see if @c macAddr has been set. */
@property(nonatomic, readwrite) BOOL hasMacAddr;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cellId;
/** Test to see if @c cellId has been set. */
@property(nonatomic, readwrite) BOOL hasCellId;

@property(nonatomic, readwrite) uint32_t imgId;

@property(nonatomic, readwrite) BOOL hasImgId;
@property(nonatomic, readwrite) uint32_t times;

@property(nonatomic, readwrite) BOOL hasTimes;
@end

#pragma mark - ShakeSyncResponse

typedef GPB_ENUM(ShakeSyncResponse_FieldNumber) {
  ShakeSyncResponse_FieldNumber_BaseResponse = 1,
  ShakeSyncResponse_FieldNumber_Buffer = 2,
  ShakeSyncResponse_FieldNumber_Ret = 3,
  ShakeSyncResponse_FieldNumber_ImgId = 4,
  ShakeSyncResponse_FieldNumber_ImgTotoalLen = 5,
};

@interface ShakeSyncResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *buffer;
/** Test to see if @c buffer has been set. */
@property(nonatomic, readwrite) BOOL hasBuffer;

@property(nonatomic, readwrite) uint32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
@property(nonatomic, readwrite) uint32_t imgId;

@property(nonatomic, readwrite) BOOL hasImgId;
@property(nonatomic, readwrite) uint32_t imgTotoalLen;

@property(nonatomic, readwrite) BOOL hasImgTotoalLen;
@end

#pragma mark - BindEmailRequest

typedef GPB_ENUM(BindEmailRequest_FieldNumber) {
  BindEmailRequest_FieldNumber_BaseRequest = 1,
  BindEmailRequest_FieldNumber_OpCode = 2,
  BindEmailRequest_FieldNumber_Email = 3,
};

@interface BindEmailRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opCode;

@property(nonatomic, readwrite) BOOL hasOpCode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

@end

#pragma mark - BindEmailResponse

typedef GPB_ENUM(BindEmailResponse_FieldNumber) {
  BindEmailResponse_FieldNumber_BaseResponse = 1,
};

@interface BindEmailResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - GetLocationRequest

typedef GPB_ENUM(GetLocationRequest_FieldNumber) {
  GetLocationRequest_FieldNumber_BaseRequest = 1,
  GetLocationRequest_FieldNumber_Longitude = 3,
  GetLocationRequest_FieldNumber_Latitude = 4,
  GetLocationRequest_FieldNumber_Precision = 5,
  GetLocationRequest_FieldNumber_MacAddr = 6,
  GetLocationRequest_FieldNumber_CellId = 7,
  GetLocationRequest_FieldNumber_Gpssource = 8,
};

@interface GetLocationRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) int32_t longitude;

@property(nonatomic, readwrite) BOOL hasLongitude;
@property(nonatomic, readwrite) int32_t latitude;

@property(nonatomic, readwrite) BOOL hasLatitude;
@property(nonatomic, readwrite) int32_t precision;

@property(nonatomic, readwrite) BOOL hasPrecision;
@property(nonatomic, readwrite, copy, null_resettable) NSString *macAddr;
/** Test to see if @c macAddr has been set. */
@property(nonatomic, readwrite) BOOL hasMacAddr;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cellId;
/** Test to see if @c cellId has been set. */
@property(nonatomic, readwrite) BOOL hasCellId;

@property(nonatomic, readwrite) int32_t gpssource;

@property(nonatomic, readwrite) BOOL hasGpssource;
@end

#pragma mark - GetLocationResponse

typedef GPB_ENUM(GetLocationResponse_FieldNumber) {
  GetLocationResponse_FieldNumber_BaseResponse = 1,
  GetLocationResponse_FieldNumber_Longitude = 2,
  GetLocationResponse_FieldNumber_Latitude = 3,
};

@interface GetLocationResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t longitude;

@property(nonatomic, readwrite) BOOL hasLongitude;
@property(nonatomic, readwrite) int32_t latitude;

@property(nonatomic, readwrite) BOOL hasLatitude;
@end

#pragma mark - RoomInfo

typedef GPB_ENUM(RoomInfo_FieldNumber) {
  RoomInfo_FieldNumber_UserName = 1,
  RoomInfo_FieldNumber_NickName = 2,
};

@interface RoomInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@end

#pragma mark - CDNDnsInfo

typedef GPB_ENUM(CDNDnsInfo_FieldNumber) {
  CDNDnsInfo_FieldNumber_Ver = 1,
  CDNDnsInfo_FieldNumber_Uin = 2,
  CDNDnsInfo_FieldNumber_ExpireTime = 3,
  CDNDnsInfo_FieldNumber_FrontId = 4,
  CDNDnsInfo_FieldNumber_FrontIpcount = 5,
  CDNDnsInfo_FieldNumber_FrontIplistArray = 6,
  CDNDnsInfo_FieldNumber_ZoneDomain = 7,
  CDNDnsInfo_FieldNumber_AuthKey = 8,
  CDNDnsInfo_FieldNumber_ZoneId = 9,
  CDNDnsInfo_FieldNumber_ZoneIpcount = 10,
  CDNDnsInfo_FieldNumber_ZoneIplistArray = 11,
};

@interface CDNDnsInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t ver;

@property(nonatomic, readwrite) BOOL hasVer;
@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite) uint32_t expireTime;

@property(nonatomic, readwrite) BOOL hasExpireTime;
@property(nonatomic, readwrite) int32_t frontId;

@property(nonatomic, readwrite) BOOL hasFrontId;
@property(nonatomic, readwrite) int32_t frontIpcount;

@property(nonatomic, readwrite) BOOL hasFrontIpcount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SKBuiltinString_t*> *frontIplistArray;
/** The number of items in @c frontIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger frontIplistArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *zoneDomain;
/** Test to see if @c zoneDomain has been set. */
@property(nonatomic, readwrite) BOOL hasZoneDomain;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *authKey;
/** Test to see if @c authKey has been set. */
@property(nonatomic, readwrite) BOOL hasAuthKey;

@property(nonatomic, readwrite) int32_t zoneId;

@property(nonatomic, readwrite) BOOL hasZoneId;
@property(nonatomic, readwrite) int32_t zoneIpcount;

@property(nonatomic, readwrite) BOOL hasZoneIpcount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SKBuiltinString_t*> *zoneIplistArray;
/** The number of items in @c zoneIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger zoneIplistArray_Count;

@end

#pragma mark - StyleKeyVal

typedef GPB_ENUM(StyleKeyVal_FieldNumber) {
  StyleKeyVal_FieldNumber_Key = 1,
  StyleKeyVal_FieldNumber_Val = 2,
};

@interface StyleKeyVal : GPBMessage

@property(nonatomic, readwrite) uint32_t key;

@property(nonatomic, readwrite) BOOL hasKey;
@property(nonatomic, readwrite, copy, null_resettable) NSString *val;
/** Test to see if @c val has been set. */
@property(nonatomic, readwrite) BOOL hasVal;

@end

#pragma mark - ShowStyleKey

typedef GPB_ENUM(ShowStyleKey_FieldNumber) {
  ShowStyleKey_FieldNumber_KeyCount = 1,
  ShowStyleKey_FieldNumber_KeyArray = 2,
};

@interface ShowStyleKey : GPBMessage

@property(nonatomic, readwrite) uint32_t keyCount;

@property(nonatomic, readwrite) BOOL hasKeyCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<StyleKeyVal*> *keyArray;
/** The number of items in @c keyArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keyArray_Count;

@end

#pragma mark - SafeDevice

typedef GPB_ENUM(SafeDevice_FieldNumber) {
  SafeDevice_FieldNumber_Name = 1,
  SafeDevice_FieldNumber_Uuid = 2,
  SafeDevice_FieldNumber_DeviceType = 3,
  SafeDevice_FieldNumber_CreateTime = 4,
};

@interface SafeDevice : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite) uint32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
@end

#pragma mark - SafeDeviceList

typedef GPB_ENUM(SafeDeviceList_FieldNumber) {
  SafeDeviceList_FieldNumber_Count = 1,
  SafeDeviceList_FieldNumber_ListArray = 2,
};

@interface SafeDeviceList : GPBMessage

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SafeDevice*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - MemberReq

typedef GPB_ENUM(MemberReq_FieldNumber) {
  MemberReq_FieldNumber_MemberName = 1,
};

@interface MemberReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *memberName;
/** Test to see if @c memberName has been set. */
@property(nonatomic, readwrite) BOOL hasMemberName;

@end

#pragma mark - MemberResp

typedef GPB_ENUM(MemberResp_FieldNumber) {
  MemberResp_FieldNumber_MemberName = 1,
  MemberResp_FieldNumber_MemberStatus = 2,
  MemberResp_FieldNumber_NickName = 3,
  MemberResp_FieldNumber_Pyinitial = 4,
  MemberResp_FieldNumber_QuanPin = 5,
  MemberResp_FieldNumber_Sex = 6,
  MemberResp_FieldNumber_Remark = 9,
  MemberResp_FieldNumber_RemarkPyinitial = 10,
  MemberResp_FieldNumber_RemarkQuanPin = 11,
  MemberResp_FieldNumber_ContactType = 12,
  MemberResp_FieldNumber_Province = 13,
  MemberResp_FieldNumber_City = 14,
  MemberResp_FieldNumber_Signature = 15,
  MemberResp_FieldNumber_PersonalCard = 16,
  MemberResp_FieldNumber_VerifyFlag = 17,
  MemberResp_FieldNumber_VerifyInfo = 18,
  MemberResp_FieldNumber_Country = 19,
};

@interface MemberResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *memberName;
/** Test to see if @c memberName has been set. */
@property(nonatomic, readwrite) BOOL hasMemberName;

@property(nonatomic, readwrite) uint32_t memberStatus;

@property(nonatomic, readwrite) BOOL hasMemberStatus;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *pyinitial;
/** Test to see if @c pyinitial has been set. */
@property(nonatomic, readwrite) BOOL hasPyinitial;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *quanPin;
/** Test to see if @c quanPin has been set. */
@property(nonatomic, readwrite) BOOL hasQuanPin;

@property(nonatomic, readwrite) int32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *remark;
/** Test to see if @c remark has been set. */
@property(nonatomic, readwrite) BOOL hasRemark;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *remarkPyinitial;
/** Test to see if @c remarkPyinitial has been set. */
@property(nonatomic, readwrite) BOOL hasRemarkPyinitial;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *remarkQuanPin;
/** Test to see if @c remarkQuanPin has been set. */
@property(nonatomic, readwrite) BOOL hasRemarkQuanPin;

@property(nonatomic, readwrite) uint32_t contactType;

@property(nonatomic, readwrite) BOOL hasContactType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *province;
/** Test to see if @c province has been set. */
@property(nonatomic, readwrite) BOOL hasProvince;

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;
/** Test to see if @c city has been set. */
@property(nonatomic, readwrite) BOOL hasCity;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@property(nonatomic, readwrite) uint32_t personalCard;

@property(nonatomic, readwrite) BOOL hasPersonalCard;
@property(nonatomic, readwrite) uint32_t verifyFlag;

@property(nonatomic, readwrite) BOOL hasVerifyFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyInfo;
/** Test to see if @c verifyInfo has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

@end

#pragma mark - DelMemberReq

typedef GPB_ENUM(DelMemberReq_FieldNumber) {
  DelMemberReq_FieldNumber_MemberName = 1,
};

@interface DelMemberReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *memberName;
/** Test to see if @c memberName has been set. */
@property(nonatomic, readwrite) BOOL hasMemberName;

@end

#pragma mark - DelMemberResp

typedef GPB_ENUM(DelMemberResp_FieldNumber) {
  DelMemberResp_FieldNumber_MemberName = 1,
};

@interface DelMemberResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *memberName;
/** Test to see if @c memberName has been set. */
@property(nonatomic, readwrite) BOOL hasMemberName;

@end

#pragma mark - DisturbTimeSpan

typedef GPB_ENUM(DisturbTimeSpan_FieldNumber) {
  DisturbTimeSpan_FieldNumber_BeginTime = 1,
  DisturbTimeSpan_FieldNumber_EndTime = 2,
};

@interface DisturbTimeSpan : GPBMessage

@property(nonatomic, readwrite) uint32_t beginTime;

@property(nonatomic, readwrite) BOOL hasBeginTime;
@property(nonatomic, readwrite) uint32_t endTime;

@property(nonatomic, readwrite) BOOL hasEndTime;
@end

#pragma mark - DisturbSetting

typedef GPB_ENUM(DisturbSetting_FieldNumber) {
  DisturbSetting_FieldNumber_NightSetting = 1,
  DisturbSetting_FieldNumber_NightTime = 2,
  DisturbSetting_FieldNumber_AllDaySetting = 3,
  DisturbSetting_FieldNumber_AllDayTime = 4,
};

@interface DisturbSetting : GPBMessage

@property(nonatomic, readwrite) uint32_t nightSetting;

@property(nonatomic, readwrite) BOOL hasNightSetting;
@property(nonatomic, readwrite, strong, null_resettable) DisturbTimeSpan *nightTime;
/** Test to see if @c nightTime has been set. */
@property(nonatomic, readwrite) BOOL hasNightTime;

@property(nonatomic, readwrite) uint32_t allDaySetting;

@property(nonatomic, readwrite) BOOL hasAllDaySetting;
@property(nonatomic, readwrite, strong, null_resettable) DisturbTimeSpan *allDayTime;
/** Test to see if @c allDayTime has been set. */
@property(nonatomic, readwrite) BOOL hasAllDayTime;

@end

#pragma mark - GmailInfo

typedef GPB_ENUM(GmailInfo_FieldNumber) {
  GmailInfo_FieldNumber_GmailAcct = 1,
  GmailInfo_FieldNumber_GmailSwitch = 2,
  GmailInfo_FieldNumber_GmailErrCode = 3,
};

@interface GmailInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *gmailAcct;
/** Test to see if @c gmailAcct has been set. */
@property(nonatomic, readwrite) BOOL hasGmailAcct;

@property(nonatomic, readwrite) uint32_t gmailSwitch;

@property(nonatomic, readwrite) BOOL hasGmailSwitch;
@property(nonatomic, readwrite) uint32_t gmailErrCode;

@property(nonatomic, readwrite) BOOL hasGmailErrCode;
@end

#pragma mark - GmailList

typedef GPB_ENUM(GmailList_FieldNumber) {
  GmailList_FieldNumber_Count = 1,
  GmailList_FieldNumber_ListArray = 2,
};

@interface GmailList : GPBMessage

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GmailInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - LinkedinContactItem

typedef GPB_ENUM(LinkedinContactItem_FieldNumber) {
  LinkedinContactItem_FieldNumber_LinkedinName = 1,
  LinkedinContactItem_FieldNumber_LinkedinMemberId = 2,
  LinkedinContactItem_FieldNumber_LinkedinPublicURL = 3,
};

@interface LinkedinContactItem : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinName;
/** Test to see if @c linkedinName has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinMemberId;
/** Test to see if @c linkedinMemberId has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinMemberId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinPublicURL;
/** Test to see if @c linkedinPublicURL has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinPublicURL;

@end

#pragma mark - AdditionalContactList

typedef GPB_ENUM(AdditionalContactList_FieldNumber) {
  AdditionalContactList_FieldNumber_LinkedinContactItem = 1,
};

@interface AdditionalContactList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LinkedinContactItem *linkedinContactItem;
/** Test to see if @c linkedinContactItem has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinContactItem;

@end

#pragma mark - ChatRoomMemberInfo

typedef GPB_ENUM(ChatRoomMemberInfo_FieldNumber) {
  ChatRoomMemberInfo_FieldNumber_UserName = 1,
  ChatRoomMemberInfo_FieldNumber_NickName = 2,
  ChatRoomMemberInfo_FieldNumber_DisplayName = 3,
  ChatRoomMemberInfo_FieldNumber_BigHeadImgURL = 4,
  ChatRoomMemberInfo_FieldNumber_SmallHeadImgURL = 5,
  ChatRoomMemberInfo_FieldNumber_ChatroomMemberFlag = 6,
  ChatRoomMemberInfo_FieldNumber_InviterUserName = 7,
};

@interface ChatRoomMemberInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;
/** Test to see if @c displayName has been set. */
@property(nonatomic, readwrite) BOOL hasDisplayName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bigHeadImgURL;
/** Test to see if @c bigHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasBigHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallHeadImgURL;
/** Test to see if @c smallHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasSmallHeadImgURL;

@property(nonatomic, readwrite) uint32_t chatroomMemberFlag;

@property(nonatomic, readwrite) BOOL hasChatroomMemberFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviterUserName;
/** Test to see if @c inviterUserName has been set. */
@property(nonatomic, readwrite) BOOL hasInviterUserName;

@end

#pragma mark - ChatRoomMemberData

typedef GPB_ENUM(ChatRoomMemberData_FieldNumber) {
  ChatRoomMemberData_FieldNumber_MemberCount = 1,
  ChatRoomMemberData_FieldNumber_ChatRoomMemberArray = 2,
  ChatRoomMemberData_FieldNumber_InfoMask = 3,
};

@interface ChatRoomMemberData : GPBMessage

@property(nonatomic, readwrite) uint32_t memberCount;

@property(nonatomic, readwrite) BOOL hasMemberCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChatRoomMemberInfo*> *chatRoomMemberArray;
/** The number of items in @c chatRoomMemberArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chatRoomMemberArray_Count;

@property(nonatomic, readwrite) uint32_t infoMask;

@property(nonatomic, readwrite) BOOL hasInfoMask;
@end

#pragma mark - PatternLockInfo

typedef GPB_ENUM(PatternLockInfo_FieldNumber) {
  PatternLockInfo_FieldNumber_PatternVersion = 1,
  PatternLockInfo_FieldNumber_Sign = 2,
  PatternLockInfo_FieldNumber_LockStatus = 3,
};

@interface PatternLockInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t patternVersion;

@property(nonatomic, readwrite) BOOL hasPatternVersion;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@property(nonatomic, readwrite) uint32_t lockStatus;

@property(nonatomic, readwrite) BOOL hasLockStatus;
@end

#pragma mark - ModUserInfo

typedef GPB_ENUM(ModUserInfo_FieldNumber) {
  ModUserInfo_FieldNumber_BitFlag = 1,
  ModUserInfo_FieldNumber_UserName = 2,
  ModUserInfo_FieldNumber_NickName = 3,
  ModUserInfo_FieldNumber_BindUin = 4,
  ModUserInfo_FieldNumber_BindEmail = 5,
  ModUserInfo_FieldNumber_BindMobile = 6,
  ModUserInfo_FieldNumber_Status = 7,
  ModUserInfo_FieldNumber_ImgLen = 8,
  ModUserInfo_FieldNumber_ImgBuf = 9,
  ModUserInfo_FieldNumber_Sex = 10,
  ModUserInfo_FieldNumber_Province = 11,
  ModUserInfo_FieldNumber_City = 12,
  ModUserInfo_FieldNumber_Signature = 13,
  ModUserInfo_FieldNumber_PersonalCard = 14,
  ModUserInfo_FieldNumber_DisturbSetting = 15,
  ModUserInfo_FieldNumber_PluginFlag = 16,
  ModUserInfo_FieldNumber_VerifyFlag = 17,
  ModUserInfo_FieldNumber_VerifyInfo = 18,
  ModUserInfo_FieldNumber_Point = 19,
  ModUserInfo_FieldNumber_Experience = 20,
  ModUserInfo_FieldNumber_Level = 21,
  ModUserInfo_FieldNumber_LevelLowExp = 22,
  ModUserInfo_FieldNumber_LevelHighExp = 23,
  ModUserInfo_FieldNumber_Weibo = 24,
  ModUserInfo_FieldNumber_PluginSwitch = 25,
  ModUserInfo_FieldNumber_GmailList = 26,
  ModUserInfo_FieldNumber_Alias = 27,
  ModUserInfo_FieldNumber_WeiboNickname = 28,
  ModUserInfo_FieldNumber_WeiboFlag = 29,
  ModUserInfo_FieldNumber_FaceBookFlag = 30,
  ModUserInfo_FieldNumber_FbuserId = 31,
  ModUserInfo_FieldNumber_FbuserName = 32,
  ModUserInfo_FieldNumber_AlbumStyle = 33,
  ModUserInfo_FieldNumber_AlbumFlag = 34,
  ModUserInfo_FieldNumber_AlbumBgimgId = 35,
  ModUserInfo_FieldNumber_TxnewsCategory = 36,
  ModUserInfo_FieldNumber_Fbtoken = 37,
  ModUserInfo_FieldNumber_Country = 38,
};

@interface ModUserInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t bitFlag;

@property(nonatomic, readwrite) BOOL hasBitFlag;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *bindMobile;
/** Test to see if @c bindMobile has been set. */
@property(nonatomic, readwrite) BOOL hasBindMobile;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) uint32_t imgLen;

@property(nonatomic, readwrite) BOOL hasImgLen;
@property(nonatomic, readwrite, copy, null_resettable) NSData *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@property(nonatomic, readwrite) int32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, copy, null_resettable) NSString *province;
/** Test to see if @c province has been set. */
@property(nonatomic, readwrite) BOOL hasProvince;

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;
/** Test to see if @c city has been set. */
@property(nonatomic, readwrite) BOOL hasCity;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@property(nonatomic, readwrite) uint32_t personalCard;

@property(nonatomic, readwrite) BOOL hasPersonalCard;
@property(nonatomic, readwrite, strong, null_resettable) DisturbSetting *disturbSetting;
/** Test to see if @c disturbSetting has been set. */
@property(nonatomic, readwrite) BOOL hasDisturbSetting;

@property(nonatomic, readwrite) uint32_t pluginFlag;

@property(nonatomic, readwrite) BOOL hasPluginFlag;
@property(nonatomic, readwrite) uint32_t verifyFlag;

@property(nonatomic, readwrite) BOOL hasVerifyFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyInfo;
/** Test to see if @c verifyInfo has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyInfo;

@property(nonatomic, readwrite) int32_t point;

@property(nonatomic, readwrite) BOOL hasPoint;
@property(nonatomic, readwrite) int32_t experience;

@property(nonatomic, readwrite) BOOL hasExperience;
@property(nonatomic, readwrite) int32_t level;

@property(nonatomic, readwrite) BOOL hasLevel;
@property(nonatomic, readwrite) int32_t levelLowExp;

@property(nonatomic, readwrite) BOOL hasLevelLowExp;
@property(nonatomic, readwrite) int32_t levelHighExp;

@property(nonatomic, readwrite) BOOL hasLevelHighExp;
@property(nonatomic, readwrite, copy, null_resettable) NSString *weibo;
/** Test to see if @c weibo has been set. */
@property(nonatomic, readwrite) BOOL hasWeibo;

@property(nonatomic, readwrite) uint32_t pluginSwitch;

@property(nonatomic, readwrite) BOOL hasPluginSwitch;
@property(nonatomic, readwrite, strong, null_resettable) GmailList *gmailList;
/** Test to see if @c gmailList has been set. */
@property(nonatomic, readwrite) BOOL hasGmailList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *weiboNickname;
/** Test to see if @c weiboNickname has been set. */
@property(nonatomic, readwrite) BOOL hasWeiboNickname;

@property(nonatomic, readwrite) uint32_t weiboFlag;

@property(nonatomic, readwrite) BOOL hasWeiboFlag;
@property(nonatomic, readwrite) uint32_t faceBookFlag;

@property(nonatomic, readwrite) BOOL hasFaceBookFlag;
@property(nonatomic, readwrite) uint64_t fbuserId;

@property(nonatomic, readwrite) BOOL hasFbuserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fbuserName;
/** Test to see if @c fbuserName has been set. */
@property(nonatomic, readwrite) BOOL hasFbuserName;

@property(nonatomic, readwrite) int32_t albumStyle;

@property(nonatomic, readwrite) BOOL hasAlbumStyle;
@property(nonatomic, readwrite) int32_t albumFlag;

@property(nonatomic, readwrite) BOOL hasAlbumFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *albumBgimgId;
/** Test to see if @c albumBgimgId has been set. */
@property(nonatomic, readwrite) BOOL hasAlbumBgimgId;

@property(nonatomic, readwrite) uint32_t txnewsCategory;

@property(nonatomic, readwrite) BOOL hasTxnewsCategory;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fbtoken;
/** Test to see if @c fbtoken has been set. */
@property(nonatomic, readwrite) BOOL hasFbtoken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

@end

#pragma mark - UserInfoExt

typedef GPB_ENUM(UserInfoExt_FieldNumber) {
  UserInfoExt_FieldNumber_SnsUserInfo = 1,
  UserInfoExt_FieldNumber_MyBrandList = 2,
  UserInfoExt_FieldNumber_MsgPushSound = 3,
  UserInfoExt_FieldNumber_VoipPushSound = 4,
  UserInfoExt_FieldNumber_BigChatRoomSize = 5,
  UserInfoExt_FieldNumber_BigChatRoomQuota = 6,
  UserInfoExt_FieldNumber_BigChatRoomInvite = 7,
  UserInfoExt_FieldNumber_SafeMobile = 8,
  UserInfoExt_FieldNumber_BigHeadImgURL = 9,
  UserInfoExt_FieldNumber_SmallHeadImgURL = 10,
  UserInfoExt_FieldNumber_MainAcctType = 11,
  UserInfoExt_FieldNumber_ExtXml = 12,
  UserInfoExt_FieldNumber_SafeDeviceList = 13,
  UserInfoExt_FieldNumber_SafeDevice = 14,
  UserInfoExt_FieldNumber_GrayscaleFlag = 15,
  UserInfoExt_FieldNumber_GoogleContactName = 16,
  UserInfoExt_FieldNumber_IdcardNum = 17,
  UserInfoExt_FieldNumber_RealName = 18,
  UserInfoExt_FieldNumber_RegCountry = 19,
  UserInfoExt_FieldNumber_Bbppid = 20,
  UserInfoExt_FieldNumber_Bbpin = 21,
  UserInfoExt_FieldNumber_BbmnickName = 22,
  UserInfoExt_FieldNumber_LinkedinContactItem = 23,
  UserInfoExt_FieldNumber_Kfinfo = 24,
  UserInfoExt_FieldNumber_PatternLockInfo = 25,
  UserInfoExt_FieldNumber_SecurityDeviceId = 26,
  UserInfoExt_FieldNumber_PayWalletType = 27,
};

@interface UserInfoExt : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SnsUserInfo *snsUserInfo;
/** Test to see if @c snsUserInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSnsUserInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *myBrandList;
/** Test to see if @c myBrandList has been set. */
@property(nonatomic, readwrite) BOOL hasMyBrandList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPushSound;
/** Test to see if @c msgPushSound has been set. */
@property(nonatomic, readwrite) BOOL hasMsgPushSound;

@property(nonatomic, readwrite, copy, null_resettable) NSString *voipPushSound;
/** Test to see if @c voipPushSound has been set. */
@property(nonatomic, readwrite) BOOL hasVoipPushSound;

@property(nonatomic, readwrite) uint32_t bigChatRoomSize;

@property(nonatomic, readwrite) BOOL hasBigChatRoomSize;
@property(nonatomic, readwrite) uint32_t bigChatRoomQuota;

@property(nonatomic, readwrite) BOOL hasBigChatRoomQuota;
@property(nonatomic, readwrite) uint32_t bigChatRoomInvite;

@property(nonatomic, readwrite) BOOL hasBigChatRoomInvite;
@property(nonatomic, readwrite, copy, null_resettable) NSString *safeMobile;
/** Test to see if @c safeMobile has been set. */
@property(nonatomic, readwrite) BOOL hasSafeMobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bigHeadImgURL;
/** Test to see if @c bigHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasBigHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallHeadImgURL;
/** Test to see if @c smallHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasSmallHeadImgURL;

@property(nonatomic, readwrite) uint32_t mainAcctType;

@property(nonatomic, readwrite) BOOL hasMainAcctType;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *extXml;
/** Test to see if @c extXml has been set. */
@property(nonatomic, readwrite) BOOL hasExtXml;

@property(nonatomic, readwrite, strong, null_resettable) SafeDeviceList *safeDeviceList;
/** Test to see if @c safeDeviceList has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceList;

@property(nonatomic, readwrite) uint32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@property(nonatomic, readwrite) uint32_t grayscaleFlag;

@property(nonatomic, readwrite) BOOL hasGrayscaleFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *googleContactName;
/** Test to see if @c googleContactName has been set. */
@property(nonatomic, readwrite) BOOL hasGoogleContactName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *idcardNum;
/** Test to see if @c idcardNum has been set. */
@property(nonatomic, readwrite) BOOL hasIdcardNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;
/** Test to see if @c realName has been set. */
@property(nonatomic, readwrite) BOOL hasRealName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *regCountry;
/** Test to see if @c regCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRegCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bbppid;
/** Test to see if @c bbppid has been set. */
@property(nonatomic, readwrite) BOOL hasBbppid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bbpin;
/** Test to see if @c bbpin has been set. */
@property(nonatomic, readwrite) BOOL hasBbpin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bbmnickName;
/** Test to see if @c bbmnickName has been set. */
@property(nonatomic, readwrite) BOOL hasBbmnickName;

@property(nonatomic, readwrite, strong, null_resettable) LinkedinContactItem *linkedinContactItem;
/** Test to see if @c linkedinContactItem has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinContactItem;

@property(nonatomic, readwrite, copy, null_resettable) NSString *kfinfo;
/** Test to see if @c kfinfo has been set. */
@property(nonatomic, readwrite) BOOL hasKfinfo;

@property(nonatomic, readwrite, strong, null_resettable) PatternLockInfo *patternLockInfo;
/** Test to see if @c patternLockInfo has been set. */
@property(nonatomic, readwrite) BOOL hasPatternLockInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *securityDeviceId;
/** Test to see if @c securityDeviceId has been set. */
@property(nonatomic, readwrite) BOOL hasSecurityDeviceId;

@property(nonatomic, readwrite) uint32_t payWalletType;

@property(nonatomic, readwrite) BOOL hasPayWalletType;
@end

#pragma mark - PhoneNumItem

typedef GPB_ENUM(PhoneNumItem_FieldNumber) {
  PhoneNumItem_FieldNumber_PhoneNum = 1,
};

@interface PhoneNumItem : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *phoneNum;
/** Test to see if @c phoneNum has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneNum;

@end

#pragma mark - PhoneNumListInfo

typedef GPB_ENUM(PhoneNumListInfo_FieldNumber) {
  PhoneNumListInfo_FieldNumber_Count = 1,
  PhoneNumListInfo_FieldNumber_PhoneNumListArray = 2,
};

@interface PhoneNumListInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PhoneNumItem*> *phoneNumListArray;
/** The number of items in @c phoneNumListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger phoneNumListArray_Count;

@end

#pragma mark - ModContact

typedef GPB_ENUM(ModContact_FieldNumber) {
  ModContact_FieldNumber_UserName = 1,
  ModContact_FieldNumber_NickName = 2,
  ModContact_FieldNumber_Pyinitial = 3,
  ModContact_FieldNumber_QuanPin = 4,
  ModContact_FieldNumber_Sex = 5,
  ModContact_FieldNumber_ImgBuf = 6,
  ModContact_FieldNumber_BitMask = 7,
  ModContact_FieldNumber_BitVal = 8,
  ModContact_FieldNumber_ImgFlag = 9,
  ModContact_FieldNumber_Remark = 10,
  ModContact_FieldNumber_RemarkPyinitial = 11,
  ModContact_FieldNumber_RemarkQuanPin = 12,
  ModContact_FieldNumber_ContactType = 13,
  ModContact_FieldNumber_RoomInfoCount = 14,
  ModContact_FieldNumber_RoomInfoListArray = 15,
  ModContact_FieldNumber_DomainList = 16,
  ModContact_FieldNumber_ChatRoomNotify = 17,
  ModContact_FieldNumber_AddContactScene = 18,
  ModContact_FieldNumber_Province = 19,
  ModContact_FieldNumber_City = 20,
  ModContact_FieldNumber_Signature = 21,
  ModContact_FieldNumber_PersonalCard = 22,
  ModContact_FieldNumber_HasWeiXinHdHeadImg = 23,
  ModContact_FieldNumber_VerifyFlag = 24,
  ModContact_FieldNumber_VerifyInfo = 25,
  ModContact_FieldNumber_Level = 26,
  ModContact_FieldNumber_Source = 27,
  ModContact_FieldNumber_Weibo = 28,
  ModContact_FieldNumber_VerifyContent = 29,
  ModContact_FieldNumber_Alias = 30,
  ModContact_FieldNumber_ChatRoomOwner = 31,
  ModContact_FieldNumber_WeiboNickname = 32,
  ModContact_FieldNumber_WeiboFlag = 33,
  ModContact_FieldNumber_AlbumStyle = 34,
  ModContact_FieldNumber_AlbumFlag = 35,
  ModContact_FieldNumber_AlbumBgimgId = 36,
  ModContact_FieldNumber_SnsUserInfo = 37,
  ModContact_FieldNumber_Country = 38,
  ModContact_FieldNumber_BigHeadImgURL = 39,
  ModContact_FieldNumber_SmallHeadImgURL = 40,
  ModContact_FieldNumber_MyBrandList = 41,
  ModContact_FieldNumber_CustomizedInfo = 42,
  ModContact_FieldNumber_ChatRoomData = 43,
  ModContact_FieldNumber_HeadImgMd5 = 44,
  ModContact_FieldNumber_EncryptUserName = 45,
  ModContact_FieldNumber_IdcardNum = 46,
  ModContact_FieldNumber_RealName = 47,
  ModContact_FieldNumber_MobileHash = 48,
  ModContact_FieldNumber_MobileFullHash = 49,
  ModContact_FieldNumber_AdditionalContactList = 50,
  ModContact_FieldNumber_ChatroomVersion = 53,
  ModContact_FieldNumber_ExtInfo = 54,
  ModContact_FieldNumber_ChatroomMaxCount = 55,
  ModContact_FieldNumber_ChatroomType = 56,
  ModContact_FieldNumber_NewChatroomData = 57,
  ModContact_FieldNumber_DeleteFlag = 58,
  ModContact_FieldNumber_Description_p = 59,
  ModContact_FieldNumber_CardImgURL = 60,
  ModContact_FieldNumber_LabelIdlist = 61,
  ModContact_FieldNumber_PhoneNumListInfo = 62,
  ModContact_FieldNumber_WeiDianInfo = 63,
  ModContact_FieldNumber_ChatroomInfoVersion = 64,
  ModContact_FieldNumber_DeleteContactScene = 65,
  ModContact_FieldNumber_ChatroomStatus = 66,
  ModContact_FieldNumber_ExtFlag = 67,
};

@interface ModContact : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *pyinitial;
/** Test to see if @c pyinitial has been set. */
@property(nonatomic, readwrite) BOOL hasPyinitial;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *quanPin;
/** Test to see if @c quanPin has been set. */
@property(nonatomic, readwrite) BOOL hasQuanPin;

@property(nonatomic, readwrite) int32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@property(nonatomic, readwrite) uint32_t bitMask;

@property(nonatomic, readwrite) BOOL hasBitMask;
@property(nonatomic, readwrite) uint32_t bitVal;

@property(nonatomic, readwrite) BOOL hasBitVal;
@property(nonatomic, readwrite) uint32_t imgFlag;

@property(nonatomic, readwrite) BOOL hasImgFlag;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *remark;
/** Test to see if @c remark has been set. */
@property(nonatomic, readwrite) BOOL hasRemark;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *remarkPyinitial;
/** Test to see if @c remarkPyinitial has been set. */
@property(nonatomic, readwrite) BOOL hasRemarkPyinitial;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *remarkQuanPin;
/** Test to see if @c remarkQuanPin has been set. */
@property(nonatomic, readwrite) BOOL hasRemarkQuanPin;

@property(nonatomic, readwrite) uint32_t contactType;

@property(nonatomic, readwrite) BOOL hasContactType;
@property(nonatomic, readwrite) uint32_t roomInfoCount;

@property(nonatomic, readwrite) BOOL hasRoomInfoCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RoomInfo*> *roomInfoListArray;
/** The number of items in @c roomInfoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomInfoListArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *domainList;
/** Test to see if @c domainList has been set. */
@property(nonatomic, readwrite) BOOL hasDomainList;

@property(nonatomic, readwrite) uint32_t chatRoomNotify;

@property(nonatomic, readwrite) BOOL hasChatRoomNotify;
@property(nonatomic, readwrite) uint32_t addContactScene;

@property(nonatomic, readwrite) BOOL hasAddContactScene;
@property(nonatomic, readwrite, copy, null_resettable) NSString *province;
/** Test to see if @c province has been set. */
@property(nonatomic, readwrite) BOOL hasProvince;

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;
/** Test to see if @c city has been set. */
@property(nonatomic, readwrite) BOOL hasCity;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@property(nonatomic, readwrite) uint32_t personalCard;

@property(nonatomic, readwrite) BOOL hasPersonalCard;
@property(nonatomic, readwrite) uint32_t hasWeiXinHdHeadImg;

@property(nonatomic, readwrite) BOOL hasHasWeiXinHdHeadImg;
@property(nonatomic, readwrite) uint32_t verifyFlag;

@property(nonatomic, readwrite) BOOL hasVerifyFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyInfo;
/** Test to see if @c verifyInfo has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyInfo;

@property(nonatomic, readwrite) int32_t level;

@property(nonatomic, readwrite) BOOL hasLevel;
@property(nonatomic, readwrite) uint32_t source;

@property(nonatomic, readwrite) BOOL hasSource;
@property(nonatomic, readwrite, copy, null_resettable) NSString *weibo;
/** Test to see if @c weibo has been set. */
@property(nonatomic, readwrite) BOOL hasWeibo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyContent;
/** Test to see if @c verifyContent has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyContent;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *chatRoomOwner;
/** Test to see if @c chatRoomOwner has been set. */
@property(nonatomic, readwrite) BOOL hasChatRoomOwner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *weiboNickname;
/** Test to see if @c weiboNickname has been set. */
@property(nonatomic, readwrite) BOOL hasWeiboNickname;

@property(nonatomic, readwrite) uint32_t weiboFlag;

@property(nonatomic, readwrite) BOOL hasWeiboFlag;
@property(nonatomic, readwrite) int32_t albumStyle;

@property(nonatomic, readwrite) BOOL hasAlbumStyle;
@property(nonatomic, readwrite) int32_t albumFlag;

@property(nonatomic, readwrite) BOOL hasAlbumFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *albumBgimgId;
/** Test to see if @c albumBgimgId has been set. */
@property(nonatomic, readwrite) BOOL hasAlbumBgimgId;

@property(nonatomic, readwrite, strong, null_resettable) SnsUserInfo *snsUserInfo;
/** Test to see if @c snsUserInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSnsUserInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bigHeadImgURL;
/** Test to see if @c bigHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasBigHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallHeadImgURL;
/** Test to see if @c smallHeadImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasSmallHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *myBrandList;
/** Test to see if @c myBrandList has been set. */
@property(nonatomic, readwrite) BOOL hasMyBrandList;

@property(nonatomic, readwrite, strong, null_resettable) CustomizedInfo *customizedInfo;
/** Test to see if @c customizedInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCustomizedInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *chatRoomData;
/** Test to see if @c chatRoomData has been set. */
@property(nonatomic, readwrite) BOOL hasChatRoomData;

@property(nonatomic, readwrite, copy, null_resettable) NSString *headImgMd5;
/** Test to see if @c headImgMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasHeadImgMd5;

@property(nonatomic, readwrite, copy, null_resettable) NSString *encryptUserName;
/** Test to see if @c encryptUserName has been set. */
@property(nonatomic, readwrite) BOOL hasEncryptUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *idcardNum;
/** Test to see if @c idcardNum has been set. */
@property(nonatomic, readwrite) BOOL hasIdcardNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;
/** Test to see if @c realName has been set. */
@property(nonatomic, readwrite) BOOL hasRealName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mobileHash;
/** Test to see if @c mobileHash has been set. */
@property(nonatomic, readwrite) BOOL hasMobileHash;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mobileFullHash;
/** Test to see if @c mobileFullHash has been set. */
@property(nonatomic, readwrite) BOOL hasMobileFullHash;

@property(nonatomic, readwrite, strong, null_resettable) AdditionalContactList *additionalContactList;
/** Test to see if @c additionalContactList has been set. */
@property(nonatomic, readwrite) BOOL hasAdditionalContactList;

@property(nonatomic, readwrite) uint32_t chatroomVersion;

@property(nonatomic, readwrite) BOOL hasChatroomVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *extInfo;
/** Test to see if @c extInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExtInfo;

@property(nonatomic, readwrite) uint32_t chatroomMaxCount;

@property(nonatomic, readwrite) BOOL hasChatroomMaxCount;
@property(nonatomic, readwrite) uint32_t chatroomType;

@property(nonatomic, readwrite) BOOL hasChatroomType;
@property(nonatomic, readwrite, strong, null_resettable) ChatRoomMemberData *newChatroomData NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newChatroomData has been set. */
@property(nonatomic, readwrite) BOOL hasNewChatroomData;

@property(nonatomic, readwrite) int32_t deleteFlag;

@property(nonatomic, readwrite) BOOL hasDeleteFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cardImgURL;
/** Test to see if @c cardImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasCardImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *labelIdlist;
/** Test to see if @c labelIdlist has been set. */
@property(nonatomic, readwrite) BOOL hasLabelIdlist;

@property(nonatomic, readwrite, strong, null_resettable) PhoneNumListInfo *phoneNumListInfo;
/** Test to see if @c phoneNumListInfo has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneNumListInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *weiDianInfo;
/** Test to see if @c weiDianInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWeiDianInfo;

@property(nonatomic, readwrite) uint32_t chatroomInfoVersion;

@property(nonatomic, readwrite) BOOL hasChatroomInfoVersion;
@property(nonatomic, readwrite) uint32_t deleteContactScene;

@property(nonatomic, readwrite) BOOL hasDeleteContactScene;
@property(nonatomic, readwrite) uint32_t chatroomStatus;

@property(nonatomic, readwrite) BOOL hasChatroomStatus;
@property(nonatomic, readwrite) uint32_t extFlag;

@property(nonatomic, readwrite) BOOL hasExtFlag;
@end

#pragma mark - HardDevice

typedef GPB_ENUM(HardDevice_FieldNumber) {
  HardDevice_FieldNumber_DeviceType = 1,
  HardDevice_FieldNumber_DeviceId = 2,
};

@interface HardDevice : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;
/** Test to see if @c deviceId has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
