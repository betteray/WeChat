// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmlogin.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AcctSectResp;
@class AuthSectResp;
@class AutoAuthAesReqData;
@class AutoAuthRsaReqData;
@class BaseAuthReqInfo;
@class BaseRequest;
@class BaseResponse;
@class BuiltinIPList;
@class CDNDnsInfo;
@class ECDHKey;
@class ExtSession;
@class HostList;
@class LoginQRCodeNotifyPkg;
@class ManualAuthAesReqData;
@class ManualAuthRsaReqData;
@class NetworkControl;
@class NetworkSectResp;
@class PatternLockBuffer;
@class PluginKeyList;
@class RSACert;
@class SKBuiltinBuffer_t;
@class SKBuiltinString_t;
@class SafeDeviceList;
@class SecAuthRegKeySect;
@class ShowStyleKey;
@class WTLoginImgReqInfo;
@class WTLoginImgRespInfo;
@class WxVerifyCodeReqInfo;
@class WxVerifyCodeRespInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MmloginRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MmloginRoot : GPBRootObject
@end

#pragma mark - ECDHKey

typedef GPB_ENUM(ECDHKey_FieldNumber) {
  ECDHKey_FieldNumber_Nid = 1,
  ECDHKey_FieldNumber_Key = 2,
};

@interface ECDHKey : GPBMessage

@property(nonatomic, readwrite) int32_t nid;

@property(nonatomic, readwrite) BOOL hasNid;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@end

#pragma mark - NewRegRequest

typedef GPB_ENUM(NewRegRequest_FieldNumber) {
  NewRegRequest_FieldNumber_BaseRequest = 1,
  NewRegRequest_FieldNumber_UserName = 2,
  NewRegRequest_FieldNumber_Pwd = 3,
  NewRegRequest_FieldNumber_NickName = 4,
  NewRegRequest_FieldNumber_BindUin = 5,
  NewRegRequest_FieldNumber_BindEmail = 6,
  NewRegRequest_FieldNumber_BindMobile = 7,
  NewRegRequest_FieldNumber_Ticket = 8,
  NewRegRequest_FieldNumber_BuiltinIpseq = 12,
  NewRegRequest_FieldNumber_Dlsrc = 13,
  NewRegRequest_FieldNumber_RegMode = 14,
  NewRegRequest_FieldNumber_TimeZone = 15,
  NewRegRequest_FieldNumber_Language = 16,
  NewRegRequest_FieldNumber_ForceReg = 17,
  NewRegRequest_FieldNumber_RealCountry = 18,
  NewRegRequest_FieldNumber_RandomEncryKey = 19,
  NewRegRequest_FieldNumber_Alias = 20,
  NewRegRequest_FieldNumber_VerifySignature = 21,
  NewRegRequest_FieldNumber_VerifyContent = 22,
  NewRegRequest_FieldNumber_HasHeadImg = 23,
  NewRegRequest_FieldNumber_SuggestRet = 24,
  NewRegRequest_FieldNumber_ClientSeqId = 31,
  NewRegRequest_FieldNumber_AdSource = 32,
  NewRegRequest_FieldNumber_AndroidId = 33,
  NewRegRequest_FieldNumber_MacAddr = 34,
  NewRegRequest_FieldNumber_AndroidInstallRef = 35,
  NewRegRequest_FieldNumber_ClientFingerprint = 36,
  NewRegRequest_FieldNumber_CliPubEcdhkey = 37,
  NewRegRequest_FieldNumber_GoogleAid = 38,
  NewRegRequest_FieldNumber_BundleId = 39,
  NewRegRequest_FieldNumber_BioSigTicket = 41,
  NewRegRequest_FieldNumber_BioSigCheckType = 42,
  NewRegRequest_FieldNumber_ClientCheckData = 43,
  NewRegRequest_FieldNumber_MobileCheckType = 44,
  NewRegRequest_FieldNumber_RegSessionId = 45,
  NewRegRequest_FieldNumber_PrivacyPolicyCountry = 46,
};

@interface NewRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindMobile;
/** Test to see if @c bindMobile has been set. */
@property(nonatomic, readwrite) BOOL hasBindMobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite) uint32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
@property(nonatomic, readwrite) uint32_t dlsrc;

@property(nonatomic, readwrite) BOOL hasDlsrc;
@property(nonatomic, readwrite) uint32_t regMode;

@property(nonatomic, readwrite) BOOL hasRegMode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite) uint32_t forceReg;

@property(nonatomic, readwrite) BOOL hasForceReg;
@property(nonatomic, readwrite, copy, null_resettable) NSString *realCountry;
/** Test to see if @c realCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRealCountry;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyContent;
/** Test to see if @c verifyContent has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyContent;

@property(nonatomic, readwrite) uint32_t hasHeadImg;

@property(nonatomic, readwrite) BOOL hasHasHeadImg;
@property(nonatomic, readwrite) uint32_t suggestRet;

@property(nonatomic, readwrite) BOOL hasSuggestRet;
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *adSource;
/** Test to see if @c adSource has been set. */
@property(nonatomic, readwrite) BOOL hasAdSource;

@property(nonatomic, readwrite, copy, null_resettable) NSString *androidId;
/** Test to see if @c androidId has been set. */
@property(nonatomic, readwrite) BOOL hasAndroidId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *macAddr;
/** Test to see if @c macAddr has been set. */
@property(nonatomic, readwrite) BOOL hasMacAddr;

@property(nonatomic, readwrite, copy, null_resettable) NSString *androidInstallRef;
/** Test to see if @c androidInstallRef has been set. */
@property(nonatomic, readwrite) BOOL hasAndroidInstallRef;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientFingerprint;
/** Test to see if @c clientFingerprint has been set. */
@property(nonatomic, readwrite) BOOL hasClientFingerprint;

@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *cliPubEcdhkey;
/** Test to see if @c cliPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasCliPubEcdhkey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *googleAid;
/** Test to see if @c googleAid has been set. */
@property(nonatomic, readwrite) BOOL hasGoogleAid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bundleId;
/** Test to see if @c bundleId has been set. */
@property(nonatomic, readwrite) BOOL hasBundleId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bioSigTicket;
/** Test to see if @c bioSigTicket has been set. */
@property(nonatomic, readwrite) BOOL hasBioSigTicket;

@property(nonatomic, readwrite) uint32_t bioSigCheckType;

@property(nonatomic, readwrite) BOOL hasBioSigCheckType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientCheckData;
/** Test to see if @c clientCheckData has been set. */
@property(nonatomic, readwrite) BOOL hasClientCheckData;

@property(nonatomic, readwrite) uint32_t mobileCheckType;

@property(nonatomic, readwrite) BOOL hasMobileCheckType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *regSessionId;
/** Test to see if @c regSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasRegSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *privacyPolicyCountry;
/** Test to see if @c privacyPolicyCountry has been set. */
@property(nonatomic, readwrite) BOOL hasPrivacyPolicyCountry;

@end

#pragma mark - SecAuthRegKeySect

typedef GPB_ENUM(SecAuthRegKeySect_FieldNumber) {
  SecAuthRegKeySect_FieldNumber_AutoAuthKey = 1,
  SecAuthRegKeySect_FieldNumber_SvrPubEcdhkey = 2,
  SecAuthRegKeySect_FieldNumber_SessionKey = 3,
  SecAuthRegKeySect_FieldNumber_AuthResultFlag = 4,
};

@interface SecAuthRegKeySect : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *svrPubEcdhkey;
/** Test to see if @c svrPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasSvrPubEcdhkey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite) uint32_t authResultFlag;

@property(nonatomic, readwrite) BOOL hasAuthResultFlag;
@end

#pragma mark - NewRegResponse

typedef GPB_ENUM(NewRegResponse_FieldNumber) {
  NewRegResponse_FieldNumber_BaseResponse = 1,
  NewRegResponse_FieldNumber_Uin = 2,
  NewRegResponse_FieldNumber_SessionKey = 3,
  NewRegResponse_FieldNumber_OfficialUserName = 4,
  NewRegResponse_FieldNumber_OfficialNickName = 5,
  NewRegResponse_FieldNumber_QqmicroBlogUserName = 6,
  NewRegResponse_FieldNumber_BindEmail = 7,
  NewRegResponse_FieldNumber_PushMailStatus = 8,
  NewRegResponse_FieldNumber_SendCardBitFlag = 9,
  NewRegResponse_FieldNumber_PushMailSettingTicket = 10,
  NewRegResponse_FieldNumber_BuiltinIplist = 14,
  NewRegResponse_FieldNumber_Fsurl = 15,
  NewRegResponse_FieldNumber_UserName = 16,
  NewRegResponse_FieldNumber_Status = 17,
  NewRegResponse_FieldNumber_NetworkControl = 18,
  NewRegResponse_FieldNumber_ReturnFlag = 19,
  NewRegResponse_FieldNumber_RegType = 20,
  NewRegResponse_FieldNumber_AuthKey = 21,
  NewRegResponse_FieldNumber_PluginKeyList = 22,
  NewRegResponse_FieldNumber_Password = 23,
  NewRegResponse_FieldNumber_ProfileFlag = 24,
  NewRegResponse_FieldNumber_NewHostList = 25,
  NewRegResponse_FieldNumber_AutoAuthTicket = 26,
  NewRegResponse_FieldNumber_DnsInfo = 27,
  NewRegResponse_FieldNumber_StepTicket = 28,
  NewRegResponse_FieldNumber_VerifySignature = 29,
  NewRegResponse_FieldNumber_VerifyBuff = 30,
  NewRegResponse_FieldNumber_ShowStyle = 31,
  NewRegResponse_FieldNumber_SnsDnsInfo = 32,
  NewRegResponse_FieldNumber_AppDnsInfo = 33,
  NewRegResponse_FieldNumber_SecAuthRegKeySect = 34,
  NewRegResponse_FieldNumber_MmtlsControlBitFlag = 35,
  NewRegResponse_FieldNumber_ServerTime = 36,
};

@interface NewRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *officialUserName;
/** Test to see if @c officialUserName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *officialNickName;
/** Test to see if @c officialNickName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *qqmicroBlogUserName;
/** Test to see if @c qqmicroBlogUserName has been set. */
@property(nonatomic, readwrite) BOOL hasQqmicroBlogUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite) uint32_t pushMailStatus;

@property(nonatomic, readwrite) BOOL hasPushMailStatus;
@property(nonatomic, readwrite) uint32_t sendCardBitFlag;

@property(nonatomic, readwrite) BOOL hasSendCardBitFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pushMailSettingTicket;
/** Test to see if @c pushMailSettingTicket has been set. */
@property(nonatomic, readwrite) BOOL hasPushMailSettingTicket;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fsurl;
/** Test to see if @c fsurl has been set. */
@property(nonatomic, readwrite) BOOL hasFsurl;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite) uint32_t returnFlag;

@property(nonatomic, readwrite) BOOL hasReturnFlag;
@property(nonatomic, readwrite) uint32_t regType;

@property(nonatomic, readwrite) BOOL hasRegType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *authKey;
/** Test to see if @c authKey has been set. */
@property(nonatomic, readwrite) BOOL hasAuthKey;

@property(nonatomic, readwrite, strong, null_resettable) PluginKeyList *pluginKeyList;
/** Test to see if @c pluginKeyList has been set. */
@property(nonatomic, readwrite) BOOL hasPluginKeyList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@property(nonatomic, readwrite) uint32_t profileFlag;

@property(nonatomic, readwrite) BOOL hasProfileFlag;
@property(nonatomic, readwrite, strong, null_resettable) HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *autoAuthTicket;
/** Test to see if @c autoAuthTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthTicket;

@property(nonatomic, readwrite, strong, null_resettable) CDNDnsInfo *dnsInfo;
/** Test to see if @c dnsInfo has been set. */
@property(nonatomic, readwrite) BOOL hasDnsInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *stepTicket;
/** Test to see if @c stepTicket has been set. */
@property(nonatomic, readwrite) BOOL hasStepTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *verifyBuff;
/** Test to see if @c verifyBuff has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyBuff;

@property(nonatomic, readwrite, strong, null_resettable) ShowStyleKey *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

@property(nonatomic, readwrite, strong, null_resettable) CDNDnsInfo *snsDnsInfo;
/** Test to see if @c snsDnsInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSnsDnsInfo;

@property(nonatomic, readwrite, strong, null_resettable) CDNDnsInfo *appDnsInfo;
/** Test to see if @c appDnsInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAppDnsInfo;

@property(nonatomic, readwrite, strong, null_resettable) SecAuthRegKeySect *secAuthRegKeySect;
/** Test to see if @c secAuthRegKeySect has been set. */
@property(nonatomic, readwrite) BOOL hasSecAuthRegKeySect;

@property(nonatomic, readwrite) uint32_t mmtlsControlBitFlag;

@property(nonatomic, readwrite) BOOL hasMmtlsControlBitFlag;
@property(nonatomic, readwrite) uint32_t serverTime;

@property(nonatomic, readwrite) BOOL hasServerTime;
@end

#pragma mark - GetSuggestAliasRequest

typedef GPB_ENUM(GetSuggestAliasRequest_FieldNumber) {
  GetSuggestAliasRequest_FieldNumber_BaseRequest = 1,
  GetSuggestAliasRequest_FieldNumber_RandomEncryKey = 2,
  GetSuggestAliasRequest_FieldNumber_RegBindName = 3,
  GetSuggestAliasRequest_FieldNumber_RegTicket = 4,
  GetSuggestAliasRequest_FieldNumber_NickName = 5,
  GetSuggestAliasRequest_FieldNumber_InputAlias = 6,
  GetSuggestAliasRequest_FieldNumber_VerifySignature = 7,
  GetSuggestAliasRequest_FieldNumber_VerifyContent = 8,
  GetSuggestAliasRequest_FieldNumber_RegMode = 9,
  GetSuggestAliasRequest_FieldNumber_Language = 10,
  GetSuggestAliasRequest_FieldNumber_ClientSeqId = 11,
};

@interface GetSuggestAliasRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *regBindName;
/** Test to see if @c regBindName has been set. */
@property(nonatomic, readwrite) BOOL hasRegBindName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *regTicket;
/** Test to see if @c regTicket has been set. */
@property(nonatomic, readwrite) BOOL hasRegTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *inputAlias;
/** Test to see if @c inputAlias has been set. */
@property(nonatomic, readwrite) BOOL hasInputAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyContent;
/** Test to see if @c verifyContent has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyContent;

@property(nonatomic, readwrite) uint32_t regMode;

@property(nonatomic, readwrite) BOOL hasRegMode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@end

#pragma mark - GetSuggestAliasResponse

typedef GPB_ENUM(GetSuggestAliasResponse_FieldNumber) {
  GetSuggestAliasResponse_FieldNumber_BaseResponse = 1,
  GetSuggestAliasResponse_FieldNumber_Count = 2,
  GetSuggestAliasResponse_FieldNumber_ListArray = 3,
  GetSuggestAliasResponse_FieldNumber_VerifySignature = 4,
  GetSuggestAliasResponse_FieldNumber_VerifyBuff = 5,
  GetSuggestAliasResponse_FieldNumber_UserNameRet = 6,
};

@interface GetSuggestAliasResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SKBuiltinString_t*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *verifyBuff;
/** Test to see if @c verifyBuff has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyBuff;

@property(nonatomic, readwrite) int32_t userNameRet;

@property(nonatomic, readwrite) BOOL hasUserNameRet;
@end

#pragma mark - BindOpMobileRequest

typedef GPB_ENUM(BindOpMobileRequest_FieldNumber) {
  BindOpMobileRequest_FieldNumber_BaseRequest = 1,
  BindOpMobileRequest_FieldNumber_UserName = 2,
  BindOpMobileRequest_FieldNumber_Mobile = 3,
  BindOpMobileRequest_FieldNumber_Opcode = 4,
  BindOpMobileRequest_FieldNumber_Verifycode = 5,
  BindOpMobileRequest_FieldNumber_DialFlag = 6,
  BindOpMobileRequest_FieldNumber_DialLang = 7,
  BindOpMobileRequest_FieldNumber_AuthTicket = 8,
  BindOpMobileRequest_FieldNumber_ForceReg = 9,
  BindOpMobileRequest_FieldNumber_SafeDeviceName = 10,
  BindOpMobileRequest_FieldNumber_SafeDeviceType = 11,
  BindOpMobileRequest_FieldNumber_RandomEncryKey = 12,
  BindOpMobileRequest_FieldNumber_Language = 13,
  BindOpMobileRequest_FieldNumber_InputMobileRetrys = 14,
  BindOpMobileRequest_FieldNumber_AdjustRet = 15,
  BindOpMobileRequest_FieldNumber_ClientSeqId = 16,
  BindOpMobileRequest_FieldNumber_MobileCheckType = 17,
  BindOpMobileRequest_FieldNumber_RegSessionId = 18,
  BindOpMobileRequest_FieldNumber_SpamBuffer = 19,
  BindOpMobileRequest_FieldNumber_ExtSpamInfo = 20,
};

@interface BindOpMobileRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;
/** Test to see if @c mobile has been set. */
@property(nonatomic, readwrite) BOOL hasMobile;

@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifycode;
/** Test to see if @c verifycode has been set. */
@property(nonatomic, readwrite) BOOL hasVerifycode;

@property(nonatomic, readwrite) int32_t dialFlag;

@property(nonatomic, readwrite) BOOL hasDialFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *dialLang;
/** Test to see if @c dialLang has been set. */
@property(nonatomic, readwrite) BOOL hasDialLang;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@property(nonatomic, readwrite) uint32_t forceReg;

@property(nonatomic, readwrite) BOOL hasForceReg;
@property(nonatomic, readwrite, copy, null_resettable) NSString *safeDeviceName;
/** Test to see if @c safeDeviceName has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *safeDeviceType;
/** Test to see if @c safeDeviceType has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceType;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite) uint32_t inputMobileRetrys;

@property(nonatomic, readwrite) BOOL hasInputMobileRetrys;
@property(nonatomic, readwrite) uint32_t adjustRet;

@property(nonatomic, readwrite) BOOL hasAdjustRet;
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite) int32_t mobileCheckType;

@property(nonatomic, readwrite) BOOL hasMobileCheckType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *regSessionId;
/** Test to see if @c regSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasRegSessionId;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *spamBuffer;
/** Test to see if @c spamBuffer has been set. */
@property(nonatomic, readwrite) BOOL hasSpamBuffer;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *extSpamInfo;
/** Test to see if @c extSpamInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExtSpamInfo;

@end

#pragma mark - BindOpMobileResponse

typedef GPB_ENUM(BindOpMobileResponse_FieldNumber) {
  BindOpMobileResponse_FieldNumber_BaseResponse = 1,
  BindOpMobileResponse_FieldNumber_Ticket = 2,
  BindOpMobileResponse_FieldNumber_SmsNo = 3,
  BindOpMobileResponse_FieldNumber_NeedSetPwd = 4,
  BindOpMobileResponse_FieldNumber_Pwd = 5,
  BindOpMobileResponse_FieldNumber_Username = 6,
  BindOpMobileResponse_FieldNumber_NewHostList = 7,
  BindOpMobileResponse_FieldNumber_BuiltinIplist = 8,
  BindOpMobileResponse_FieldNumber_NetworkControl = 9,
  BindOpMobileResponse_FieldNumber_AuthTicket = 10,
  BindOpMobileResponse_FieldNumber_SafeDevice = 11,
  BindOpMobileResponse_FieldNumber_Cc = 12,
  BindOpMobileResponse_FieldNumber_ObsoleteItem1 = 13,
  BindOpMobileResponse_FieldNumber_SafeDeviceList = 14,
  BindOpMobileResponse_FieldNumber_PureMobile = 15,
  BindOpMobileResponse_FieldNumber_FormatedMobile = 16,
  BindOpMobileResponse_FieldNumber_ShowStyle = 17,
  BindOpMobileResponse_FieldNumber_MmtlsControlBitFlag = 18,
  BindOpMobileResponse_FieldNumber_SmsUpCode = 19,
  BindOpMobileResponse_FieldNumber_SmsUpMobile = 20,
  BindOpMobileResponse_FieldNumber_MobileCheckType = 21,
  BindOpMobileResponse_FieldNumber_RegSessionId = 22,
};

@interface BindOpMobileResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smsNo;
/** Test to see if @c smsNo has been set. */
@property(nonatomic, readwrite) BOOL hasSmsNo;

@property(nonatomic, readwrite) uint32_t needSetPwd;

@property(nonatomic, readwrite) BOOL hasNeedSetPwd;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *username;
/** Test to see if @c username has been set. */
@property(nonatomic, readwrite) BOOL hasUsername;

@property(nonatomic, readwrite, strong, null_resettable) HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@property(nonatomic, readwrite) uint32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@property(nonatomic, readwrite, copy, null_resettable) NSString *cc;
/** Test to see if @c cc has been set. */
@property(nonatomic, readwrite) BOOL hasCc;

@property(nonatomic, readwrite) uint32_t obsoleteItem1;

@property(nonatomic, readwrite) BOOL hasObsoleteItem1;
@property(nonatomic, readwrite, strong, null_resettable) SafeDeviceList *safeDeviceList;
/** Test to see if @c safeDeviceList has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pureMobile;
/** Test to see if @c pureMobile has been set. */
@property(nonatomic, readwrite) BOOL hasPureMobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *formatedMobile;
/** Test to see if @c formatedMobile has been set. */
@property(nonatomic, readwrite) BOOL hasFormatedMobile;

@property(nonatomic, readwrite, strong, null_resettable) ShowStyleKey *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

@property(nonatomic, readwrite) int32_t mmtlsControlBitFlag;

@property(nonatomic, readwrite) BOOL hasMmtlsControlBitFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *smsUpCode;
/** Test to see if @c smsUpCode has been set. */
@property(nonatomic, readwrite) BOOL hasSmsUpCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smsUpMobile;
/** Test to see if @c smsUpMobile has been set. */
@property(nonatomic, readwrite) BOOL hasSmsUpMobile;

@property(nonatomic, readwrite) int32_t mobileCheckType;

@property(nonatomic, readwrite) BOOL hasMobileCheckType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *regSessionId;
/** Test to see if @c regSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasRegSessionId;

@end

#pragma mark - EmailRegRequest

typedef GPB_ENUM(EmailRegRequest_FieldNumber) {
  EmailRegRequest_FieldNumber_BaseRequest = 1,
  EmailRegRequest_FieldNumber_RandomEncryKey = 2,
  EmailRegRequest_FieldNumber_Opcode = 3,
  EmailRegRequest_FieldNumber_Email = 4,
  EmailRegRequest_FieldNumber_Language = 5,
  EmailRegRequest_FieldNumber_Pwd = 6,
  EmailRegRequest_FieldNumber_VerifyCode = 7,
  EmailRegRequest_FieldNumber_ClientSeqId = 8,
  EmailRegRequest_FieldNumber_RealCountry = 9,
  EmailRegRequest_FieldNumber_VerifyScene = 10,
};

@interface EmailRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyCode;
/** Test to see if @c verifyCode has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realCountry;
/** Test to see if @c realCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRealCountry;

@property(nonatomic, readwrite) uint32_t verifyScene;

@property(nonatomic, readwrite) BOOL hasVerifyScene;
@end

#pragma mark - EmailRegResponse

typedef GPB_ENUM(EmailRegResponse_FieldNumber) {
  EmailRegResponse_FieldNumber_BaseResponse = 1,
  EmailRegResponse_FieldNumber_Ticket = 2,
  EmailRegResponse_FieldNumber_BuiltinIplist = 3,
  EmailRegResponse_FieldNumber_NewHostList = 4,
  EmailRegResponse_FieldNumber_ShowStyle = 5,
  EmailRegResponse_FieldNumber_NetworkControl = 6,
};

@interface EmailRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@property(nonatomic, readwrite, strong, null_resettable) HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, strong, null_resettable) ShowStyleKey *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@end

#pragma mark - SetEmailPwdRequest

typedef GPB_ENUM(SetEmailPwdRequest_FieldNumber) {
  SetEmailPwdRequest_FieldNumber_BaseRequest = 1,
  SetEmailPwdRequest_FieldNumber_Pwd = 2,
  SetEmailPwdRequest_FieldNumber_Ticket = 3,
};

@interface SetEmailPwdRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@end

#pragma mark - SetEmailPwdResponse

typedef GPB_ENUM(SetEmailPwdResponse_FieldNumber) {
  SetEmailPwdResponse_FieldNumber_BaseResponse = 1,
};

@interface SetEmailPwdResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - UpdateSafeDeviceRequest

typedef GPB_ENUM(UpdateSafeDeviceRequest_FieldNumber) {
  UpdateSafeDeviceRequest_FieldNumber_BaseRequest = 1,
  UpdateSafeDeviceRequest_FieldNumber_Uuid = 2,
  UpdateSafeDeviceRequest_FieldNumber_Name = 3,
  UpdateSafeDeviceRequest_FieldNumber_DeviceType = 4,
};

@interface UpdateSafeDeviceRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@end

#pragma mark - UpdateSafeDeviceResponse

typedef GPB_ENUM(UpdateSafeDeviceResponse_FieldNumber) {
  UpdateSafeDeviceResponse_FieldNumber_BaseResponse = 1,
  UpdateSafeDeviceResponse_FieldNumber_SafeDevice = 2,
};

@interface UpdateSafeDeviceResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@end

#pragma mark - DelSafeDeviceRequest

typedef GPB_ENUM(DelSafeDeviceRequest_FieldNumber) {
  DelSafeDeviceRequest_FieldNumber_BaseRequest = 1,
  DelSafeDeviceRequest_FieldNumber_Uuid = 2,
};

@interface DelSafeDeviceRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@end

#pragma mark - DelSafeDeviceResponse

typedef GPB_ENUM(DelSafeDeviceResponse_FieldNumber) {
  DelSafeDeviceResponse_FieldNumber_BaseResponse = 1,
  DelSafeDeviceResponse_FieldNumber_SafeDevice = 2,
};

@interface DelSafeDeviceResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@end

#pragma mark - BindSafeMobileRequest

typedef GPB_ENUM(BindSafeMobileRequest_FieldNumber) {
  BindSafeMobileRequest_FieldNumber_BaseRequest = 1,
  BindSafeMobileRequest_FieldNumber_Mobile = 2,
  BindSafeMobileRequest_FieldNumber_Opcode = 3,
};

@interface BindSafeMobileRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;
/** Test to see if @c mobile has been set. */
@property(nonatomic, readwrite) BOOL hasMobile;

@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - BindSafeMobileResponse

typedef GPB_ENUM(BindSafeMobileResponse_FieldNumber) {
  BindSafeMobileResponse_FieldNumber_BaseResponse = 1,
};

@interface BindSafeMobileResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - BindQQRequest

typedef GPB_ENUM(BindQQRequest_FieldNumber) {
  BindQQRequest_FieldNumber_BaseRequest = 1,
  BindQQRequest_FieldNumber_Qq = 2,
  BindQQRequest_FieldNumber_Pwd = 3,
  BindQQRequest_FieldNumber_Pwd2 = 4,
  BindQQRequest_FieldNumber_ImgSid = 5,
  BindQQRequest_FieldNumber_ImgCode = 6,
  BindQQRequest_FieldNumber_Opcode = 7,
  BindQQRequest_FieldNumber_ImgEncryptKey = 8,
  BindQQRequest_FieldNumber_Ksid = 9,
  BindQQRequest_FieldNumber_SetAsMainAcct = 10,
  BindQQRequest_FieldNumber_SafeDeviceName = 11,
  BindQQRequest_FieldNumber_SafeDeviceType = 12,
  BindQQRequest_FieldNumber_WtloginReqBuff = 13,
};

@interface BindQQRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t qq;

@property(nonatomic, readwrite) BOOL hasQq;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2;
/** Test to see if @c pwd2 has been set. */
@property(nonatomic, readwrite) BOOL hasPwd2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgCode;
/** Test to see if @c imgCode has been set. */
@property(nonatomic, readwrite) BOOL hasImgCode;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@property(nonatomic, readwrite) uint32_t setAsMainAcct;

@property(nonatomic, readwrite) BOOL hasSetAsMainAcct;
@property(nonatomic, readwrite, copy, null_resettable) NSString *safeDeviceName;
/** Test to see if @c safeDeviceName has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *safeDeviceType;
/** Test to see if @c safeDeviceType has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceType;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginReqBuff;
/** Test to see if @c wtloginReqBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginReqBuff;

@end

#pragma mark - BindQQResponse

typedef GPB_ENUM(BindQQResponse_FieldNumber) {
  BindQQResponse_FieldNumber_BaseResponse = 1,
  BindQQResponse_FieldNumber_ImgSid = 2,
  BindQQResponse_FieldNumber_ImgBuf = 3,
  BindQQResponse_FieldNumber_PushMailStatus = 4,
  BindQQResponse_FieldNumber_PrivateMsgStatus = 5,
  BindQQResponse_FieldNumber_MicroBlogName = 6,
  BindQQResponse_FieldNumber_Status = 7,
  BindQQResponse_FieldNumber_QqmailSkey = 8,
  BindQQResponse_FieldNumber_ImgEncryptKey = 9,
  BindQQResponse_FieldNumber_A2Key = 10,
  BindQQResponse_FieldNumber_Ksid = 11,
  BindQQResponse_FieldNumber_SafeDeviceList = 12,
  BindQQResponse_FieldNumber_SafeDevice = 13,
  BindQQResponse_FieldNumber_WtloginRspBuff = 14,
};

@interface BindQQResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@property(nonatomic, readwrite) uint32_t pushMailStatus;

@property(nonatomic, readwrite) BOOL hasPushMailStatus;
@property(nonatomic, readwrite) uint32_t privateMsgStatus;

@property(nonatomic, readwrite) BOOL hasPrivateMsgStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *microBlogName;
/** Test to see if @c microBlogName has been set. */
@property(nonatomic, readwrite) BOOL hasMicroBlogName;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *qqmailSkey;
/** Test to see if @c qqmailSkey has been set. */
@property(nonatomic, readwrite) BOOL hasQqmailSkey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *a2Key;
/** Test to see if @c a2Key has been set. */
@property(nonatomic, readwrite) BOOL hasA2Key;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@property(nonatomic, readwrite, strong, null_resettable) SafeDeviceList *safeDeviceList;
/** Test to see if @c safeDeviceList has been set. */
@property(nonatomic, readwrite) BOOL hasSafeDeviceList;

@property(nonatomic, readwrite) uint32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginRspBuff;
/** Test to see if @c wtloginRspBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginRspBuff;

@end

#pragma mark - ResetPwdRequest

typedef GPB_ENUM(ResetPwdRequest_FieldNumber) {
  ResetPwdRequest_FieldNumber_BaseRequest = 1,
  ResetPwdRequest_FieldNumber_OpCode = 2,
  ResetPwdRequest_FieldNumber_Pwd = 3,
};

@interface ResetPwdRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opCode;

@property(nonatomic, readwrite) BOOL hasOpCode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@end

#pragma mark - ResetPwdResponse

typedef GPB_ENUM(ResetPwdResponse_FieldNumber) {
  ResetPwdResponse_FieldNumber_BaseResponse = 1,
  ResetPwdResponse_FieldNumber_URL = 2,
};

@interface ResetPwdResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

#pragma mark - UnBindQQRequest

typedef GPB_ENUM(UnBindQQRequest_FieldNumber) {
  UnBindQQRequest_FieldNumber_BaseRequest = 1,
  UnBindQQRequest_FieldNumber_Ticket = 2,
};

@interface UnBindQQRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@end

#pragma mark - UnBindQQResponse

typedef GPB_ENUM(UnBindQQResponse_FieldNumber) {
  UnBindQQResponse_FieldNumber_BaseResponse = 1,
};

@interface UnBindQQResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - CheckUnBindRequest

typedef GPB_ENUM(CheckUnBindRequest_FieldNumber) {
  CheckUnBindRequest_FieldNumber_BaseRequest = 1,
  CheckUnBindRequest_FieldNumber_BindType = 2,
};

@interface CheckUnBindRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) int32_t bindType;

@property(nonatomic, readwrite) BOOL hasBindType;
@end

#pragma mark - CheckUnBindResponse

typedef GPB_ENUM(CheckUnBindResponse_FieldNumber) {
  CheckUnBindResponse_FieldNumber_BaseResponse = 1,
  CheckUnBindResponse_FieldNumber_RandomPasswd = 2,
  CheckUnBindResponse_FieldNumber_CanUnbindNotice = 3,
};

@interface CheckUnBindResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *randomPasswd;
/** Test to see if @c randomPasswd has been set. */
@property(nonatomic, readwrite) BOOL hasRandomPasswd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *canUnbindNotice;
/** Test to see if @c canUnbindNotice has been set. */
@property(nonatomic, readwrite) BOOL hasCanUnbindNotice;

@end

#pragma mark - FaceBookAuthRequest

typedef GPB_ENUM(FaceBookAuthRequest_FieldNumber) {
  FaceBookAuthRequest_FieldNumber_BaseRequest = 1,
  FaceBookAuthRequest_FieldNumber_OpType = 2,
  FaceBookAuthRequest_FieldNumber_AccessToken = 3,
  FaceBookAuthRequest_FieldNumber_RandomEncryKey = 4,
};

@interface FaceBookAuthRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opType;

@property(nonatomic, readwrite) BOOL hasOpType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@end

#pragma mark - FaceBookAuthResponse

typedef GPB_ENUM(FaceBookAuthResponse_FieldNumber) {
  FaceBookAuthResponse_FieldNumber_BaseResponse = 1,
  FaceBookAuthResponse_FieldNumber_FbuserId = 2,
  FaceBookAuthResponse_FieldNumber_FbuserName = 3,
};

@interface FaceBookAuthResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint64_t fbuserId;

@property(nonatomic, readwrite) BOOL hasFbuserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fbuserName;
/** Test to see if @c fbuserName has been set. */
@property(nonatomic, readwrite) BOOL hasFbuserName;

@end

#pragma mark - RegEquipmentRequest

typedef GPB_ENUM(RegEquipmentRequest_FieldNumber) {
  RegEquipmentRequest_FieldNumber_BaseRequest = 1,
  RegEquipmentRequest_FieldNumber_Type = 2,
  RegEquipmentRequest_FieldNumber_SerialNumber = 3,
  RegEquipmentRequest_FieldNumber_Imei = 4,
  RegEquipmentRequest_FieldNumber_Mac = 5,
  RegEquipmentRequest_FieldNumber_NickName = 6,
  RegEquipmentRequest_FieldNumber_BuiltinIpseq = 7,
  RegEquipmentRequest_FieldNumber_Dlsrc = 8,
  RegEquipmentRequest_FieldNumber_RegMode = 9,
  RegEquipmentRequest_FieldNumber_TimeZone = 10,
  RegEquipmentRequest_FieldNumber_Language = 11,
  RegEquipmentRequest_FieldNumber_ForceReg = 12,
  RegEquipmentRequest_FieldNumber_RealCountry = 13,
  RegEquipmentRequest_FieldNumber_RandomEncryKey = 14,
};

@interface RegEquipmentRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *serialNumber;
/** Test to see if @c serialNumber has been set. */
@property(nonatomic, readwrite) BOOL hasSerialNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mac;
/** Test to see if @c mac has been set. */
@property(nonatomic, readwrite) BOOL hasMac;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
@property(nonatomic, readwrite) uint32_t dlsrc;

@property(nonatomic, readwrite) BOOL hasDlsrc;
@property(nonatomic, readwrite) uint32_t regMode;

@property(nonatomic, readwrite) BOOL hasRegMode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite) uint32_t forceReg;

@property(nonatomic, readwrite) BOOL hasForceReg;
@property(nonatomic, readwrite, copy, null_resettable) NSString *realCountry;
/** Test to see if @c realCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRealCountry;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@end

#pragma mark - RegEquipmentResponse

typedef GPB_ENUM(RegEquipmentResponse_FieldNumber) {
  RegEquipmentResponse_FieldNumber_BaseResponse = 1,
  RegEquipmentResponse_FieldNumber_Uin = 2,
  RegEquipmentResponse_FieldNumber_SessionKey = 3,
  RegEquipmentResponse_FieldNumber_OfficialUserName = 4,
  RegEquipmentResponse_FieldNumber_OfficialNickName = 5,
  RegEquipmentResponse_FieldNumber_QqmicroBlogUserName = 6,
  RegEquipmentResponse_FieldNumber_BindEmail = 7,
  RegEquipmentResponse_FieldNumber_PushMailStatus = 8,
  RegEquipmentResponse_FieldNumber_SendCardBitFlag = 9,
  RegEquipmentResponse_FieldNumber_PushMailSettingTicket = 10,
  RegEquipmentResponse_FieldNumber_BuiltinIplist = 14,
  RegEquipmentResponse_FieldNumber_Fsurl = 15,
  RegEquipmentResponse_FieldNumber_UserName = 16,
  RegEquipmentResponse_FieldNumber_Status = 17,
  RegEquipmentResponse_FieldNumber_NetworkControl = 18,
  RegEquipmentResponse_FieldNumber_ReturnFlag = 19,
  RegEquipmentResponse_FieldNumber_RegType = 20,
  RegEquipmentResponse_FieldNumber_AuthKey = 21,
  RegEquipmentResponse_FieldNumber_PluginKeyList = 22,
  RegEquipmentResponse_FieldNumber_Password = 23,
  RegEquipmentResponse_FieldNumber_ProfileFlag = 24,
  RegEquipmentResponse_FieldNumber_NewHostList = 25,
};

@interface RegEquipmentResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *officialUserName;
/** Test to see if @c officialUserName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *officialNickName;
/** Test to see if @c officialNickName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *qqmicroBlogUserName;
/** Test to see if @c qqmicroBlogUserName has been set. */
@property(nonatomic, readwrite) BOOL hasQqmicroBlogUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite) uint32_t pushMailStatus;

@property(nonatomic, readwrite) BOOL hasPushMailStatus;
@property(nonatomic, readwrite) uint32_t sendCardBitFlag;

@property(nonatomic, readwrite) BOOL hasSendCardBitFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pushMailSettingTicket;
/** Test to see if @c pushMailSettingTicket has been set. */
@property(nonatomic, readwrite) BOOL hasPushMailSettingTicket;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fsurl;
/** Test to see if @c fsurl has been set. */
@property(nonatomic, readwrite) BOOL hasFsurl;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite) uint32_t returnFlag;

@property(nonatomic, readwrite) BOOL hasReturnFlag;
@property(nonatomic, readwrite) uint32_t regType;

@property(nonatomic, readwrite) BOOL hasRegType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *authKey;
/** Test to see if @c authKey has been set. */
@property(nonatomic, readwrite) BOOL hasAuthKey;

@property(nonatomic, readwrite, strong, null_resettable) PluginKeyList *pluginKeyList;
/** Test to see if @c pluginKeyList has been set. */
@property(nonatomic, readwrite) BOOL hasPluginKeyList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@property(nonatomic, readwrite) uint32_t profileFlag;

@property(nonatomic, readwrite) BOOL hasProfileFlag;
@property(nonatomic, readwrite, strong, null_resettable) HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@end

#pragma mark - ResetEquipmentRequest

typedef GPB_ENUM(ResetEquipmentRequest_FieldNumber) {
  ResetEquipmentRequest_FieldNumber_BaseRequest = 1,
};

@interface ResetEquipmentRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@end

#pragma mark - ResetEquipmentResponse

typedef GPB_ENUM(ResetEquipmentResponse_FieldNumber) {
  ResetEquipmentResponse_FieldNumber_BaseResponse = 1,
};

@interface ResetEquipmentResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - SetPwdRequest

typedef GPB_ENUM(SetPwdRequest_FieldNumber) {
  SetPwdRequest_FieldNumber_BaseRequest = 1,
  SetPwdRequest_FieldNumber_Password = 2,
  SetPwdRequest_FieldNumber_Ticket = 3,
  SetPwdRequest_FieldNumber_AutoAuthKey = 4,
};

@interface SetPwdRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@end

#pragma mark - SetPwdResponse

typedef GPB_ENUM(SetPwdResponse_FieldNumber) {
  SetPwdResponse_FieldNumber_BaseResponse = 1,
  SetPwdResponse_FieldNumber_AutoAuthKey = 2,
};

@interface SetPwdResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@end

#pragma mark - QueryHasPswdRequest

typedef GPB_ENUM(QueryHasPswdRequest_FieldNumber) {
  QueryHasPswdRequest_FieldNumber_BaseRequest = 1,
  QueryHasPswdRequest_FieldNumber_Scene = 2,
};

@interface QueryHasPswdRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) int32_t scene;

@property(nonatomic, readwrite) BOOL hasScene;
@end

#pragma mark - QueryHasPswdResponse

typedef GPB_ENUM(QueryHasPswdResponse_FieldNumber) {
  QueryHasPswdResponse_FieldNumber_BaseResponse = 1,
};

@interface QueryHasPswdResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - VerifyPswdRequest

typedef GPB_ENUM(VerifyPswdRequest_FieldNumber) {
  VerifyPswdRequest_FieldNumber_BaseRequest = 1,
  VerifyPswdRequest_FieldNumber_OpCode = 2,
  VerifyPswdRequest_FieldNumber_Pwd1 = 3,
  VerifyPswdRequest_FieldNumber_Pwd2 = 4,
  VerifyPswdRequest_FieldNumber_ImgSid = 5,
  VerifyPswdRequest_FieldNumber_ImgCode = 6,
  VerifyPswdRequest_FieldNumber_ImgEncryptKey = 7,
  VerifyPswdRequest_FieldNumber_Ksid = 8,
  VerifyPswdRequest_FieldNumber_Scence = 9,
  VerifyPswdRequest_FieldNumber_WtloginReqBuff = 10,
};

@interface VerifyPswdRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opCode;

@property(nonatomic, readwrite) BOOL hasOpCode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd1;
/** Test to see if @c pwd1 has been set. */
@property(nonatomic, readwrite) BOOL hasPwd1;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2;
/** Test to see if @c pwd2 has been set. */
@property(nonatomic, readwrite) BOOL hasPwd2;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgCode;
/** Test to see if @c imgCode has been set. */
@property(nonatomic, readwrite) BOOL hasImgCode;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@property(nonatomic, readwrite) uint32_t scence;

@property(nonatomic, readwrite) BOOL hasScence;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginReqBuff;
/** Test to see if @c wtloginReqBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginReqBuff;

@end

#pragma mark - VerifyPswdResponse

typedef GPB_ENUM(VerifyPswdResponse_FieldNumber) {
  VerifyPswdResponse_FieldNumber_BaseResponse = 1,
  VerifyPswdResponse_FieldNumber_ImgSid = 2,
  VerifyPswdResponse_FieldNumber_ImgBuf = 3,
  VerifyPswdResponse_FieldNumber_Ticket = 4,
  VerifyPswdResponse_FieldNumber_ImgEncryptKey = 5,
  VerifyPswdResponse_FieldNumber_A2Key = 6,
  VerifyPswdResponse_FieldNumber_Ksid = 7,
  VerifyPswdResponse_FieldNumber_AuthKey = 8,
  VerifyPswdResponse_FieldNumber_WtloginRspBuff = 9,
};

@interface VerifyPswdResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *a2Key;
/** Test to see if @c a2Key has been set. */
@property(nonatomic, readwrite) BOOL hasA2Key;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authKey;
/** Test to see if @c authKey has been set. */
@property(nonatomic, readwrite) BOOL hasAuthKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginRspBuff;
/** Test to see if @c wtloginRspBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginRspBuff;

@end

#pragma mark - ResetPawInfo

typedef GPB_ENUM(ResetPawInfo_FieldNumber) {
  ResetPawInfo_FieldNumber_CreateTime = 1,
  ResetPawInfo_FieldNumber_IsReset = 2,
  ResetPawInfo_FieldNumber_Id_p = 3,
};

@interface ResetPawInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
@property(nonatomic, readwrite) uint32_t isReset;

@property(nonatomic, readwrite) BOOL hasIsReset;
@property(nonatomic, readwrite) uint32_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
@end

#pragma mark - ApplyResetPawRequest

typedef GPB_ENUM(ApplyResetPawRequest_FieldNumber) {
  ApplyResetPawRequest_FieldNumber_BaseRequest = 1,
  ApplyResetPawRequest_FieldNumber_Type = 2,
  ApplyResetPawRequest_FieldNumber_ResetInfo = 3,
  ApplyResetPawRequest_FieldNumber_GetMethod = 4,
  ApplyResetPawRequest_FieldNumber_RandomEncryKey = 5,
};

@interface ApplyResetPawRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *resetInfo;
/** Test to see if @c resetInfo has been set. */
@property(nonatomic, readwrite) BOOL hasResetInfo;

@property(nonatomic, readwrite) uint32_t getMethod;

@property(nonatomic, readwrite) BOOL hasGetMethod;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@end

#pragma mark - ApplyResetPawResponse

typedef GPB_ENUM(ApplyResetPawResponse_FieldNumber) {
  ApplyResetPawResponse_FieldNumber_BaseResponse = 1,
};

@interface ApplyResetPawResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - GetWeiBoURLReq

typedef GPB_ENUM(GetWeiBoURLReq_FieldNumber) {
  GetWeiBoURLReq_FieldNumber_BaseRequest = 1,
  GetWeiBoURLReq_FieldNumber_A2Key = 2,
  GetWeiBoURLReq_FieldNumber_UserName = 3,
  GetWeiBoURLReq_FieldNumber_Scene = 4,
  GetWeiBoURLReq_FieldNumber_BlogUserName = 5,
  GetWeiBoURLReq_FieldNumber_A2KeyNew = 6,
};

@interface GetWeiBoURLReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *a2Key;
/** Test to see if @c a2Key has been set. */
@property(nonatomic, readwrite) BOOL hasA2Key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite) uint32_t scene;

@property(nonatomic, readwrite) BOOL hasScene;
@property(nonatomic, readwrite, copy, null_resettable) NSString *blogUserName;
/** Test to see if @c blogUserName has been set. */
@property(nonatomic, readwrite) BOOL hasBlogUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *a2KeyNew;
/** Test to see if @c a2KeyNew has been set. */
@property(nonatomic, readwrite) BOOL hasA2KeyNew;

@end

#pragma mark - GetWeiBoURLResp

typedef GPB_ENUM(GetWeiBoURLResp_FieldNumber) {
  GetWeiBoURLResp_FieldNumber_BaseResponse = 1,
  GetWeiBoURLResp_FieldNumber_URL = 2,
};

@interface GetWeiBoURLResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

#pragma mark - GetUserNameRequest

typedef GPB_ENUM(GetUserNameRequest_FieldNumber) {
  GetUserNameRequest_FieldNumber_BaseRequest = 1,
  GetUserNameRequest_FieldNumber_BindUin = 2,
  GetUserNameRequest_FieldNumber_NickName = 3,
  GetUserNameRequest_FieldNumber_Ticket = 4,
  GetUserNameRequest_FieldNumber_Pwd = 5,
  GetUserNameRequest_FieldNumber_Mobile = 6,
  GetUserNameRequest_FieldNumber_OpCode = 7,
};

@interface GetUserNameRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;
/** Test to see if @c mobile has been set. */
@property(nonatomic, readwrite) BOOL hasMobile;

@property(nonatomic, readwrite) uint32_t opCode;

@property(nonatomic, readwrite) BOOL hasOpCode;
@end

#pragma mark - GetUserNameResponse

typedef GPB_ENUM(GetUserNameResponse_FieldNumber) {
  GetUserNameResponse_FieldNumber_BaseResponse = 1,
  GetUserNameResponse_FieldNumber_UserName = 2,
  GetUserNameResponse_FieldNumber_Ticket = 3,
};

@interface GetUserNameResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@end

#pragma mark - IphoneRegRequest

typedef GPB_ENUM(IphoneRegRequest_FieldNumber) {
  IphoneRegRequest_FieldNumber_BaseRequest = 1,
  IphoneRegRequest_FieldNumber_Token = 2,
  IphoneRegRequest_FieldNumber_Sound = 3,
  IphoneRegRequest_FieldNumber_Status = 4,
  IphoneRegRequest_FieldNumber_VoipSound = 5,
  IphoneRegRequest_FieldNumber_TokenCert = 6,
  IphoneRegRequest_FieldNumber_TokenEnv = 7,
  IphoneRegRequest_FieldNumber_TokenScene = 8,
};

@interface IphoneRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sound;
/** Test to see if @c sound has been set. */
@property(nonatomic, readwrite) BOOL hasSound;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *voipSound;
/** Test to see if @c voipSound has been set. */
@property(nonatomic, readwrite) BOOL hasVoipSound;

@property(nonatomic, readwrite) uint32_t tokenCert;

@property(nonatomic, readwrite) BOOL hasTokenCert;
@property(nonatomic, readwrite) uint32_t tokenEnv;

@property(nonatomic, readwrite) BOOL hasTokenEnv;
@property(nonatomic, readwrite) uint32_t tokenScene;

@property(nonatomic, readwrite) BOOL hasTokenScene;
@end

#pragma mark - IphoneRegResponse

typedef GPB_ENUM(IphoneRegResponse_FieldNumber) {
  IphoneRegResponse_FieldNumber_BaseResponse = 1,
};

@interface IphoneRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - IphoneUnRegRequest

typedef GPB_ENUM(IphoneUnRegRequest_FieldNumber) {
  IphoneUnRegRequest_FieldNumber_BaseRequest = 1,
  IphoneUnRegRequest_FieldNumber_Token = 2,
};

@interface IphoneUnRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@end

#pragma mark - IphoneUnRegResponse

typedef GPB_ENUM(IphoneUnRegResponse_FieldNumber) {
  IphoneUnRegResponse_FieldNumber_BaseResponse = 1,
};

@interface IphoneUnRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - WinphoneRegRequest

typedef GPB_ENUM(WinphoneRegRequest_FieldNumber) {
  WinphoneRegRequest_FieldNumber_BaseRequest = 1,
  WinphoneRegRequest_FieldNumber_Uri = 2,
};

@interface WinphoneRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uri;
/** Test to see if @c uri has been set. */
@property(nonatomic, readwrite) BOOL hasUri;

@end

#pragma mark - WinphoneRegResponse

typedef GPB_ENUM(WinphoneRegResponse_FieldNumber) {
  WinphoneRegResponse_FieldNumber_BaseResponse = 1,
};

@interface WinphoneRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - WinphoneUnRegRequest

typedef GPB_ENUM(WinphoneUnRegRequest_FieldNumber) {
  WinphoneUnRegRequest_FieldNumber_BaseRequest = 1,
  WinphoneUnRegRequest_FieldNumber_Uri = 2,
};

@interface WinphoneUnRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uri;
/** Test to see if @c uri has been set. */
@property(nonatomic, readwrite) BOOL hasUri;

@end

#pragma mark - WinphoneUnRegResponse

typedef GPB_ENUM(WinphoneUnRegResponse_FieldNumber) {
  WinphoneUnRegResponse_FieldNumber_BaseResponse = 1,
};

@interface WinphoneUnRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - AshaRegRequest

typedef GPB_ENUM(AshaRegRequest_FieldNumber) {
  AshaRegRequest_FieldNumber_BaseRequest = 1,
  AshaRegRequest_FieldNumber_Nid = 2,
};

@interface AshaRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nid;
/** Test to see if @c nid has been set. */
@property(nonatomic, readwrite) BOOL hasNid;

@end

#pragma mark - AshaRegResponse

typedef GPB_ENUM(AshaRegResponse_FieldNumber) {
  AshaRegResponse_FieldNumber_BaseResponse = 1,
};

@interface AshaRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - AshaUnRegRequest

typedef GPB_ENUM(AshaUnRegRequest_FieldNumber) {
  AshaUnRegRequest_FieldNumber_BaseRequest = 1,
  AshaUnRegRequest_FieldNumber_Nid = 2,
};

@interface AshaUnRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nid;
/** Test to see if @c nid has been set. */
@property(nonatomic, readwrite) BOOL hasNid;

@end

#pragma mark - AshaUnRegResponse

typedef GPB_ENUM(AshaUnRegResponse_FieldNumber) {
  AshaUnRegResponse_FieldNumber_BaseResponse = 1,
};

@interface AshaUnRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - BlackBerryRegRequest

typedef GPB_ENUM(BlackBerryRegRequest_FieldNumber) {
  BlackBerryRegRequest_FieldNumber_BaseRequest = 1,
  BlackBerryRegRequest_FieldNumber_Pin = 2,
  BlackBerryRegRequest_FieldNumber_Port = 3,
};

@interface BlackBerryRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pin;
/** Test to see if @c pin has been set. */
@property(nonatomic, readwrite) BOOL hasPin;

@property(nonatomic, readwrite) uint32_t port;

@property(nonatomic, readwrite) BOOL hasPort;
@end

#pragma mark - BlackBerryRegResponse

typedef GPB_ENUM(BlackBerryRegResponse_FieldNumber) {
  BlackBerryRegResponse_FieldNumber_BaseResponse = 1,
};

@interface BlackBerryRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - BlackBerryUnRegRequest

typedef GPB_ENUM(BlackBerryUnRegRequest_FieldNumber) {
  BlackBerryUnRegRequest_FieldNumber_BaseRequest = 1,
  BlackBerryUnRegRequest_FieldNumber_Pin = 2,
};

@interface BlackBerryUnRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pin;
/** Test to see if @c pin has been set. */
@property(nonatomic, readwrite) BOOL hasPin;

@end

#pragma mark - BlackBerryUnRegResponse

typedef GPB_ENUM(BlackBerryUnRegResponse_FieldNumber) {
  BlackBerryUnRegResponse_FieldNumber_BaseResponse = 1,
};

@interface BlackBerryUnRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - AndroidGCMRegRequest

typedef GPB_ENUM(AndroidGCMRegRequest_FieldNumber) {
  AndroidGCMRegRequest_FieldNumber_BaseRequest = 1,
  AndroidGCMRegRequest_FieldNumber_Token = 2,
};

@interface AndroidGCMRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@end

#pragma mark - AndroidGCMRegResponse

typedef GPB_ENUM(AndroidGCMRegResponse_FieldNumber) {
  AndroidGCMRegResponse_FieldNumber_BaseResponse = 1,
};

@interface AndroidGCMRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - AndroidGCMUnRegRequest

typedef GPB_ENUM(AndroidGCMUnRegRequest_FieldNumber) {
  AndroidGCMUnRegRequest_FieldNumber_BaseRequest = 1,
  AndroidGCMUnRegRequest_FieldNumber_Token = 2,
};

@interface AndroidGCMUnRegRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@end

#pragma mark - AndroidGCMUnRegResponse

typedef GPB_ENUM(AndroidGCMUnRegResponse_FieldNumber) {
  AndroidGCMUnRegResponse_FieldNumber_BaseResponse = 1,
};

@interface AndroidGCMUnRegResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - RSACert

typedef GPB_ENUM(RSACert_FieldNumber) {
  RSACert_FieldNumber_KeyN = 1,
  RSACert_FieldNumber_KeyE = 2,
};

@interface RSACert : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *keyN;
/** Test to see if @c keyN has been set. */
@property(nonatomic, readwrite) BOOL hasKeyN;

@property(nonatomic, readwrite, copy, null_resettable) NSString *keyE;
/** Test to see if @c keyE has been set. */
@property(nonatomic, readwrite) BOOL hasKeyE;

@end

#pragma mark - GetCertRequest

typedef GPB_ENUM(GetCertRequest_FieldNumber) {
  GetCertRequest_FieldNumber_BaseRequest = 1,
  GetCertRequest_FieldNumber_RandomEncryKey = 2,
  GetCertRequest_FieldNumber_CurrentCertVersion = 3,
};

@interface GetCertRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite) uint32_t currentCertVersion;

@property(nonatomic, readwrite) BOOL hasCurrentCertVersion;
@end

#pragma mark - GetCertResponse

typedef GPB_ENUM(GetCertResponse_FieldNumber) {
  GetCertResponse_FieldNumber_BaseResponse = 1,
  GetCertResponse_FieldNumber_CertValue = 2,
  GetCertResponse_FieldNumber_CertVersion = 3,
};

@interface GetCertResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) RSACert *certValue;
/** Test to see if @c certValue has been set. */
@property(nonatomic, readwrite) BOOL hasCertValue;

@property(nonatomic, readwrite) uint32_t certVersion;

@property(nonatomic, readwrite) BOOL hasCertVersion;
@end

#pragma mark - NewAuthRsaReqData

typedef GPB_ENUM(NewAuthRsaReqData_FieldNumber) {
  NewAuthRsaReqData_FieldNumber_RandomEncryKey = 1,
};

@interface NewAuthRsaReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@end

#pragma mark - NewAuthRequest

typedef GPB_ENUM(NewAuthRequest_FieldNumber) {
  NewAuthRequest_FieldNumber_BaseRequest = 1,
  NewAuthRequest_FieldNumber_UserName = 2,
  NewAuthRequest_FieldNumber_Pwd = 3,
  NewAuthRequest_FieldNumber_ImgSid = 4,
  NewAuthRequest_FieldNumber_ImgCode = 5,
  NewAuthRequest_FieldNumber_Pwd2 = 6,
  NewAuthRequest_FieldNumber_BuiltinIpseq = 7,
  NewAuthRequest_FieldNumber_ExtPwd = 8,
  NewAuthRequest_FieldNumber_ExtPwd2 = 9,
  NewAuthRequest_FieldNumber_TimeZone = 10,
  NewAuthRequest_FieldNumber_Language = 11,
  NewAuthRequest_FieldNumber_Imei = 12,
  NewAuthRequest_FieldNumber_Channel = 13,
  NewAuthRequest_FieldNumber_IphoneVer = 14,
  NewAuthRequest_FieldNumber_ImgEncryptKey = 15,
  NewAuthRequest_FieldNumber_Ksid = 16,
  NewAuthRequest_FieldNumber_TimeStamp = 17,
  NewAuthRequest_FieldNumber_DeviceBrand = 18,
  NewAuthRequest_FieldNumber_DeviceModel = 19,
  NewAuthRequest_FieldNumber_Ostype = 20,
  NewAuthRequest_FieldNumber_DeviceType = 21,
  NewAuthRequest_FieldNumber_SoftType = 22,
  NewAuthRequest_FieldNumber_AuthTicket = 23,
  NewAuthRequest_FieldNumber_RealCountry = 24,
  NewAuthRequest_FieldNumber_Signature = 25,
  NewAuthRequest_FieldNumber_RandomEncryKey = 26,
  NewAuthRequest_FieldNumber_AutoAuthTicket = 27,
  NewAuthRequest_FieldNumber_DeviceName = 28,
  NewAuthRequest_FieldNumber_WtloginReqBuff = 29,
  NewAuthRequest_FieldNumber_InputType = 30,
  NewAuthRequest_FieldNumber_ClientSeqId = 31,
  NewAuthRequest_FieldNumber_BundleId = 32,
  NewAuthRequest_FieldNumber_AdSource = 33,
  NewAuthRequest_FieldNumber_CliDbencryptKey = 34,
  NewAuthRequest_FieldNumber_CliDbencryptInfo = 35,
  NewAuthRequest_FieldNumber_VerifySignature = 36,
  NewAuthRequest_FieldNumber_VerifyContent = 37,
  NewAuthRequest_FieldNumber_SessionMode = 38,
};

@interface NewAuthRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgCode;
/** Test to see if @c imgCode has been set. */
@property(nonatomic, readwrite) BOOL hasImgCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2;
/** Test to see if @c pwd2 has been set. */
@property(nonatomic, readwrite) BOOL hasPwd2;

@property(nonatomic, readwrite) uint32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
@property(nonatomic, readwrite, copy, null_resettable) NSString *extPwd;
/** Test to see if @c extPwd has been set. */
@property(nonatomic, readwrite) BOOL hasExtPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *extPwd2;
/** Test to see if @c extPwd2 has been set. */
@property(nonatomic, readwrite) BOOL hasExtPwd2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite) BOOL hasChannel;
@property(nonatomic, readwrite, copy, null_resettable) NSString *iphoneVer;
/** Test to see if @c iphoneVer has been set. */
@property(nonatomic, readwrite) BOOL hasIphoneVer;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@property(nonatomic, readwrite) uint32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceBrand;
/** Test to see if @c deviceBrand has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceBrand;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;
/** Test to see if @c deviceModel has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceModel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ostype;
/** Test to see if @c ostype has been set. */
@property(nonatomic, readwrite) BOOL hasOstype;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realCountry;
/** Test to see if @c realCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRealCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *autoAuthTicket;
/** Test to see if @c autoAuthTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginReqBuff;
/** Test to see if @c wtloginReqBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginReqBuff;

@property(nonatomic, readwrite) uint32_t inputType;

@property(nonatomic, readwrite) BOOL hasInputType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bundleId;
/** Test to see if @c bundleId has been set. */
@property(nonatomic, readwrite) BOOL hasBundleId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *adSource;
/** Test to see if @c adSource has been set. */
@property(nonatomic, readwrite) BOOL hasAdSource;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptKey;
/** Test to see if @c cliDbencryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptInfo;
/** Test to see if @c cliDbencryptInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyContent;
/** Test to see if @c verifyContent has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyContent;

@property(nonatomic, readwrite) uint32_t sessionMode;

@property(nonatomic, readwrite) BOOL hasSessionMode;
@end

#pragma mark - NewAuthResponse

typedef GPB_ENUM(NewAuthResponse_FieldNumber) {
  NewAuthResponse_FieldNumber_BaseResponse = 1,
  NewAuthResponse_FieldNumber_Uin = 2,
  NewAuthResponse_FieldNumber_UserName = 3,
  NewAuthResponse_FieldNumber_NickName = 4,
  NewAuthResponse_FieldNumber_BindUin = 5,
  NewAuthResponse_FieldNumber_BindEmail = 6,
  NewAuthResponse_FieldNumber_BindMobile = 7,
  NewAuthResponse_FieldNumber_Status = 8,
  NewAuthResponse_FieldNumber_SessionKey = 9,
  NewAuthResponse_FieldNumber_ImgSid = 10,
  NewAuthResponse_FieldNumber_ImgBuf = 11,
  NewAuthResponse_FieldNumber_OfficialUserName = 12,
  NewAuthResponse_FieldNumber_OfficialNickName = 13,
  NewAuthResponse_FieldNumber_QqmicroBlogUserName = 14,
  NewAuthResponse_FieldNumber_QqmicroBlogStatus = 15,
  NewAuthResponse_FieldNumber_NewVersion = 16,
  NewAuthResponse_FieldNumber_Ticket = 17,
  NewAuthResponse_FieldNumber_PushMailStatus = 18,
  NewAuthResponse_FieldNumber_SendCardBitFlag = 19,
  NewAuthResponse_FieldNumber_PushMailSettingTicket = 20,
  NewAuthResponse_FieldNumber_BuiltinIplist = 21,
  NewAuthResponse_FieldNumber_Fsurl = 22,
  NewAuthResponse_FieldNumber_NetworkControl = 23,
  NewAuthResponse_FieldNumber_PluginFlag = 24,
  NewAuthResponse_FieldNumber_Alias = 25,
  NewAuthResponse_FieldNumber_RegType = 26,
  NewAuthResponse_FieldNumber_AuthKey = 27,
  NewAuthResponse_FieldNumber_Sid = 28,
  NewAuthResponse_FieldNumber_PluginKeyList = 29,
  NewAuthResponse_FieldNumber_ImgEncryptKey = 30,
  NewAuthResponse_FieldNumber_A2Key = 31,
  NewAuthResponse_FieldNumber_Ksid = 32,
  NewAuthResponse_FieldNumber_ProfileFlag = 33,
  NewAuthResponse_FieldNumber_Password = 34,
  NewAuthResponse_FieldNumber_TimeStamp = 35,
  NewAuthResponse_FieldNumber_IsAutoReg = 36,
  NewAuthResponse_FieldNumber_KickResponse = 37,
  NewAuthResponse_FieldNumber_ApplyBetaURL = 38,
  NewAuthResponse_FieldNumber_DeviceInfoXml = 39,
  NewAuthResponse_FieldNumber_SoftConfigXml = 40,
  NewAuthResponse_FieldNumber_NewHostList = 41,
  NewAuthResponse_FieldNumber_AuthTicket = 42,
  NewAuthResponse_FieldNumber_SafeDevice = 43,
  NewAuthResponse_FieldNumber_ObsoleteItem1 = 44,
  NewAuthResponse_FieldNumber_NeedSetEmailPwd = 45,
  NewAuthResponse_FieldNumber_HintMsg = 46,
  NewAuthResponse_FieldNumber_AutoAuthTicket = 47,
  NewAuthResponse_FieldNumber_DnsInfo = 48,
  NewAuthResponse_FieldNumber_NextAuthType = 49,
  NewAuthResponse_FieldNumber_WtloginRspBuff = 50,
  NewAuthResponse_FieldNumber_ShowStyle = 51,
  NewAuthResponse_FieldNumber_CliDbencryptKey = 52,
  NewAuthResponse_FieldNumber_CliDbencryptInfo = 53,
  NewAuthResponse_FieldNumber_Flag = 54,
  NewAuthResponse_FieldNumber_SnsDnsInfo = 55,
  NewAuthResponse_FieldNumber_AppDnsInfo = 56,
  NewAuthResponse_FieldNumber_VerifySignature = 57,
  NewAuthResponse_FieldNumber_VerifyBuff = 58,
};

@interface NewAuthResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *bindMobile;
/** Test to see if @c bindMobile has been set. */
@property(nonatomic, readwrite) BOOL hasBindMobile;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSData *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *officialUserName;
/** Test to see if @c officialUserName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialUserName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *officialNickName;
/** Test to see if @c officialNickName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialNickName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *qqmicroBlogUserName;
/** Test to see if @c qqmicroBlogUserName has been set. */
@property(nonatomic, readwrite) BOOL hasQqmicroBlogUserName;

@property(nonatomic, readwrite) uint32_t qqmicroBlogStatus;

@property(nonatomic, readwrite) BOOL hasQqmicroBlogStatus;
@property(nonatomic, readwrite) uint32_t newVersion;

@property(nonatomic, readwrite) BOOL hasNewVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *ticket;
/** Test to see if @c ticket has been set. */
@property(nonatomic, readwrite) BOOL hasTicket;

@property(nonatomic, readwrite) uint32_t pushMailStatus;

@property(nonatomic, readwrite) BOOL hasPushMailStatus;
@property(nonatomic, readwrite) uint32_t sendCardBitFlag;

@property(nonatomic, readwrite) BOOL hasSendCardBitFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pushMailSettingTicket;
/** Test to see if @c pushMailSettingTicket has been set. */
@property(nonatomic, readwrite) BOOL hasPushMailSettingTicket;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fsurl;
/** Test to see if @c fsurl has been set. */
@property(nonatomic, readwrite) BOOL hasFsurl;

@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite) uint32_t pluginFlag;

@property(nonatomic, readwrite) BOOL hasPluginFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite) uint32_t regType;

@property(nonatomic, readwrite) BOOL hasRegType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *authKey;
/** Test to see if @c authKey has been set. */
@property(nonatomic, readwrite) BOOL hasAuthKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sid;
/** Test to see if @c sid has been set. */
@property(nonatomic, readwrite) BOOL hasSid;

@property(nonatomic, readwrite, strong, null_resettable) PluginKeyList *pluginKeyList;
/** Test to see if @c pluginKeyList has been set. */
@property(nonatomic, readwrite) BOOL hasPluginKeyList;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *a2Key;
/** Test to see if @c a2Key has been set. */
@property(nonatomic, readwrite) BOOL hasA2Key;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@property(nonatomic, readwrite) uint32_t profileFlag;

@property(nonatomic, readwrite) BOOL hasProfileFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@property(nonatomic, readwrite) uint32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
@property(nonatomic, readwrite) uint32_t isAutoReg;

@property(nonatomic, readwrite) BOOL hasIsAutoReg;
@property(nonatomic, readwrite, copy, null_resettable) NSString *kickResponse;
/** Test to see if @c kickResponse has been set. */
@property(nonatomic, readwrite) BOOL hasKickResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *applyBetaURL;
/** Test to see if @c applyBetaURL has been set. */
@property(nonatomic, readwrite) BOOL hasApplyBetaURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceInfoXml;
/** Test to see if @c deviceInfoXml has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceInfoXml;

@property(nonatomic, readwrite, copy, null_resettable) NSString *softConfigXml;
/** Test to see if @c softConfigXml has been set. */
@property(nonatomic, readwrite) BOOL hasSoftConfigXml;

@property(nonatomic, readwrite, strong, null_resettable) HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@property(nonatomic, readwrite) uint32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@property(nonatomic, readwrite) uint32_t obsoleteItem1;

@property(nonatomic, readwrite) BOOL hasObsoleteItem1;
@property(nonatomic, readwrite) uint32_t needSetEmailPwd;

@property(nonatomic, readwrite) BOOL hasNeedSetEmailPwd;
@property(nonatomic, readwrite, copy, null_resettable) NSString *hintMsg;
/** Test to see if @c hintMsg has been set. */
@property(nonatomic, readwrite) BOOL hasHintMsg;

@property(nonatomic, readwrite, copy, null_resettable) NSString *autoAuthTicket;
/** Test to see if @c autoAuthTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthTicket;

@property(nonatomic, readwrite, strong, null_resettable) CDNDnsInfo *dnsInfo;
/** Test to see if @c dnsInfo has been set. */
@property(nonatomic, readwrite) BOOL hasDnsInfo;

@property(nonatomic, readwrite) uint32_t nextAuthType;

@property(nonatomic, readwrite) BOOL hasNextAuthType;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginRspBuff;
/** Test to see if @c wtloginRspBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginRspBuff;

@property(nonatomic, readwrite, strong, null_resettable) ShowStyleKey *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptKey;
/** Test to see if @c cliDbencryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptInfo;
/** Test to see if @c cliDbencryptInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptInfo;

@property(nonatomic, readwrite) uint32_t flag;

@property(nonatomic, readwrite) BOOL hasFlag;
@property(nonatomic, readwrite, strong, null_resettable) CDNDnsInfo *snsDnsInfo;
/** Test to see if @c snsDnsInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSnsDnsInfo;

@property(nonatomic, readwrite, strong, null_resettable) CDNDnsInfo *appDnsInfo;
/** Test to see if @c appDnsInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAppDnsInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *verifyBuff;
/** Test to see if @c verifyBuff has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyBuff;

@end

#pragma mark - BindGoogleContactRequest

typedef GPB_ENUM(BindGoogleContactRequest_FieldNumber) {
  BindGoogleContactRequest_FieldNumber_BaseRequest = 1,
  BindGoogleContactRequest_FieldNumber_Opcode = 2,
  BindGoogleContactRequest_FieldNumber_GoogleContactName = 3,
  BindGoogleContactRequest_FieldNumber_Force = 4,
};

@interface BindGoogleContactRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *googleContactName;
/** Test to see if @c googleContactName has been set. */
@property(nonatomic, readwrite) BOOL hasGoogleContactName;

@property(nonatomic, readwrite) uint32_t force;

@property(nonatomic, readwrite) BOOL hasForce;
@end

#pragma mark - BindGoogleContactResponse

typedef GPB_ENUM(BindGoogleContactResponse_FieldNumber) {
  BindGoogleContactResponse_FieldNumber_BaseResponse = 1,
};

@interface BindGoogleContactResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - BindLinkedinContactRequest

typedef GPB_ENUM(BindLinkedinContactRequest_FieldNumber) {
  BindLinkedinContactRequest_FieldNumber_BaseRequest = 1,
  BindLinkedinContactRequest_FieldNumber_Opcode = 2,
  BindLinkedinContactRequest_FieldNumber_Visible = 3,
  BindLinkedinContactRequest_FieldNumber_LinkedinMemberId = 4,
  BindLinkedinContactRequest_FieldNumber_LinkedinName = 5,
  BindLinkedinContactRequest_FieldNumber_LinkedinPublicURL = 6,
  BindLinkedinContactRequest_FieldNumber_Timestamp = 7,
  BindLinkedinContactRequest_FieldNumber_Nounce = 8,
  BindLinkedinContactRequest_FieldNumber_LinkedinSignature = 9,
  BindLinkedinContactRequest_FieldNumber_LinkedinReturnSignature = 10,
};

@interface BindLinkedinContactRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite) uint32_t visible;

@property(nonatomic, readwrite) BOOL hasVisible;
@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinMemberId;
/** Test to see if @c linkedinMemberId has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinMemberId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinName;
/** Test to see if @c linkedinName has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinPublicURL;
/** Test to see if @c linkedinPublicURL has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinPublicURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nounce;
/** Test to see if @c nounce has been set. */
@property(nonatomic, readwrite) BOOL hasNounce;

@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinSignature;
/** Test to see if @c linkedinSignature has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinSignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *linkedinReturnSignature;
/** Test to see if @c linkedinReturnSignature has been set. */
@property(nonatomic, readwrite) BOOL hasLinkedinReturnSignature;

@end

#pragma mark - BindLinkedinContactResponse

typedef GPB_ENUM(BindLinkedinContactResponse_FieldNumber) {
  BindLinkedinContactResponse_FieldNumber_BaseResponse = 1,
};

@interface BindLinkedinContactResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - UnBindLinkedinContactRequest

typedef GPB_ENUM(UnBindLinkedinContactRequest_FieldNumber) {
  UnBindLinkedinContactRequest_FieldNumber_BaseRequest = 1,
  UnBindLinkedinContactRequest_FieldNumber_Opcode = 2,
};

@interface UnBindLinkedinContactRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - UnBindLinkedinContactResponse

typedef GPB_ENUM(UnBindLinkedinContactResponse_FieldNumber) {
  UnBindLinkedinContactResponse_FieldNumber_BaseResponse = 1,
};

@interface UnBindLinkedinContactResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - LoginQRCodeNotify

typedef GPB_ENUM(LoginQRCodeNotify_FieldNumber) {
  LoginQRCodeNotify_FieldNumber_Uuid = 1,
  LoginQRCodeNotify_FieldNumber_Status = 2,
  LoginQRCodeNotify_FieldNumber_UserName = 3,
  LoginQRCodeNotify_FieldNumber_Pwd = 4,
  LoginQRCodeNotify_FieldNumber_HeadImgURL = 5,
  LoginQRCodeNotify_FieldNumber_PushLoginUrlexpiredTime = 6,
  LoginQRCodeNotify_FieldNumber_NickName = 7,
  LoginQRCodeNotify_FieldNumber_ExpiredTime = 8,
  LoginQRCodeNotify_FieldNumber_PairWaitTip = 9,
  LoginQRCodeNotify_FieldNumber_AuthorClientVersion = 10,
  LoginQRCodeNotify_FieldNumber_AuthorDeviceType = 11,
};

@interface LoginQRCodeNotify : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *headImgURL;
/** Test to see if @c headImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasHeadImgURL;

@property(nonatomic, readwrite) uint32_t pushLoginUrlexpiredTime;

@property(nonatomic, readwrite) BOOL hasPushLoginUrlexpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t expiredTime;

@property(nonatomic, readwrite) BOOL hasExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *pairWaitTip;
/** Test to see if @c pairWaitTip has been set. */
@property(nonatomic, readwrite) BOOL hasPairWaitTip;

@property(nonatomic, readwrite) uint32_t authorClientVersion;

@property(nonatomic, readwrite) BOOL hasAuthorClientVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *authorDeviceType;
/** Test to see if @c authorDeviceType has been set. */
@property(nonatomic, readwrite) BOOL hasAuthorDeviceType;

@end

#pragma mark - LoginQRCodeNotifyPkg

typedef GPB_ENUM(LoginQRCodeNotifyPkg_FieldNumber) {
  LoginQRCodeNotifyPkg_FieldNumber_NotifyData = 1,
  LoginQRCodeNotifyPkg_FieldNumber_Opcode = 2,
};

@interface LoginQRCodeNotifyPkg : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *notifyData;
/** Test to see if @c notifyData has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyData;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - GetLoginQRCodeRequest

typedef GPB_ENUM(GetLoginQRCodeRequest_FieldNumber) {
  GetLoginQRCodeRequest_FieldNumber_BaseRequest = 1,
  GetLoginQRCodeRequest_FieldNumber_RandomEncryKey = 2,
  GetLoginQRCodeRequest_FieldNumber_Opcode = 3,
  GetLoginQRCodeRequest_FieldNumber_DeviceName = 4,
  GetLoginQRCodeRequest_FieldNumber_UserName = 5,
  GetLoginQRCodeRequest_FieldNumber_HardwareExtra = 6,
  GetLoginQRCodeRequest_FieldNumber_SoftType = 7,
  GetLoginQRCodeRequest_FieldNumber_ExtDevLoginType = 8,
  GetLoginQRCodeRequest_FieldNumber_MsgContextPubKey = 9,
};

@interface GetLoginQRCodeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite) uint32_t hardwareExtra;

@property(nonatomic, readwrite) BOOL hasHardwareExtra;
@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

/** 0 */
@property(nonatomic, readwrite) int32_t extDevLoginType;

@property(nonatomic, readwrite) BOOL hasExtDevLoginType;
/** iMac */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *msgContextPubKey;
/** Test to see if @c msgContextPubKey has been set. */
@property(nonatomic, readwrite) BOOL hasMsgContextPubKey;

@end

#pragma mark - GetLoginQRCodeResponse

typedef GPB_ENUM(GetLoginQRCodeResponse_FieldNumber) {
  GetLoginQRCodeResponse_FieldNumber_BaseResponse = 1,
  GetLoginQRCodeResponse_FieldNumber_Qrcode = 2,
  GetLoginQRCodeResponse_FieldNumber_Uuid = 3,
  GetLoginQRCodeResponse_FieldNumber_CheckTime = 4,
  GetLoginQRCodeResponse_FieldNumber_NotifyKey = 5,
  GetLoginQRCodeResponse_FieldNumber_ExpiredTime = 6,
  GetLoginQRCodeResponse_FieldNumber_BlueToothBroadCastUuid = 7,
  GetLoginQRCodeResponse_FieldNumber_BlueToothBroadCastContent = 8,
};

@interface GetLoginQRCodeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *qrcode;
/** Test to see if @c qrcode has been set. */
@property(nonatomic, readwrite) BOOL hasQrcode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) uint32_t checkTime;

@property(nonatomic, readwrite) BOOL hasCheckTime;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *notifyKey;
/** Test to see if @c notifyKey has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyKey;

@property(nonatomic, readwrite) uint32_t expiredTime;

@property(nonatomic, readwrite) BOOL hasExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *blueToothBroadCastUuid;
/** Test to see if @c blueToothBroadCastUuid has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastUuid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *blueToothBroadCastContent;
/** Test to see if @c blueToothBroadCastContent has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastContent;

@end

#pragma mark - CheckLoginQRCodeRequest

typedef GPB_ENUM(CheckLoginQRCodeRequest_FieldNumber) {
  CheckLoginQRCodeRequest_FieldNumber_BaseRequest = 1,
  CheckLoginQRCodeRequest_FieldNumber_RandomEncryKey = 2,
  CheckLoginQRCodeRequest_FieldNumber_Uuid = 3,
  CheckLoginQRCodeRequest_FieldNumber_TimeStamp = 4,
  CheckLoginQRCodeRequest_FieldNumber_Opcode = 5,
};

@interface CheckLoginQRCodeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) uint32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - CheckLoginQRCodeResponse

typedef GPB_ENUM(CheckLoginQRCodeResponse_FieldNumber) {
  CheckLoginQRCodeResponse_FieldNumber_BaseResponse = 1,
  CheckLoginQRCodeResponse_FieldNumber_NotifyPkg = 3,
};

@interface CheckLoginQRCodeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) LoginQRCodeNotifyPkg *notifyPkg;
/** Test to see if @c notifyPkg has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyPkg;

@end

#pragma mark - GetLoginURLRequest

typedef GPB_ENUM(GetLoginURLRequest_FieldNumber) {
  GetLoginURLRequest_FieldNumber_BaseRequest = 1,
  GetLoginURLRequest_FieldNumber_Uuid = 2,
  GetLoginURLRequest_FieldNumber_FromDeviceId = 3,
};

@interface GetLoginURLRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSData *fromDeviceId;
/** Test to see if @c fromDeviceId has been set. */
@property(nonatomic, readwrite) BOOL hasFromDeviceId;

@end

#pragma mark - GetLoginURLResponse

typedef GPB_ENUM(GetLoginURLResponse_FieldNumber) {
  GetLoginURLResponse_FieldNumber_BaseResponse = 1,
  GetLoginURLResponse_FieldNumber_URL = 2,
};

@interface GetLoginURLResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

#pragma mark - PushLoginURLRequest

typedef GPB_ENUM(PushLoginURLRequest_FieldNumber) {
  PushLoginURLRequest_FieldNumber_BaseRequest = 1,
  PushLoginURLRequest_FieldNumber_UserName = 2,
  PushLoginURLRequest_FieldNumber_AutoAuthTicket = 3,
  PushLoginURLRequest_FieldNumber_ClientId = 4,
  PushLoginURLRequest_FieldNumber_RandomEncryKey = 5,
  PushLoginURLRequest_FieldNumber_Opcode = 6,
  PushLoginURLRequest_FieldNumber_DeviceName = 7,
  PushLoginURLRequest_FieldNumber_AutoAuthKey = 8,
};

@interface PushLoginURLRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *autoAuthTicket;
/** Test to see if @c autoAuthTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthTicket;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;
/** Test to see if @c clientId has been set. */
@property(nonatomic, readwrite) BOOL hasClientId;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@end

#pragma mark - PushLoginURLResponse

typedef GPB_ENUM(PushLoginURLResponse_FieldNumber) {
  PushLoginURLResponse_FieldNumber_BaseResponse = 1,
  PushLoginURLResponse_FieldNumber_Uuid = 2,
  PushLoginURLResponse_FieldNumber_NotifyKey = 3,
  PushLoginURLResponse_FieldNumber_CheckTime = 4,
  PushLoginURLResponse_FieldNumber_ExpiredTime = 5,
  PushLoginURLResponse_FieldNumber_BlueToothBroadCastUuid = 6,
  PushLoginURLResponse_FieldNumber_BlueToothBroadCastContent = 7,
};

@interface PushLoginURLResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *notifyKey;
/** Test to see if @c notifyKey has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyKey;

@property(nonatomic, readwrite) uint32_t checkTime;

@property(nonatomic, readwrite) BOOL hasCheckTime;
@property(nonatomic, readwrite) uint32_t expiredTime;

@property(nonatomic, readwrite) BOOL hasExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *blueToothBroadCastUuid;
/** Test to see if @c blueToothBroadCastUuid has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastUuid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *blueToothBroadCastContent;
/** Test to see if @c blueToothBroadCastContent has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastContent;

@end

#pragma mark - BlueToothBindLoginRequest

typedef GPB_ENUM(BlueToothBindLoginRequest_FieldNumber) {
  BlueToothBindLoginRequest_FieldNumber_BaseRequest = 1,
  BlueToothBindLoginRequest_FieldNumber_URL = 2,
  BlueToothBindLoginRequest_FieldNumber_Opcode = 3,
};

@interface BlueToothBindLoginRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - BlueToothBindLoginResponse

typedef GPB_ENUM(BlueToothBindLoginResponse_FieldNumber) {
  BlueToothBindLoginResponse_FieldNumber_BaseResponse = 1,
  BlueToothBindLoginResponse_FieldNumber_DeviceName = 2,
  BlueToothBindLoginResponse_FieldNumber_ExpiredTime = 3,
  BlueToothBindLoginResponse_FieldNumber_Uuid = 4,
  BlueToothBindLoginResponse_FieldNumber_BlueToothBroadCastUuid = 5,
};

@interface BlueToothBindLoginResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite) uint32_t expiredTime;

@property(nonatomic, readwrite) BOOL hasExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *blueToothBroadCastUuid;
/** Test to see if @c blueToothBroadCastUuid has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastUuid;

@end

#pragma mark - BlueToothAutoLoginRequest

typedef GPB_ENUM(BlueToothAutoLoginRequest_FieldNumber) {
  BlueToothAutoLoginRequest_FieldNumber_BaseRequest = 1,
  BlueToothAutoLoginRequest_FieldNumber_UserName = 2,
  BlueToothAutoLoginRequest_FieldNumber_Uuid = 3,
  BlueToothAutoLoginRequest_FieldNumber_AutoAuthTicket = 4,
  BlueToothAutoLoginRequest_FieldNumber_LoginInfoData = 5,
  BlueToothAutoLoginRequest_FieldNumber_RandomEncryKey = 6,
  BlueToothAutoLoginRequest_FieldNumber_BlueToothBroadCastUuid = 7,
};

@interface BlueToothAutoLoginRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *autoAuthTicket;
/** Test to see if @c autoAuthTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthTicket;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *loginInfoData;
/** Test to see if @c loginInfoData has been set. */
@property(nonatomic, readwrite) BOOL hasLoginInfoData;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *blueToothBroadCastUuid;
/** Test to see if @c blueToothBroadCastUuid has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastUuid;

@end

#pragma mark - BlueToothAutoLoginResponse

typedef GPB_ENUM(BlueToothAutoLoginResponse_FieldNumber) {
  BlueToothAutoLoginResponse_FieldNumber_BaseResponse = 1,
  BlueToothAutoLoginResponse_FieldNumber_UserName = 2,
  BlueToothAutoLoginResponse_FieldNumber_Password = 3,
};

@interface BlueToothAutoLoginResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@end

#pragma mark - BlueToothAutoLoginInfoPkg

typedef GPB_ENUM(BlueToothAutoLoginInfoPkg_FieldNumber) {
  BlueToothAutoLoginInfoPkg_FieldNumber_Salt = 1,
  BlueToothAutoLoginInfoPkg_FieldNumber_Data_p = 2,
};

@interface BlueToothAutoLoginInfoPkg : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *salt;
/** Test to see if @c salt has been set. */
@property(nonatomic, readwrite) BOOL hasSalt;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - BlueToothAutoLoginInfo

typedef GPB_ENUM(BlueToothAutoLoginInfo_FieldNumber) {
  BlueToothAutoLoginInfo_FieldNumber_Uin = 1,
  BlueToothAutoLoginInfo_FieldNumber_DeviceType = 2,
  BlueToothAutoLoginInfo_FieldNumber_ClientVersion = 3,
  BlueToothAutoLoginInfo_FieldNumber_DeviceId = 4,
};

@interface BlueToothAutoLoginInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite) uint32_t clientVersion;

@property(nonatomic, readwrite) BOOL hasClientVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSData *deviceId;
/** Test to see if @c deviceId has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceId;

@end

#pragma mark - BindBlackberryPPIDRequest

typedef GPB_ENUM(BindBlackberryPPIDRequest_FieldNumber) {
  BindBlackberryPPIDRequest_FieldNumber_BaseRequest = 1,
  BindBlackberryPPIDRequest_FieldNumber_Opcode = 2,
  BindBlackberryPPIDRequest_FieldNumber_Bbppid = 3,
  BindBlackberryPPIDRequest_FieldNumber_Bbpin = 4,
  BindBlackberryPPIDRequest_FieldNumber_BbmnickName = 5,
  BindBlackberryPPIDRequest_FieldNumber_Force = 6,
};

@interface BindBlackberryPPIDRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *bbppid;
/** Test to see if @c bbppid has been set. */
@property(nonatomic, readwrite) BOOL hasBbppid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bbpin;
/** Test to see if @c bbpin has been set. */
@property(nonatomic, readwrite) BOOL hasBbpin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bbmnickName;
/** Test to see if @c bbmnickName has been set. */
@property(nonatomic, readwrite) BOOL hasBbmnickName;

@property(nonatomic, readwrite) uint32_t force;

@property(nonatomic, readwrite) BOOL hasForce;
@end

#pragma mark - BindBlackberryPPIDResponse

typedef GPB_ENUM(BindBlackberryPPIDResponse_FieldNumber) {
  BindBlackberryPPIDResponse_FieldNumber_BaseResponse = 1,
};

@interface BindBlackberryPPIDResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - LockWebDeviceRequest

typedef GPB_ENUM(LockWebDeviceRequest_FieldNumber) {
  LockWebDeviceRequest_FieldNumber_BaseRequest = 1,
  LockWebDeviceRequest_FieldNumber_Opcode = 2,
  LockWebDeviceRequest_FieldNumber_BlueToothBroadCastUuid = 3,
  LockWebDeviceRequest_FieldNumber_BlueToothBroadCastContent = 4,
};

@interface LockWebDeviceRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *blueToothBroadCastUuid;
/** Test to see if @c blueToothBroadCastUuid has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastUuid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *blueToothBroadCastContent;
/** Test to see if @c blueToothBroadCastContent has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastContent;

@end

#pragma mark - LockWebDeviceResponse

typedef GPB_ENUM(LockWebDeviceResponse_FieldNumber) {
  LockWebDeviceResponse_FieldNumber_BaseResponse = 1,
};

@interface LockWebDeviceResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - GetIosExtensionKeyRequest

typedef GPB_ENUM(GetIosExtensionKeyRequest_FieldNumber) {
  GetIosExtensionKeyRequest_FieldNumber_BaseRequest = 1,
  GetIosExtensionKeyRequest_FieldNumber_ExtensionSessionType = 2,
  GetIosExtensionKeyRequest_FieldNumber_ExtensionDeviceId = 3,
};

@interface GetIosExtensionKeyRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t extensionSessionType;

@property(nonatomic, readwrite) BOOL hasExtensionSessionType;
@property(nonatomic, readwrite, copy, null_resettable) NSData *extensionDeviceId;
/** Test to see if @c extensionDeviceId has been set. */
@property(nonatomic, readwrite) BOOL hasExtensionDeviceId;

@end

#pragma mark - ExtSession

typedef GPB_ENUM(ExtSession_FieldNumber) {
  ExtSession_FieldNumber_SessionType = 1,
  ExtSession_FieldNumber_SessionKey = 2,
  ExtSession_FieldNumber_ServerId = 3,
};

@interface ExtSession : GPBMessage

@property(nonatomic, readwrite) uint32_t sessionType;

@property(nonatomic, readwrite) BOOL hasSessionType;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *serverId;
/** Test to see if @c serverId has been set. */
@property(nonatomic, readwrite) BOOL hasServerId;

@end

#pragma mark - GetIosExtensionKeyResponse

typedef GPB_ENUM(GetIosExtensionKeyResponse_FieldNumber) {
  GetIosExtensionKeyResponse_FieldNumber_BaseResponse = 1,
  GetIosExtensionKeyResponse_FieldNumber_Key = 2,
  GetIosExtensionKeyResponse_FieldNumber_ExtensionSession = 3,
};

@interface GetIosExtensionKeyResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite, strong, null_resettable) ExtSession *extensionSession;
/** Test to see if @c extensionSession has been set. */
@property(nonatomic, readwrite) BOOL hasExtensionSession;

@end

#pragma mark - PatternLockBuffer

typedef GPB_ENUM(PatternLockBuffer_FieldNumber) {
  PatternLockBuffer_FieldNumber_Uin = 1,
  PatternLockBuffer_FieldNumber_Version = 2,
  PatternLockBuffer_FieldNumber_Svrpatternhash = 3,
  PatternLockBuffer_FieldNumber_Lockstatus = 4,
  PatternLockBuffer_FieldNumber_Sign = 5,
};

@interface PatternLockBuffer : GPBMessage

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite) uint32_t version;

@property(nonatomic, readwrite) BOOL hasVersion;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *svrpatternhash;
/** Test to see if @c svrpatternhash has been set. */
@property(nonatomic, readwrite) BOOL hasSvrpatternhash;

@property(nonatomic, readwrite) uint32_t lockstatus;

@property(nonatomic, readwrite) BOOL hasLockstatus;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - RegisterNewPatternLockRequest

typedef GPB_ENUM(RegisterNewPatternLockRequest_FieldNumber) {
  RegisterNewPatternLockRequest_FieldNumber_BaseRequest = 1,
  RegisterNewPatternLockRequest_FieldNumber_Paytoken = 2,
  RegisterNewPatternLockRequest_FieldNumber_Patternhash = 3,
  RegisterNewPatternLockRequest_FieldNumber_Cmd = 4,
};

@interface RegisterNewPatternLockRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *paytoken;
/** Test to see if @c paytoken has been set. */
@property(nonatomic, readwrite) BOOL hasPaytoken;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *patternhash;
/** Test to see if @c patternhash has been set. */
@property(nonatomic, readwrite) BOOL hasPatternhash;

@property(nonatomic, readwrite) uint32_t cmd;

@property(nonatomic, readwrite) BOOL hasCmd;
@end

#pragma mark - RegisterNewPatternLockResponse

typedef GPB_ENUM(RegisterNewPatternLockResponse_FieldNumber) {
  RegisterNewPatternLockResponse_FieldNumber_BaseResponse = 1,
  RegisterNewPatternLockResponse_FieldNumber_Patternlockbuf = 2,
};

@interface RegisterNewPatternLockResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) PatternLockBuffer *patternlockbuf;
/** Test to see if @c patternlockbuf has been set. */
@property(nonatomic, readwrite) BOOL hasPatternlockbuf;

@end

#pragma mark - OpPatternLockRequest

typedef GPB_ENUM(OpPatternLockRequest_FieldNumber) {
  OpPatternLockRequest_FieldNumber_BaseRequest = 1,
  OpPatternLockRequest_FieldNumber_Cmd = 2,
  OpPatternLockRequest_FieldNumber_Nowpatternhash = 3,
  OpPatternLockRequest_FieldNumber_Newpatternhash = 4,
};

@interface OpPatternLockRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite) uint32_t cmd;

@property(nonatomic, readwrite) BOOL hasCmd;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *nowpatternhash;
/** Test to see if @c nowpatternhash has been set. */
@property(nonatomic, readwrite) BOOL hasNowpatternhash;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *newpatternhash;
/** Test to see if @c newpatternhash has been set. */
@property(nonatomic, readwrite) BOOL hasNewpatternhash;

@end

#pragma mark - OpPatternLockResponse

typedef GPB_ENUM(OpPatternLockResponse_FieldNumber) {
  OpPatternLockResponse_FieldNumber_BaseResponse = 1,
  OpPatternLockResponse_FieldNumber_Patternlockbuf = 2,
};

@interface OpPatternLockResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) PatternLockBuffer *patternlockbuf;
/** Test to see if @c patternlockbuf has been set. */
@property(nonatomic, readwrite) BOOL hasPatternlockbuf;

@end

#pragma mark - WTLoginImgReqInfo

typedef GPB_ENUM(WTLoginImgReqInfo_FieldNumber) {
  WTLoginImgReqInfo_FieldNumber_ImgSid = 1,
  WTLoginImgReqInfo_FieldNumber_ImgCode = 2,
  WTLoginImgReqInfo_FieldNumber_ImgEncryptKey = 3,
  WTLoginImgReqInfo_FieldNumber_Ksid = 4,
};

@interface WTLoginImgReqInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgCode;
/** Test to see if @c imgCode has been set. */
@property(nonatomic, readwrite) BOOL hasImgCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@end

#pragma mark - WTLoginImgRespInfo

typedef GPB_ENUM(WTLoginImgRespInfo_FieldNumber) {
  WTLoginImgRespInfo_FieldNumber_ImgEncryptKey = 1,
  WTLoginImgRespInfo_FieldNumber_Ksid = 2,
  WTLoginImgRespInfo_FieldNumber_ImgSid = 3,
  WTLoginImgRespInfo_FieldNumber_ImgBuf = 4,
};

@interface WTLoginImgRespInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgEncryptKey;
/** Test to see if @c imgEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasImgEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *ksid;
/** Test to see if @c ksid has been set. */
@property(nonatomic, readwrite) BOOL hasKsid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgSid;
/** Test to see if @c imgSid has been set. */
@property(nonatomic, readwrite) BOOL hasImgSid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *imgBuf;
/** Test to see if @c imgBuf has been set. */
@property(nonatomic, readwrite) BOOL hasImgBuf;

@end

#pragma mark - WxVerifyCodeReqInfo

typedef GPB_ENUM(WxVerifyCodeReqInfo_FieldNumber) {
  WxVerifyCodeReqInfo_FieldNumber_VerifySignature = 1,
  WxVerifyCodeReqInfo_FieldNumber_VerifyContent = 2,
};

@interface WxVerifyCodeReqInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyContent;
/** Test to see if @c verifyContent has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyContent;

@end

#pragma mark - WxVerifyCodeRespInfo

typedef GPB_ENUM(WxVerifyCodeRespInfo_FieldNumber) {
  WxVerifyCodeRespInfo_FieldNumber_VerifySignature = 1,
  WxVerifyCodeRespInfo_FieldNumber_VerifyBuff = 2,
};

@interface WxVerifyCodeRespInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *verifySignature;
/** Test to see if @c verifySignature has been set. */
@property(nonatomic, readwrite) BOOL hasVerifySignature;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *verifyBuff;
/** Test to see if @c verifyBuff has been set. */
@property(nonatomic, readwrite) BOOL hasVerifyBuff;

@end

#pragma mark - BaseAuthReqInfo

typedef GPB_ENUM(BaseAuthReqInfo_FieldNumber) {
  BaseAuthReqInfo_FieldNumber_WtloginReqBuff = 1,
  BaseAuthReqInfo_FieldNumber_WtloginImgReqInfo = 2,
  BaseAuthReqInfo_FieldNumber_WxVerifyCodeReqInfo = 3,
  BaseAuthReqInfo_FieldNumber_CliDbencryptKey = 4,
  BaseAuthReqInfo_FieldNumber_CliDbencryptInfo = 5,
  BaseAuthReqInfo_FieldNumber_AuthReqFlag = 6,
  BaseAuthReqInfo_FieldNumber_AuthTicket = 7,
};

@interface BaseAuthReqInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginReqBuff;
/** Test to see if @c wtloginReqBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginReqBuff;

@property(nonatomic, readwrite, strong, null_resettable) WTLoginImgReqInfo *wtloginImgReqInfo;
/** Test to see if @c wtloginImgReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginImgReqInfo;

@property(nonatomic, readwrite, strong, null_resettable) WxVerifyCodeReqInfo *wxVerifyCodeReqInfo;
/** Test to see if @c wxVerifyCodeReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWxVerifyCodeReqInfo;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptKey;
/** Test to see if @c cliDbencryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptInfo;
/** Test to see if @c cliDbencryptInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptInfo;

@property(nonatomic, readwrite) uint32_t authReqFlag;

@property(nonatomic, readwrite) BOOL hasAuthReqFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@end

#pragma mark - ManualAuthRsaReqData

typedef GPB_ENUM(ManualAuthRsaReqData_FieldNumber) {
  ManualAuthRsaReqData_FieldNumber_RandomEncryKey = 1,
  ManualAuthRsaReqData_FieldNumber_CliPubEcdhkey = 2,
  ManualAuthRsaReqData_FieldNumber_UserName = 3,
  ManualAuthRsaReqData_FieldNumber_Pwd = 4,
  ManualAuthRsaReqData_FieldNumber_Pwd2 = 5,
};

@interface ManualAuthRsaReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *cliPubEcdhkey;
/** Test to see if @c cliPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasCliPubEcdhkey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2;
/** Test to see if @c pwd2 has been set. */
@property(nonatomic, readwrite) BOOL hasPwd2;

@end

#pragma mark - MMClientCheckData

typedef GPB_ENUM(MMClientCheckData_FieldNumber) {
  MMClientCheckData_FieldNumber_EnType = 1,
  MMClientCheckData_FieldNumber_Tag2 = 2,
  MMClientCheckData_FieldNumber_Content = 3,
};

@interface MMClientCheckData : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *enType;
/** Test to see if @c enType has been set. */
@property(nonatomic, readwrite) BOOL hasEnType;

@property(nonatomic, readwrite) int32_t tag2;

@property(nonatomic, readwrite) BOOL hasTag2;
@property(nonatomic, readwrite, copy, null_resettable) NSData *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

@end

#pragma mark - ManualAuthAesReqData

typedef GPB_ENUM(ManualAuthAesReqData_FieldNumber) {
  ManualAuthAesReqData_FieldNumber_BaseRequest = 1,
  ManualAuthAesReqData_FieldNumber_BaseReqInfo = 2,
  ManualAuthAesReqData_FieldNumber_Imei = 3,
  ManualAuthAesReqData_FieldNumber_SoftType = 4,
  ManualAuthAesReqData_FieldNumber_BuiltinIpseq = 5,
  ManualAuthAesReqData_FieldNumber_ClientSeqId = 6,
  ManualAuthAesReqData_FieldNumber_ClientSeqIdsign = 7,
  ManualAuthAesReqData_FieldNumber_DeviceName = 8,
  ManualAuthAesReqData_FieldNumber_DeviceType = 9,
  ManualAuthAesReqData_FieldNumber_Language = 10,
  ManualAuthAesReqData_FieldNumber_TimeZone = 11,
  ManualAuthAesReqData_FieldNumber_Channel = 13,
  ManualAuthAesReqData_FieldNumber_TimeStamp = 14,
  ManualAuthAesReqData_FieldNumber_DeviceBrand = 15,
  ManualAuthAesReqData_FieldNumber_DeviceModel = 16,
  ManualAuthAesReqData_FieldNumber_Ostype = 17,
  ManualAuthAesReqData_FieldNumber_RealCountry = 18,
  ManualAuthAesReqData_FieldNumber_BundleId = 19,
  ManualAuthAesReqData_FieldNumber_AdSource = 20,
  ManualAuthAesReqData_FieldNumber_IphoneVer = 21,
  ManualAuthAesReqData_FieldNumber_InputType = 22,
  ManualAuthAesReqData_FieldNumber_ClientCheckData = 23,
};

@interface ManualAuthAesReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) BaseAuthReqInfo *baseReqInfo;
/** Test to see if @c baseReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasBaseReqInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

@property(nonatomic, readwrite) uint32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqIdsign;
/** Test to see if @c clientSeqIdsign has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqIdsign;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite) BOOL hasChannel;
@property(nonatomic, readwrite) uint32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceBrand;
/** Test to see if @c deviceBrand has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceBrand;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;
/** Test to see if @c deviceModel has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceModel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ostype;
/** Test to see if @c ostype has been set. */
@property(nonatomic, readwrite) BOOL hasOstype;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realCountry;
/** Test to see if @c realCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRealCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bundleId;
/** Test to see if @c bundleId has been set. */
@property(nonatomic, readwrite) BOOL hasBundleId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *adSource;
/** Test to see if @c adSource has been set. */
@property(nonatomic, readwrite) BOOL hasAdSource;

@property(nonatomic, readwrite, copy, null_resettable) NSString *iphoneVer;
/** Test to see if @c iphoneVer has been set. */
@property(nonatomic, readwrite) BOOL hasIphoneVer;

@property(nonatomic, readwrite) uint32_t inputType;

@property(nonatomic, readwrite) BOOL hasInputType;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *clientCheckData;
/** Test to see if @c clientCheckData has been set. */
@property(nonatomic, readwrite) BOOL hasClientCheckData;

@end

#pragma mark - ManualAuthRequest

typedef GPB_ENUM(ManualAuthRequest_FieldNumber) {
  ManualAuthRequest_FieldNumber_RsaReqData = 1,
  ManualAuthRequest_FieldNumber_AesReqData = 2,
};

@interface ManualAuthRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ManualAuthRsaReqData *rsaReqData;
/** Test to see if @c rsaReqData has been set. */
@property(nonatomic, readwrite) BOOL hasRsaReqData;

@property(nonatomic, readwrite, strong, null_resettable) ManualAuthAesReqData *aesReqData;
/** Test to see if @c aesReqData has been set. */
@property(nonatomic, readwrite) BOOL hasAesReqData;

@end

#pragma mark - AutoAuthRsaReqData

typedef GPB_ENUM(AutoAuthRsaReqData_FieldNumber) {
  AutoAuthRsaReqData_FieldNumber_AesEncryptKey = 2,
  AutoAuthRsaReqData_FieldNumber_CliPubEcdhkey = 3,
};

@interface AutoAuthRsaReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *aesEncryptKey;
/** Test to see if @c aesEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasAesEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *cliPubEcdhkey;
/** Test to see if @c cliPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasCliPubEcdhkey;

@end

#pragma mark - AutoAuthKey

typedef GPB_ENUM(AutoAuthKey_FieldNumber) {
  AutoAuthKey_FieldNumber_EncryptKey = 1,
  AutoAuthKey_FieldNumber_Key = 2,
};

@interface AutoAuthKey : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *encryptKey;
/** Test to see if @c encryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@end

#pragma mark - TimeZoneInfo

typedef GPB_ENUM(TimeZoneInfo_FieldNumber) {
  TimeZoneInfo_FieldNumber_A = 6,
  TimeZoneInfo_FieldNumber_B = 7,
};

@interface TimeZoneInfo : GPBMessage

@property(nonatomic, readwrite) int32_t a;

@property(nonatomic, readwrite) BOOL hasA;
@property(nonatomic, readwrite) int32_t b;

@property(nonatomic, readwrite) BOOL hasB;
@end

#pragma mark - AutoAuthAesReqData

typedef GPB_ENUM(AutoAuthAesReqData_FieldNumber) {
  AutoAuthAesReqData_FieldNumber_BaseRequest = 1,
  AutoAuthAesReqData_FieldNumber_BaseReqInfo = 2,
  AutoAuthAesReqData_FieldNumber_AutoAuthKey = 3,
  AutoAuthAesReqData_FieldNumber_Imei = 4,
  AutoAuthAesReqData_FieldNumber_SoftType = 5,
  AutoAuthAesReqData_FieldNumber_BuiltinIpseq = 6,
  AutoAuthAesReqData_FieldNumber_ClientSeqId = 7,
  AutoAuthAesReqData_FieldNumber_Signature = 8,
  AutoAuthAesReqData_FieldNumber_DeviceName = 9,
  AutoAuthAesReqData_FieldNumber_DeviceType = 10,
  AutoAuthAesReqData_FieldNumber_Language = 11,
  AutoAuthAesReqData_FieldNumber_TimeZone = 12,
  AutoAuthAesReqData_FieldNumber_Channel = 13,
  AutoAuthAesReqData_FieldNumber_ClientCheckData = 14,
};

@interface AutoAuthAesReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) BaseAuthReqInfo *baseReqInfo;
/** Test to see if @c baseReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasBaseReqInfo;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

@property(nonatomic, readwrite) uint32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** channel */
@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite) BOOL hasChannel;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *clientCheckData;
/** Test to see if @c clientCheckData has been set. */
@property(nonatomic, readwrite) BOOL hasClientCheckData;

@end

#pragma mark - AutoAuthRequest

typedef GPB_ENUM(AutoAuthRequest_FieldNumber) {
  AutoAuthRequest_FieldNumber_RsaReqData = 1,
  AutoAuthRequest_FieldNumber_AesReqData = 2,
};

@interface AutoAuthRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AutoAuthRsaReqData *rsaReqData;
/** Test to see if @c rsaReqData has been set. */
@property(nonatomic, readwrite) BOOL hasRsaReqData;

@property(nonatomic, readwrite, strong, null_resettable) AutoAuthAesReqData *aesReqData;
/** Test to see if @c aesReqData has been set. */
@property(nonatomic, readwrite) BOOL hasAesReqData;

@end

#pragma mark - NetworkSectResp

typedef GPB_ENUM(NetworkSectResp_FieldNumber) {
  NetworkSectResp_FieldNumber_NewHostList = 1,
  NetworkSectResp_FieldNumber_NetworkControl = 2,
  NetworkSectResp_FieldNumber_BuiltinIplist = 3,
};

@interface NetworkSectResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, strong, null_resettable) NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite, strong, null_resettable) BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@end

#pragma mark - AuthSectResp

typedef GPB_ENUM(AuthSectResp_FieldNumber) {
  AuthSectResp_FieldNumber_Uin = 1,
  AuthSectResp_FieldNumber_SvrPubEcdhkey = 2,
  AuthSectResp_FieldNumber_SessionKey = 3,
  AuthSectResp_FieldNumber_AutoAuthKey = 4,
  AuthSectResp_FieldNumber_WtloginRspBuffFlag = 5,
  AuthSectResp_FieldNumber_WtloginRspBuff = 6,
  AuthSectResp_FieldNumber_WtloginImgRespInfo = 7,
  AuthSectResp_FieldNumber_WxVerifyCodeRespInfo = 8,
  AuthSectResp_FieldNumber_CliDbencryptKey = 9,
  AuthSectResp_FieldNumber_CliDbencryptInfo = 10,
  AuthSectResp_FieldNumber_AuthKey = 11,
  AuthSectResp_FieldNumber_A2Key = 12,
  AuthSectResp_FieldNumber_ApplyBetaURL = 14,
  AuthSectResp_FieldNumber_ShowStyle = 15,
  AuthSectResp_FieldNumber_AuthTicket = 16,
  AuthSectResp_FieldNumber_NewVersion = 17,
  AuthSectResp_FieldNumber_UpdateFlag = 18,
  AuthSectResp_FieldNumber_AuthResultFlag = 19,
  AuthSectResp_FieldNumber_Fsurl = 20,
  AuthSectResp_FieldNumber_ServerTime = 22,
};

@interface AuthSectResp : GPBMessage

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *svrPubEcdhkey;
/** Test to see if @c svrPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasSvrPubEcdhkey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@property(nonatomic, readwrite) uint32_t wtloginRspBuffFlag;

@property(nonatomic, readwrite) BOOL hasWtloginRspBuffFlag;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *wtloginRspBuff;
/** Test to see if @c wtloginRspBuff has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginRspBuff;

@property(nonatomic, readwrite, strong, null_resettable) WTLoginImgRespInfo *wtloginImgRespInfo;
/** Test to see if @c wtloginImgRespInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWtloginImgRespInfo;

@property(nonatomic, readwrite, strong, null_resettable) WxVerifyCodeRespInfo *wxVerifyCodeRespInfo;
/** Test to see if @c wxVerifyCodeRespInfo has been set. */
@property(nonatomic, readwrite) BOOL hasWxVerifyCodeRespInfo;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptKey;
/** Test to see if @c cliDbencryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptInfo;
/** Test to see if @c cliDbencryptInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authKey;
/** Test to see if @c authKey has been set. */
@property(nonatomic, readwrite) BOOL hasAuthKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *a2Key;
/** Test to see if @c a2Key has been set. */
@property(nonatomic, readwrite) BOOL hasA2Key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *applyBetaURL;
/** Test to see if @c applyBetaURL has been set. */
@property(nonatomic, readwrite) BOOL hasApplyBetaURL;

@property(nonatomic, readwrite, strong, null_resettable) ShowStyleKey *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authTicket;
/** Test to see if @c authTicket has been set. */
@property(nonatomic, readwrite) BOOL hasAuthTicket;

@property(nonatomic, readwrite) uint32_t newVersion;

@property(nonatomic, readwrite) BOOL hasNewVersion;
@property(nonatomic, readwrite) uint32_t updateFlag;

@property(nonatomic, readwrite) BOOL hasUpdateFlag;
@property(nonatomic, readwrite) uint32_t authResultFlag;

@property(nonatomic, readwrite) BOOL hasAuthResultFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fsurl;
/** Test to see if @c fsurl has been set. */
@property(nonatomic, readwrite) BOOL hasFsurl;

@property(nonatomic, readwrite) int32_t serverTime;

@property(nonatomic, readwrite) BOOL hasServerTime;
@end

#pragma mark - AcctSectResp

typedef GPB_ENUM(AcctSectResp_FieldNumber) {
  AcctSectResp_FieldNumber_UserName = 1,
  AcctSectResp_FieldNumber_NickName = 2,
  AcctSectResp_FieldNumber_BindUin = 3,
  AcctSectResp_FieldNumber_BindEmail = 4,
  AcctSectResp_FieldNumber_BindMobile = 5,
  AcctSectResp_FieldNumber_Alias = 6,
  AcctSectResp_FieldNumber_Status = 8,
  AcctSectResp_FieldNumber_PluginFlag = 9,
  AcctSectResp_FieldNumber_RegType = 10,
  AcctSectResp_FieldNumber_DeviceInfoXml = 11,
  AcctSectResp_FieldNumber_SafeDevice = 12,
  AcctSectResp_FieldNumber_OfficialUserName = 13,
  AcctSectResp_FieldNumber_OfficialNickName = 14,
  AcctSectResp_FieldNumber_PushMailStatus = 15,
  AcctSectResp_FieldNumber_Fsurl = 16,
};

@interface AcctSectResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindMobile;
/** Test to see if @c bindMobile has been set. */
@property(nonatomic, readwrite) BOOL hasBindMobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) uint32_t pluginFlag;

@property(nonatomic, readwrite) BOOL hasPluginFlag;
@property(nonatomic, readwrite) uint32_t regType;

@property(nonatomic, readwrite) BOOL hasRegType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceInfoXml;
/** Test to see if @c deviceInfoXml has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceInfoXml;

@property(nonatomic, readwrite) uint32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
@property(nonatomic, readwrite, copy, null_resettable) NSString *officialUserName;
/** Test to see if @c officialUserName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *officialNickName;
/** Test to see if @c officialNickName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialNickName;

@property(nonatomic, readwrite) uint32_t pushMailStatus;

@property(nonatomic, readwrite) BOOL hasPushMailStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fsurl;
/** Test to see if @c fsurl has been set. */
@property(nonatomic, readwrite) BOOL hasFsurl;

@end

#pragma mark - UnifyAuthResponse

typedef GPB_ENUM(UnifyAuthResponse_FieldNumber) {
  UnifyAuthResponse_FieldNumber_BaseResponse = 1,
  UnifyAuthResponse_FieldNumber_UnifyAuthSectFlag = 2,
  UnifyAuthResponse_FieldNumber_AuthSectResp = 3,
  UnifyAuthResponse_FieldNumber_AcctSectResp = 4,
  UnifyAuthResponse_FieldNumber_NetworkSectResp = 5,
};

@interface UnifyAuthResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) uint32_t unifyAuthSectFlag;

@property(nonatomic, readwrite) BOOL hasUnifyAuthSectFlag;
@property(nonatomic, readwrite, strong, null_resettable) AuthSectResp *authSectResp;
/** Test to see if @c authSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasAuthSectResp;

@property(nonatomic, readwrite, strong, null_resettable) AcctSectResp *acctSectResp;
/** Test to see if @c acctSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasAcctSectResp;

@property(nonatomic, readwrite, strong, null_resettable) NetworkSectResp *networkSectResp;
/** Test to see if @c networkSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkSectResp;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
