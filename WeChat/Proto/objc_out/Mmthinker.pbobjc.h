// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmthinker.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BaseRequest;
@class BaseResponse;
@class CheckResUpdateRequest;
@class EncryptKey;
@class ResID;
@class ResIDWrap;
@class Resource;
@class ResourceMeta;
@class ResourceType;
@class Resource_ResourceKey;
@class SKBuiltinBuffer_t;
@class SubTypeVector;
@class TinkerCondition;
@class TinkerPatchNode;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MmthinkerRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MmthinkerRoot : GPBRootObject
@end

#pragma mark - SubTypeVector

typedef GPB_ENUM(SubTypeVector_FieldNumber) {
  SubTypeVector_FieldNumber_SubType = 1,
  SubTypeVector_FieldNumber_KeyVersion = 2,
  SubTypeVector_FieldNumber_ResVersion = 3,
  SubTypeVector_FieldNumber_Eid = 4,
};

@interface SubTypeVector : GPBMessage

@property(nonatomic, readwrite) int32_t subType;

@property(nonatomic, readwrite) BOOL hasSubType;
@property(nonatomic, readwrite) int32_t keyVersion;

@property(nonatomic, readwrite) BOOL hasKeyVersion;
@property(nonatomic, readwrite) int32_t resVersion;

@property(nonatomic, readwrite) BOOL hasResVersion;
@property(nonatomic, readwrite) int32_t eid;

@property(nonatomic, readwrite) BOOL hasEid;
@end

#pragma mark - ResID

typedef GPB_ENUM(ResID_FieldNumber) {
  ResID_FieldNumber_Type = 1,
  ResID_FieldNumber_SubTypeVectorArray = 2,
};

@interface ResID : GPBMessage

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SubTypeVector*> *subTypeVectorArray;
/** The number of items in @c subTypeVectorArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger subTypeVectorArray_Count;

@end

#pragma mark - ResIDWrap

typedef GPB_ENUM(ResIDWrap_FieldNumber) {
  ResIDWrap_FieldNumber_ResIdArray = 1,
};

@interface ResIDWrap : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ResID*> *resIdArray;
/** The number of items in @c resIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resIdArray_Count;

@end

#pragma mark - CheckResUpdateRequest

typedef GPB_ENUM(CheckResUpdateRequest_FieldNumber) {
  CheckResUpdateRequest_FieldNumber_BaseRequest = 1,
  CheckResUpdateRequest_FieldNumber_Wrap = 2,
};

/**
 * cgi: 721
 **/
@interface CheckResUpdateRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) ResIDWrap *wrap;
/** Test to see if @c wrap has been set. */
@property(nonatomic, readwrite) BOOL hasWrap;

@end

#pragma mark - CheckResUpdateResponse

typedef GPB_ENUM(CheckResUpdateResponse_FieldNumber) {
  CheckResUpdateResponse_FieldNumber_BaseResponse = 1,
};

@interface CheckResUpdateResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@end

#pragma mark - EncryptKey

typedef GPB_ENUM(EncryptKey_FieldNumber) {
  EncryptKey_FieldNumber_Key = 1,
};

@interface EncryptKey : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@end

#pragma mark - SecEncryptCheckResUpdateRequest

typedef GPB_ENUM(SecEncryptCheckResUpdateRequest_FieldNumber) {
  SecEncryptCheckResUpdateRequest_FieldNumber_AesEncryptKey = 1,
  SecEncryptCheckResUpdateRequest_FieldNumber_Req = 2,
};

/**
 * sec
 **/
@interface SecEncryptCheckResUpdateRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) EncryptKey *aesEncryptKey;
/** Test to see if @c aesEncryptKey has been set. */
@property(nonatomic, readwrite) BOOL hasAesEncryptKey;

@property(nonatomic, readwrite, strong, null_resettable) CheckResUpdateRequest *req;
/** Test to see if @c req has been set. */
@property(nonatomic, readwrite) BOOL hasReq;

@end

#pragma mark - ResourceMeta

typedef GPB_ENUM(ResourceMeta_FieldNumber) {
  ResourceMeta_FieldNumber_Md5 = 1,
  ResourceMeta_FieldNumber_ResVersion = 2,
  ResourceMeta_FieldNumber_URL = 3,
  ResourceMeta_FieldNumber_FileFlag = 4,
  ResourceMeta_FieldNumber_Data_p = 6,
  ResourceMeta_FieldNumber_OriginalMd5 = 7,
  ResourceMeta_FieldNumber_FileSize = 8,
};

@interface ResourceMeta : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *md5;
/** Test to see if @c md5 has been set. */
@property(nonatomic, readwrite) BOOL hasMd5;

@property(nonatomic, readwrite) uint32_t resVersion;

@property(nonatomic, readwrite) BOOL hasResVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite) uint32_t fileFlag;

@property(nonatomic, readwrite) BOOL hasFileFlag;
/**        eccmd5SignatureList = 5; */
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *originalMd5;
/** Test to see if @c originalMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasOriginalMd5;

@property(nonatomic, readwrite) uint32_t fileSize;

@property(nonatomic, readwrite) BOOL hasFileSize;
@end

#pragma mark - Resource

typedef GPB_ENUM(Resource_FieldNumber) {
  Resource_FieldNumber_SubType = 1,
  Resource_FieldNumber_Info = 2,
  Resource_FieldNumber_Key = 3,
  Resource_FieldNumber_Oper = 4,
  Resource_FieldNumber_ReportId = 5,
  Resource_FieldNumber_SampleId = 6,
  Resource_FieldNumber_ExpireTime = 7,
  Resource_FieldNumber_RetryTime = 8,
  Resource_FieldNumber_Eid = 9,
  Resource_FieldNumber_DownloadNetType = 10,
  Resource_FieldNumber_RetryInterval = 11,
  Resource_FieldNumber_Priority = 12,
};

@interface Resource : GPBMessage

@property(nonatomic, readwrite) uint32_t subType;

@property(nonatomic, readwrite) BOOL hasSubType;
@property(nonatomic, readwrite, strong, null_resettable) ResourceMeta *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@property(nonatomic, readwrite, strong, null_resettable) Resource_ResourceKey *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite) uint32_t oper;

@property(nonatomic, readwrite) BOOL hasOper;
@property(nonatomic, readwrite) uint32_t reportId;

@property(nonatomic, readwrite) BOOL hasReportId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *sampleId;
/** Test to see if @c sampleId has been set. */
@property(nonatomic, readwrite) BOOL hasSampleId;

@property(nonatomic, readwrite) uint32_t expireTime;

@property(nonatomic, readwrite) BOOL hasExpireTime;
@property(nonatomic, readwrite) uint32_t retryTime;

@property(nonatomic, readwrite) BOOL hasRetryTime;
@property(nonatomic, readwrite) uint32_t eid;

@property(nonatomic, readwrite) BOOL hasEid;
@property(nonatomic, readwrite) uint32_t downloadNetType;

@property(nonatomic, readwrite) BOOL hasDownloadNetType;
@property(nonatomic, readwrite) uint32_t retryInterval;

@property(nonatomic, readwrite) BOOL hasRetryInterval;
@property(nonatomic, readwrite) uint32_t priority;

@property(nonatomic, readwrite) BOOL hasPriority;
@end

#pragma mark - Resource_ResourceKey

typedef GPB_ENUM(Resource_ResourceKey_FieldNumber) {
  Resource_ResourceKey_FieldNumber_KeyVersion = 1,
  Resource_ResourceKey_FieldNumber_ResKey = 2,
};

@interface Resource_ResourceKey : GPBMessage

@property(nonatomic, readwrite) uint32_t keyVersion;

@property(nonatomic, readwrite) BOOL hasKeyVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *resKey;
/** Test to see if @c resKey has been set. */
@property(nonatomic, readwrite) BOOL hasResKey;

@end

#pragma mark - ResourceType

typedef GPB_ENUM(ResourceType_FieldNumber) {
  ResourceType_FieldNumber_Type = 1,
  ResourceType_FieldNumber_ResourcesArray = 2,
};

@interface ResourceType : GPBMessage

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Resource*> *resourcesArray;
/** The number of items in @c resourcesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resourcesArray_Count;

@end

#pragma mark - SecEncryptCheckResUpdateResponse

typedef GPB_ENUM(SecEncryptCheckResUpdateResponse_FieldNumber) {
  SecEncryptCheckResUpdateResponse_FieldNumber_BaseResponse = 1,
  SecEncryptCheckResUpdateResponse_FieldNumber_ResourceTypeArray = 2,
};

@interface SecEncryptCheckResUpdateResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ResourceType*> *resourceTypeArray;
/** The number of items in @c resourceTypeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resourceTypeArray_Count;

@end

#pragma mark - TinkerCondition

typedef GPB_ENUM(TinkerCondition_FieldNumber) {
  TinkerCondition_FieldNumber_Key = 1,
  TinkerCondition_FieldNumber_Value = 2,
  TinkerCondition_FieldNumber_Op = 3,
};

@interface TinkerCondition : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

/**    repeated values = 4; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *op;
/** Test to see if @c op has been set. */
@property(nonatomic, readwrite) BOOL hasOp;

@end

#pragma mark - CheckTinkerUpdateRequest

typedef GPB_ENUM(CheckTinkerUpdateRequest_FieldNumber) {
  CheckTinkerUpdateRequest_FieldNumber_Baseid = 1,
  CheckTinkerUpdateRequest_FieldNumber_Patchid = 2,
  CheckTinkerUpdateRequest_FieldNumber_ConditionArray = 3,
};

@interface CheckTinkerUpdateRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *baseid;
/** Test to see if @c baseid has been set. */
@property(nonatomic, readwrite) BOOL hasBaseid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *patchid;
/** Test to see if @c patchid has been set. */
@property(nonatomic, readwrite) BOOL hasPatchid;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TinkerCondition*> *conditionArray;
/** The number of items in @c conditionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger conditionArray_Count;

@end

#pragma mark - TinkerPatchNode

typedef GPB_ENUM(TinkerPatchNode_FieldNumber) {
  TinkerPatchNode_FieldNumber_Patchid = 1,
  TinkerPatchNode_FieldNumber_State = 2,
  TinkerPatchNode_FieldNumber_Packagetype = 4,
  TinkerPatchNode_FieldNumber_Network = 5,
  TinkerPatchNode_FieldNumber_Info = 6,
  TinkerPatchNode_FieldNumber_Maxdown = 7,
  TinkerPatchNode_FieldNumber_Releaseall = 9,
};

@interface TinkerPatchNode : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *patchid;
/** Test to see if @c patchid has been set. */
@property(nonatomic, readwrite) BOOL hasPatchid;

@property(nonatomic, readwrite) uint32_t state;

@property(nonatomic, readwrite) BOOL hasState;
@property(nonatomic, readwrite) uint32_t packagetype;

@property(nonatomic, readwrite) BOOL hasPackagetype;
@property(nonatomic, readwrite) uint32_t network;

@property(nonatomic, readwrite) BOOL hasNetwork;
@property(nonatomic, readwrite, strong, null_resettable) ResourceMeta *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@property(nonatomic, readwrite) uint32_t maxdown;

@property(nonatomic, readwrite) BOOL hasMaxdown;
/**    repeated custom = 8; */
@property(nonatomic, readwrite) BOOL releaseall;

@property(nonatomic, readwrite) BOOL hasReleaseall;
@end

#pragma mark - CheckTinkerUpdateResponse

typedef GPB_ENUM(CheckTinkerUpdateResponse_FieldNumber) {
  CheckTinkerUpdateResponse_FieldNumber_BaseResponse = 1,
  CheckTinkerUpdateResponse_FieldNumber_Patch = 2,
};

@interface CheckTinkerUpdateResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) TinkerPatchNode *patch;
/** Test to see if @c patch has been set. */
@property(nonatomic, readwrite) BOOL hasPatch;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
