// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mm.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BaseAuthReqInfo;
@class BaseRequest;
@class BaseResponse;
@class CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg;
@class CheckResUpdateRequest_ResID;
@class CheckResUpdateRequest_ResID_SubTypeVector;
@class CmdItem;
@class ECDHKey;
@class ManualAuthAesReqData;
@class ManualAuthRsaReqData;
@class MicroMsgRequestNew;
@class MicroMsgResponseNew;
@class Msg_RawContent;
@class NewSyncResponse_CmdList;
@class SKBuiltinBuffer_t;
@class SKBuiltinString_t;
@class SnsObject;
@class SnsTimeLineResponse_SnsServerConfig;
@class UnifyAuthResponse_AcctSectResp;
@class UnifyAuthResponse_AuthSectResp;
@class UnifyAuthResponse_AuthSectResp_ShowStyleKey;
@class UnifyAuthResponse_NetworkSectResp;
@class UnifyAuthResponse_NetworkSectResp_BuiltinIPList;
@class UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP;
@class UnifyAuthResponse_NetworkSectResp_HostList;
@class UnifyAuthResponse_NetworkSectResp_HostList_Host;
@class UnifyAuthResponse_NetworkSectResp_NetworkControl;
@class contact_info_BeiZhu;
@class contact_info_GroupMemberList;
@class contact_info_GroupMemberList_MemberInfo;
@class contact_info_NickName;
@class contact_info_PY_SHORT;
@class contact_info_QuanPin;
@class contact_info_REAL_PY_SHORT;
@class contact_info_REAL_QuanPin;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MmRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MmRoot : GPBRootObject
@end

#pragma mark - SKBuiltinBuffer_t

typedef GPB_ENUM(SKBuiltinBuffer_t_FieldNumber) {
  SKBuiltinBuffer_t_FieldNumber_ILen = 1,
  SKBuiltinBuffer_t_FieldNumber_Buffer = 2,
};

@interface SKBuiltinBuffer_t : GPBMessage

@property(nonatomic, readwrite) int32_t iLen;

@property(nonatomic, readwrite) BOOL hasILen;
@property(nonatomic, readwrite, copy, null_resettable) NSData *buffer;
/** Test to see if @c buffer has been set. */
@property(nonatomic, readwrite) BOOL hasBuffer;

@end

#pragma mark - SKBuiltinString_t

typedef GPB_ENUM(SKBuiltinString_t_FieldNumber) {
  SKBuiltinString_t_FieldNumber_String = 1,
};

@interface SKBuiltinString_t : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *string;
/** Test to see if @c string has been set. */
@property(nonatomic, readwrite) BOOL hasString;

@end

#pragma mark - BaseRequest

typedef GPB_ENUM(BaseRequest_FieldNumber) {
  BaseRequest_FieldNumber_SessionKey = 1,
  BaseRequest_FieldNumber_Uin = 2,
  BaseRequest_FieldNumber_DeviceId = 3,
  BaseRequest_FieldNumber_ClientVersion = 4,
  BaseRequest_FieldNumber_DeviceType = 5,
  BaseRequest_FieldNumber_Scene = 6,
};

@interface BaseRequest : GPBMessage

/** 解密服务器返回封包时使用的aeskey */
@property(nonatomic, readwrite, copy, null_resettable) NSData *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite) int64_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
/** 手机guid长度16,这里取前15字节,以'\\0'结尾 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *deviceId;
/** Test to see if @c deviceId has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceId;

@property(nonatomic, readwrite) int32_t clientVersion;

@property(nonatomic, readwrite) BOOL hasClientVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

@property(nonatomic, readwrite) int32_t scene;

@property(nonatomic, readwrite) BOOL hasScene;
@end

#pragma mark - BaseResponse

typedef GPB_ENUM(BaseResponse_FieldNumber) {
  BaseResponse_FieldNumber_Ret = 1,
  BaseResponse_FieldNumber_ErrMsg = 2,
};

@interface BaseResponse : GPBMessage

/** 错误码 */
@property(nonatomic, readwrite) int32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
/** 错误信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *errMsg;
/** Test to see if @c errMsg has been set. */
@property(nonatomic, readwrite) BOOL hasErrMsg;

@end

#pragma mark - GetLoginQRCodeRequest

typedef GPB_ENUM(GetLoginQRCodeRequest_FieldNumber) {
  GetLoginQRCodeRequest_FieldNumber_BaseRequest = 1,
  GetLoginQRCodeRequest_FieldNumber_RandomEncryKey = 2,
  GetLoginQRCodeRequest_FieldNumber_Opcode = 3,
  GetLoginQRCodeRequest_FieldNumber_DeviceName = 4,
  GetLoginQRCodeRequest_FieldNumber_UserName = 5,
  GetLoginQRCodeRequest_FieldNumber_HardwareExtra = 6,
  GetLoginQRCodeRequest_FieldNumber_SoftType = 7,
  GetLoginQRCodeRequest_FieldNumber_ExtDevLoginType = 8,
  GetLoginQRCodeRequest_FieldNumber_MsgContextPubKey = 9,
};

/**
 * QRCode获取
 **/
@interface GetLoginQRCodeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

/** iPad 16位 iMac 184位 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

/** 0 */
@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
/** iMac "iMac" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

/** iMac 0, */
@property(nonatomic, readwrite) int32_t hardwareExtra;

@property(nonatomic, readwrite) BOOL hasHardwareExtra;
@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

/** 0 */
@property(nonatomic, readwrite) int32_t extDevLoginType;

@property(nonatomic, readwrite) BOOL hasExtDevLoginType;
/** iMac */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *msgContextPubKey;
/** Test to see if @c msgContextPubKey has been set. */
@property(nonatomic, readwrite) BOOL hasMsgContextPubKey;

@end

#pragma mark - GetLoginQRCodeResponse

typedef GPB_ENUM(GetLoginQRCodeResponse_FieldNumber) {
  GetLoginQRCodeResponse_FieldNumber_BaseResponse = 1,
  GetLoginQRCodeResponse_FieldNumber_Qrcode = 2,
  GetLoginQRCodeResponse_FieldNumber_Uuid = 3,
  GetLoginQRCodeResponse_FieldNumber_CheckTime = 4,
  GetLoginQRCodeResponse_FieldNumber_NotifyKey = 5,
  GetLoginQRCodeResponse_FieldNumber_ExpiredTime = 6,
  GetLoginQRCodeResponse_FieldNumber_BlueToothBroadCastUuid = 7,
  GetLoginQRCodeResponse_FieldNumber_BlueToothBroadCastContent = 8,
};

@interface GetLoginQRCodeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *qrcode;
/** Test to see if @c qrcode has been set. */
@property(nonatomic, readwrite) BOOL hasQrcode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) int32_t checkTime;

@property(nonatomic, readwrite) BOOL hasCheckTime;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *notifyKey;
/** Test to see if @c notifyKey has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyKey;

@property(nonatomic, readwrite) int32_t expiredTime;

@property(nonatomic, readwrite) BOOL hasExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *blueToothBroadCastUuid;
/** Test to see if @c blueToothBroadCastUuid has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastUuid;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *blueToothBroadCastContent;
/** Test to see if @c blueToothBroadCastContent has been set. */
@property(nonatomic, readwrite) BOOL hasBlueToothBroadCastContent;

@end

#pragma mark - CheckLoginQRCodeRequest

typedef GPB_ENUM(CheckLoginQRCodeRequest_FieldNumber) {
  CheckLoginQRCodeRequest_FieldNumber_BaseRequest = 1,
  CheckLoginQRCodeRequest_FieldNumber_RandomEncryKey = 2,
  CheckLoginQRCodeRequest_FieldNumber_Uuid = 3,
  CheckLoginQRCodeRequest_FieldNumber_TimeStamp = 4,
  CheckLoginQRCodeRequest_FieldNumber_Opcode = 5,
};

/**
 * QRCode Check
 **/
@interface CheckLoginQRCodeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) int32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - CheckLoginQRCodeResponse

typedef GPB_ENUM(CheckLoginQRCodeResponse_FieldNumber) {
  CheckLoginQRCodeResponse_FieldNumber_BaseResponse = 1,
  CheckLoginQRCodeResponse_FieldNumber_NotifyPkg = 3,
};

@interface CheckLoginQRCodeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, strong, null_resettable) CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg *notifyPkg;
/** Test to see if @c notifyPkg has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyPkg;

@end

#pragma mark - CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg

typedef GPB_ENUM(CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_FieldNumber) {
  CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_FieldNumber_NotifyData = 1,
  CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_FieldNumber_Opcode = 2,
};

@interface CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg : GPBMessage

/** 是bytes,需notifykey不解压aes解密一次,解密后再序列化成下面的对象 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *notifyData;
/** Test to see if @c notifyData has been set. */
@property(nonatomic, readwrite) BOOL hasNotifyData;

@property(nonatomic, readwrite) int32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - NotifyMsg

typedef GPB_ENUM(NotifyMsg_FieldNumber) {
  NotifyMsg_FieldNumber_Uuid = 1,
  NotifyMsg_FieldNumber_State = 2,
  NotifyMsg_FieldNumber_Wxid = 3,
  NotifyMsg_FieldNumber_Wxnewpass = 4,
  NotifyMsg_FieldNumber_Avatar = 5,
  NotifyMsg_FieldNumber_PushLoginURLExpiredTime = 6,
  NotifyMsg_FieldNumber_NickName = 7,
  NotifyMsg_FieldNumber_EffectiveTime = 8,
  NotifyMsg_FieldNumber_T10 = 10,
  NotifyMsg_FieldNumber_Devices = 11,
};

@interface NotifyMsg : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) int32_t state;

@property(nonatomic, readwrite) BOOL hasState;
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxid;
/** Test to see if @c wxid has been set. */
@property(nonatomic, readwrite) BOOL hasWxid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *wxnewpass;
/** Test to see if @c wxnewpass has been set. */
@property(nonatomic, readwrite) BOOL hasWxnewpass;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

@property(nonatomic, readwrite) int32_t pushLoginURLExpiredTime;

@property(nonatomic, readwrite) BOOL hasPushLoginURLExpiredTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) int32_t effectiveTime;

@property(nonatomic, readwrite) BOOL hasEffectiveTime;
@property(nonatomic, readwrite) int32_t t10;

@property(nonatomic, readwrite) BOOL hasT10;
@property(nonatomic, readwrite, copy, null_resettable) NSString *devices;
/** Test to see if @c devices has been set. */
@property(nonatomic, readwrite) BOOL hasDevices;

@end

#pragma mark - ECDHKey

typedef GPB_ENUM(ECDHKey_FieldNumber) {
  ECDHKey_FieldNumber_Nid = 1,
  ECDHKey_FieldNumber_Key = 2,
};

@interface ECDHKey : GPBMessage

/** 椭圆曲线类型 */
@property(nonatomic, readwrite) int32_t nid;

@property(nonatomic, readwrite) BOOL hasNid;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@end

#pragma mark - ManualAuthRsaReqData

typedef GPB_ENUM(ManualAuthRsaReqData_FieldNumber) {
  ManualAuthRsaReqData_FieldNumber_RandomEncryKey = 1,
  ManualAuthRsaReqData_FieldNumber_CliPubEcdhkey = 2,
  ManualAuthRsaReqData_FieldNumber_UserName = 3,
  ManualAuthRsaReqData_FieldNumber_Pwd = 4,
  ManualAuthRsaReqData_FieldNumber_Pwd2 = 5,
};

/**
 * 登录请求--账号信息
 **/
@interface ManualAuthRsaReqData : GPBMessage

/** 仅用于本次登录请求,后续通讯使用的aeskey根据服务器返回的数据做ECDH生成 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *randomEncryKey;
/** Test to see if @c randomEncryKey has been set. */
@property(nonatomic, readwrite) BOOL hasRandomEncryKey;

@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *cliPubEcdhkey;
/** Test to see if @c cliPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasCliPubEcdhkey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/** Test to see if @c pwd has been set. */
@property(nonatomic, readwrite) BOOL hasPwd;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2;
/** Test to see if @c pwd2 has been set. */
@property(nonatomic, readwrite) BOOL hasPwd2;

@end

#pragma mark - BaseAuthReqInfo

typedef GPB_ENUM(BaseAuthReqInfo_FieldNumber) {
  BaseAuthReqInfo_FieldNumber_CliDbencryptInfo = 5,
  BaseAuthReqInfo_FieldNumber_AuthReqFlag = 7,
};

@interface BaseAuthReqInfo : GPBMessage

/** iMac 第一次登陆没有数据，后续登陆会取一个数据。 */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cliDbencryptInfo;
/** Test to see if @c cliDbencryptInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCliDbencryptInfo;

/** iPad "" iMac 不需要 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authReqFlag;
/** Test to see if @c authReqFlag has been set. */
@property(nonatomic, readwrite) BOOL hasAuthReqFlag;

@end

#pragma mark - ManualAuthAesReqData

typedef GPB_ENUM(ManualAuthAesReqData_FieldNumber) {
  ManualAuthAesReqData_FieldNumber_BaseRequest = 1,
  ManualAuthAesReqData_FieldNumber_BaseReqInfo = 2,
  ManualAuthAesReqData_FieldNumber_Imei = 3,
  ManualAuthAesReqData_FieldNumber_SoftType = 4,
  ManualAuthAesReqData_FieldNumber_BuiltinIpseq = 5,
  ManualAuthAesReqData_FieldNumber_ClientSeqId = 6,
  ManualAuthAesReqData_FieldNumber_DeviceName = 8,
  ManualAuthAesReqData_FieldNumber_DeviceType = 9,
  ManualAuthAesReqData_FieldNumber_Language = 10,
  ManualAuthAesReqData_FieldNumber_TimeZone = 11,
  ManualAuthAesReqData_FieldNumber_Channel = 13,
  ManualAuthAesReqData_FieldNumber_TimeStamp = 14,
  ManualAuthAesReqData_FieldNumber_DeviceBrand = 15,
  ManualAuthAesReqData_FieldNumber_Ostype = 17,
  ManualAuthAesReqData_FieldNumber_RealCountry = 18,
  ManualAuthAesReqData_FieldNumber_BundleId = 19,
  ManualAuthAesReqData_FieldNumber_AdSource = 20,
  ManualAuthAesReqData_FieldNumber_IphoneVer = 21,
  ManualAuthAesReqData_FieldNumber_InputType = 22,
  ManualAuthAesReqData_FieldNumber_ClientCheckData = 23,
};

/**
 * 登录请求--设备信息
 **/
@interface ManualAuthAesReqData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, strong, null_resettable) BaseAuthReqInfo *baseReqInfo;
/** Test to see if @c baseReqInfo has been set. */
@property(nonatomic, readwrite) BOOL hasBaseReqInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

/** iPad: <softtype><k3>11.4.1</k3><k9>iPad</k9></softtype> ，iMac不需要此字段 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *softType;
/** Test to see if @c softType has been set. */
@property(nonatomic, readwrite) BOOL hasSoftType;

/** 0 */
@property(nonatomic, readwrite) int32_t builtinIpseq;

@property(nonatomic, readwrite) BOOL hasBuiltinIpseq;
/** iPad: dd09ae95fe48164451be954cd1871cb7-1537165222, iMac: "" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSeqId;
/** Test to see if @c clientSeqId has been set. */
@property(nonatomic, readwrite) BOOL hasClientSeqId;

/** iPad:ccc iPad, iMac: ray的iMac */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

/** iPad iMac18,2 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

/** zh_CN */
@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

/** 8.00 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** iPad:3d  iMac:0 */
@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite) BOOL hasChannel;
/** 1537178341 */
@property(nonatomic, readwrite) int32_t timeStamp;

@property(nonatomic, readwrite) BOOL hasTimeStamp;
/** Apple */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceBrand;
/** Test to see if @c deviceBrand has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceBrand;

/** iMac "Version 10.13.6 (Build 17G65)" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ostype;
/** Test to see if @c ostype has been set. */
@property(nonatomic, readwrite) BOOL hasOstype;

/** CN */
@property(nonatomic, readwrite, copy, null_resettable) NSString *realCountry;
/** Test to see if @c realCountry has been set. */
@property(nonatomic, readwrite) BOOL hasRealCountry;

/** iPad:com.tencent.xin , iMac:com.tencent.xinWeChat */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bundleId;
/** Test to see if @c bundleId has been set. */
@property(nonatomic, readwrite) BOOL hasBundleId;

/** iPad:"AAA7AE28-7620-431D-8B4C-7FB4F67AA45E", iMad: "" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adSource;
/** Test to see if @c adSource has been set. */
@property(nonatomic, readwrite) BOOL hasAdSource;

/** iPad:iPad4,4 , iMac:iMac18,2 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iphoneVer;
/** Test to see if @c iphoneVer has been set. */
@property(nonatomic, readwrite) BOOL hasIphoneVer;

/** 2 */
@property(nonatomic, readwrite) int32_t inputType;

@property(nonatomic, readwrite) BOOL hasInputType;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *clientCheckData;
/** Test to see if @c clientCheckData has been set. */
@property(nonatomic, readwrite) BOOL hasClientCheckData;

@end

#pragma mark - ManualAuthRequest

typedef GPB_ENUM(ManualAuthRequest_FieldNumber) {
  ManualAuthRequest_FieldNumber_RsaReqData = 1,
  ManualAuthRequest_FieldNumber_AesReqData = 2,
};

@interface ManualAuthRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ManualAuthRsaReqData *rsaReqData;
/** Test to see if @c rsaReqData has been set. */
@property(nonatomic, readwrite) BOOL hasRsaReqData;

@property(nonatomic, readwrite, strong, null_resettable) ManualAuthAesReqData *aesReqData;
/** Test to see if @c aesReqData has been set. */
@property(nonatomic, readwrite) BOOL hasAesReqData;

@end

#pragma mark - UnifyAuthResponse

typedef GPB_ENUM(UnifyAuthResponse_FieldNumber) {
  UnifyAuthResponse_FieldNumber_BaseResponse = 1,
  UnifyAuthResponse_FieldNumber_UnifyAuthSectFlag = 2,
  UnifyAuthResponse_FieldNumber_AuthSectResp = 3,
  UnifyAuthResponse_FieldNumber_AcctSectResp = 4,
  UnifyAuthResponse_FieldNumber_NetworkSectResp = 5,
};

/**
 * 登录结果
 **/
@interface UnifyAuthResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t unifyAuthSectFlag;

@property(nonatomic, readwrite) BOOL hasUnifyAuthSectFlag;
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_AuthSectResp *authSectResp;
/** Test to see if @c authSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasAuthSectResp;

/** 登录成功后返回账号信息 */
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_AcctSectResp *acctSectResp;
/** Test to see if @c acctSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasAcctSectResp;

/** dns信息 */
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_NetworkSectResp *networkSectResp;
/** Test to see if @c networkSectResp has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkSectResp;

@end

#pragma mark - UnifyAuthResponse_AuthSectResp

typedef GPB_ENUM(UnifyAuthResponse_AuthSectResp_FieldNumber) {
  UnifyAuthResponse_AuthSectResp_FieldNumber_Uin = 1,
  UnifyAuthResponse_AuthSectResp_FieldNumber_SvrPubEcdhkey = 2,
  UnifyAuthResponse_AuthSectResp_FieldNumber_SessionKey = 3,
  UnifyAuthResponse_AuthSectResp_FieldNumber_AutoAuthKey = 4,
  UnifyAuthResponse_AuthSectResp_FieldNumber_WtloginRspBuffFlag = 5,
  UnifyAuthResponse_AuthSectResp_FieldNumber_ShowStyle = 15,
  UnifyAuthResponse_AuthSectResp_FieldNumber_SmsTicket = 16,
  UnifyAuthResponse_AuthSectResp_FieldNumber_AuthResultFlag = 19,
  UnifyAuthResponse_AuthSectResp_FieldNumber_Fsurl = 20,
  UnifyAuthResponse_AuthSectResp_FieldNumber_ServerTime = 22,
};

@interface UnifyAuthResponse_AuthSectResp : GPBMessage

@property(nonatomic, readwrite) int64_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite, strong, null_resettable) ECDHKey *svrPubEcdhkey;
/** Test to see if @c svrPubEcdhkey has been set. */
@property(nonatomic, readwrite) BOOL hasSvrPubEcdhkey;

/** 加密的sessionKey 需要使用ECDH握手后的密钥做AES解密得到最终长16字节的aeskey */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *sessionKey;
/** Test to see if @c sessionKey has been set. */
@property(nonatomic, readwrite) BOOL hasSessionKey;

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *autoAuthKey;
/** Test to see if @c autoAuthKey has been set. */
@property(nonatomic, readwrite) BOOL hasAutoAuthKey;

@property(nonatomic, readwrite) int32_t wtloginRspBuffFlag;

@property(nonatomic, readwrite) BOOL hasWtloginRspBuffFlag;
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_AuthSectResp_ShowStyleKey *showStyle;
/** Test to see if @c showStyle has been set. */
@property(nonatomic, readwrite) BOOL hasShowStyle;

/** 需要短信授权时的ticket,用于后续请求验证码以及发送验证码 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *smsTicket;
/** Test to see if @c smsTicket has been set. */
@property(nonatomic, readwrite) BOOL hasSmsTicket;

@property(nonatomic, readwrite) int32_t authResultFlag;

@property(nonatomic, readwrite) BOOL hasAuthResultFlag;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fsurl;
/** Test to see if @c fsurl has been set. */
@property(nonatomic, readwrite) BOOL hasFsurl;

@property(nonatomic, readwrite) int32_t serverTime;

@property(nonatomic, readwrite) BOOL hasServerTime;
@end

#pragma mark - UnifyAuthResponse_AuthSectResp_ShowStyleKey

typedef GPB_ENUM(UnifyAuthResponse_AuthSectResp_ShowStyleKey_FieldNumber) {
  UnifyAuthResponse_AuthSectResp_ShowStyleKey_FieldNumber_KeyCount = 1,
};

@interface UnifyAuthResponse_AuthSectResp_ShowStyleKey : GPBMessage

@property(nonatomic, readwrite) int32_t keyCount;

@property(nonatomic, readwrite) BOOL hasKeyCount;
@end

#pragma mark - UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal

typedef GPB_ENUM(UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal_FieldNumber) {
  UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal_FieldNumber_Key = 1,
  UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal_FieldNumber_Val = 2,
};

@interface UnifyAuthResponse_AuthSectResp_ShowStyleKey_StyleKeyVal : GPBMessage

@property(nonatomic, readwrite) int32_t key;

@property(nonatomic, readwrite) BOOL hasKey;
@property(nonatomic, readwrite, copy, null_resettable) NSString *val;
/** Test to see if @c val has been set. */
@property(nonatomic, readwrite) BOOL hasVal;

@end

#pragma mark - UnifyAuthResponse_AcctSectResp

typedef GPB_ENUM(UnifyAuthResponse_AcctSectResp_FieldNumber) {
  UnifyAuthResponse_AcctSectResp_FieldNumber_UserName = 1,
  UnifyAuthResponse_AcctSectResp_FieldNumber_NickName = 2,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindUin = 3,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindMail = 4,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindMobile = 5,
  UnifyAuthResponse_AcctSectResp_FieldNumber_Alias = 6,
  UnifyAuthResponse_AcctSectResp_FieldNumber_BindEmail = 7,
  UnifyAuthResponse_AcctSectResp_FieldNumber_Status = 8,
  UnifyAuthResponse_AcctSectResp_FieldNumber_PluginFlag = 9,
  UnifyAuthResponse_AcctSectResp_FieldNumber_RegType = 10,
  UnifyAuthResponse_AcctSectResp_FieldNumber_DeviceInfoXml = 11,
  UnifyAuthResponse_AcctSectResp_FieldNumber_SafeDevice = 12,
  UnifyAuthResponse_AcctSectResp_FieldNumber_OfficialUserName = 13,
  UnifyAuthResponse_AcctSectResp_FieldNumber_OfficialNickName = 14,
  UnifyAuthResponse_AcctSectResp_FieldNumber_PushMailStatus = 15,
  UnifyAuthResponse_AcctSectResp_FieldNumber_FsURL = 16,
};

@interface UnifyAuthResponse_AcctSectResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) int32_t bindUin;

@property(nonatomic, readwrite) BOOL hasBindUin;
@property(nonatomic, readwrite, copy, null_resettable) NSString *bindMail;
/** Test to see if @c bindMail has been set. */
@property(nonatomic, readwrite) BOOL hasBindMail;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindMobile;
/** Test to see if @c bindMobile has been set. */
@property(nonatomic, readwrite) BOOL hasBindMobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bindEmail;
/** Test to see if @c bindEmail has been set. */
@property(nonatomic, readwrite) BOOL hasBindEmail;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) int32_t pluginFlag;

@property(nonatomic, readwrite) BOOL hasPluginFlag;
@property(nonatomic, readwrite) int32_t regType;

@property(nonatomic, readwrite) BOOL hasRegType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceInfoXml;
/** Test to see if @c deviceInfoXml has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceInfoXml;

@property(nonatomic, readwrite) int32_t safeDevice;

@property(nonatomic, readwrite) BOOL hasSafeDevice;
/** "weixin" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *officialUserName;
/** Test to see if @c officialUserName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialUserName;

/** "微信团队" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *officialNickName;
/** Test to see if @c officialNickName has been set. */
@property(nonatomic, readwrite) BOOL hasOfficialNickName;

@property(nonatomic, readwrite) int32_t pushMailStatus;

@property(nonatomic, readwrite) BOOL hasPushMailStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fsURL;
/** Test to see if @c fsURL has been set. */
@property(nonatomic, readwrite) BOOL hasFsURL;

@end

#pragma mark - UnifyAuthResponse_NetworkSectResp

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_FieldNumber_NewHostList = 1,
  UnifyAuthResponse_NetworkSectResp_FieldNumber_NetworkControl = 2,
  UnifyAuthResponse_NetworkSectResp_FieldNumber_BuiltinIplist = 3,
};

@interface UnifyAuthResponse_NetworkSectResp : GPBMessage

/** 域名重定向信息 */
@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_NetworkSectResp_HostList *newHostList NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newHostList has been set. */
@property(nonatomic, readwrite) BOOL hasNewHostList;

@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_NetworkSectResp_NetworkControl *networkControl;
/** Test to see if @c networkControl has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkControl;

@property(nonatomic, readwrite, strong, null_resettable) UnifyAuthResponse_NetworkSectResp_BuiltinIPList *builtinIplist;
/** Test to see if @c builtinIplist has been set. */
@property(nonatomic, readwrite) BOOL hasBuiltinIplist;

@end

#pragma mark - UnifyAuthResponse_NetworkSectResp_HostList

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_HostList_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_HostList_FieldNumber_Count = 1,
  UnifyAuthResponse_NetworkSectResp_HostList_FieldNumber_ListArray = 2,
};

@interface UnifyAuthResponse_NetworkSectResp_HostList : GPBMessage

/** host cnt */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UnifyAuthResponse_NetworkSectResp_HostList_Host*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - UnifyAuthResponse_NetworkSectResp_HostList_Host

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber_Origin = 1,
  UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber_Substitute = 2,
  UnifyAuthResponse_NetworkSectResp_HostList_Host_FieldNumber_Priority = 3,
};

@interface UnifyAuthResponse_NetworkSectResp_HostList_Host : GPBMessage

/** host */
@property(nonatomic, readwrite, copy, null_resettable) NSString *origin;
/** Test to see if @c origin has been set. */
@property(nonatomic, readwrite) BOOL hasOrigin;

/** redirect_host */
@property(nonatomic, readwrite, copy, null_resettable) NSString *substitute;
/** Test to see if @c substitute has been set. */
@property(nonatomic, readwrite) BOOL hasSubstitute;

@property(nonatomic, readwrite) int32_t priority;

@property(nonatomic, readwrite) BOOL hasPriority;
@end

#pragma mark - UnifyAuthResponse_NetworkSectResp_NetworkControl

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_NetworkControl_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_NetworkControl_FieldNumber_PortList = 1,
  UnifyAuthResponse_NetworkSectResp_NetworkControl_FieldNumber_TimeoutList = 2,
  UnifyAuthResponse_NetworkSectResp_NetworkControl_FieldNumber_MinNoopInterval = 3,
  UnifyAuthResponse_NetworkSectResp_NetworkControl_FieldNumber_MaxNoopInterval = 4,
  UnifyAuthResponse_NetworkSectResp_NetworkControl_FieldNumber_TypingInterval = 5,
  UnifyAuthResponse_NetworkSectResp_NetworkControl_FieldNumber_NoopIntervalTime = 7,
};

@interface UnifyAuthResponse_NetworkSectResp_NetworkControl : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portList;
/** Test to see if @c portList has been set. */
@property(nonatomic, readwrite) BOOL hasPortList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeoutList;
/** Test to see if @c timeoutList has been set. */
@property(nonatomic, readwrite) BOOL hasTimeoutList;

@property(nonatomic, readwrite) int32_t minNoopInterval;

@property(nonatomic, readwrite) BOOL hasMinNoopInterval;
@property(nonatomic, readwrite) int32_t maxNoopInterval;

@property(nonatomic, readwrite) BOOL hasMaxNoopInterval;
@property(nonatomic, readwrite) int32_t typingInterval;

@property(nonatomic, readwrite) BOOL hasTypingInterval;
@property(nonatomic, readwrite) int32_t noopIntervalTime;

@property(nonatomic, readwrite) BOOL hasNoopIntervalTime;
@end

#pragma mark - UnifyAuthResponse_NetworkSectResp_BuiltinIPList

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_BuiltinIPList_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_FieldNumber_LongConnectIpcount = 1,
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_FieldNumber_ShortConnectIpcount = 2,
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_FieldNumber_LongConnectIplistArray = 3,
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_FieldNumber_ShortConnectIplistArray = 4,
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_FieldNumber_Seq = 5,
};

@interface UnifyAuthResponse_NetworkSectResp_BuiltinIPList : GPBMessage

@property(nonatomic, readwrite) int32_t longConnectIpcount;

@property(nonatomic, readwrite) BOOL hasLongConnectIpcount;
@property(nonatomic, readwrite) int32_t shortConnectIpcount;

@property(nonatomic, readwrite) BOOL hasShortConnectIpcount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP*> *longConnectIplistArray;
/** The number of items in @c longConnectIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger longConnectIplistArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP*> *shortConnectIplistArray;
/** The number of items in @c shortConnectIplistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shortConnectIplistArray_Count;

@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite) BOOL hasSeq;
@end

#pragma mark - UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP

typedef GPB_ENUM(UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP_FieldNumber) {
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP_FieldNumber_Type = 1,
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP_FieldNumber_Port = 2,
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP_FieldNumber_Ip = 3,
  UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP_FieldNumber_Domain = 4,
};

@interface UnifyAuthResponse_NetworkSectResp_BuiltinIPList_BuiltinIP : GPBMessage

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) int32_t port;

@property(nonatomic, readwrite) BOOL hasPort;
@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;
/** Test to see if @c ip has been set. */
@property(nonatomic, readwrite) BOOL hasIp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *domain;
/** Test to see if @c domain has been set. */
@property(nonatomic, readwrite) BOOL hasDomain;

@end

#pragma mark - NewInitRequest

typedef GPB_ENUM(NewInitRequest_FieldNumber) {
  NewInitRequest_FieldNumber_BaseRequest = 1,
  NewInitRequest_FieldNumber_UserName = 2,
  NewInitRequest_FieldNumber_CurrentSynckey = 3,
  NewInitRequest_FieldNumber_MaxSynckey = 4,
  NewInitRequest_FieldNumber_Language = 5,
};

/**
 * 新设备第一次登录初始化请求
 **/
@interface NewInitRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

/** 首次初始化时sync_key_cur = '' */
@property(nonatomic, readwrite, copy, null_resettable) NSData *currentSynckey;
/** Test to see if @c currentSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentSynckey;

/** 首次初始化时sync_key_max = '' */
@property(nonatomic, readwrite, copy, null_resettable) NSData *maxSynckey;
/** Test to see if @c maxSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasMaxSynckey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@end

#pragma mark - Msg

typedef GPB_ENUM(Msg_FieldNumber) {
  Msg_FieldNumber_Serverid = 1,
  Msg_FieldNumber_FromId = 2,
  Msg_FieldNumber_ToId = 3,
  Msg_FieldNumber_Type = 4,
  Msg_FieldNumber_Raw = 5,
  Msg_FieldNumber_Status = 6,
  Msg_FieldNumber_Tag7 = 7,
  Msg_FieldNumber_Tag8 = 8,
  Msg_FieldNumber_CreateTime = 9,
  Msg_FieldNumber_ExInfo = 10,
  Msg_FieldNumber_XmlContent = 11,
  Msg_FieldNumber_SvrId = 12,
  Msg_FieldNumber_MsgKey = 13,
};

/**
 * 服务器返回消息(newinit/newsync)
 **/
@interface Msg : GPBMessage

@property(nonatomic, readwrite) int64_t serverid;

@property(nonatomic, readwrite) BOOL hasServerid;
/** 发送方wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *fromId;
/** Test to see if @c fromId has been set. */
@property(nonatomic, readwrite) BOOL hasFromId;

/** 接收方wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *toId;
/** Test to see if @c toId has been set. */
@property(nonatomic, readwrite) BOOL hasToId;

/** 消息类型:9999==>系统垃圾消息,10002==>sysmsg(系统垃圾消息),49==>appmsg,1==>文字消息,10000==>系统提示 */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
/** 原始消息内容,需要根据不同消息类型解析 */
@property(nonatomic, readwrite, strong, null_resettable) Msg_RawContent *raw;
/** Test to see if @c raw has been set. */
@property(nonatomic, readwrite) BOOL hasRaw;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) int32_t tag7;

@property(nonatomic, readwrite) BOOL hasTag7;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag8;
/** Test to see if @c tag8 has been set. */
@property(nonatomic, readwrite) BOOL hasTag8;

/** 消息发送时间 */
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
/** 消息附加内容(群是否屏蔽,群人数,群at功能) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *exInfo;
/** Test to see if @c exInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExInfo;

/** 推送内容(xml格式) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *xmlContent;
/** Test to see if @c xmlContent has been set. */
@property(nonatomic, readwrite) BOOL hasXmlContent;

/** 每条消息的唯一id */
@property(nonatomic, readwrite) int64_t svrId;

@property(nonatomic, readwrite) BOOL hasSvrId;
/** sync key中的id */
@property(nonatomic, readwrite) int32_t msgKey;

@property(nonatomic, readwrite) BOOL hasMsgKey;
@end

#pragma mark - Msg_RawContent

typedef GPB_ENUM(Msg_RawContent_FieldNumber) {
  Msg_RawContent_FieldNumber_Content = 1,
};

@interface Msg_RawContent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

@end

#pragma mark - contact_info

typedef GPB_ENUM(contact_info_FieldNumber) {
  contact_info_FieldNumber_Wxid = 1,
  contact_info_FieldNumber_Nickname = 2,
  contact_info_FieldNumber_ShortPy = 3,
  contact_info_FieldNumber_Quanpin = 4,
  contact_info_FieldNumber_Sex = 5,
  contact_info_FieldNumber_Tag6 = 6,
  contact_info_FieldNumber_Tag7 = 7,
  contact_info_FieldNumber_Type = 8,
  contact_info_FieldNumber_Tag9 = 9,
  contact_info_FieldNumber_RemarkName = 10,
  contact_info_FieldNumber_RealShortPy = 11,
  contact_info_FieldNumber_RealQuanpin = 12,
  contact_info_FieldNumber_Tag13 = 13,
  contact_info_FieldNumber_Tag14 = 14,
  contact_info_FieldNumber_Tag16 = 16,
  contact_info_FieldNumber_BChatRoom = 17,
  contact_info_FieldNumber_Tag18 = 18,
  contact_info_FieldNumber_Sheng = 19,
  contact_info_FieldNumber_Shi = 20,
  contact_info_FieldNumber_Qianming = 21,
  contact_info_FieldNumber_Tag22 = 22,
  contact_info_FieldNumber_Tag23 = 23,
  contact_info_FieldNumber_RegisterBodyType = 24,
  contact_info_FieldNumber_RegisterBody = 25,
  contact_info_FieldNumber_Tag26 = 26,
  contact_info_FieldNumber_Src = 27,
  contact_info_FieldNumber_LastMsgTime = 29,
  contact_info_FieldNumber_Alias = 30,
  contact_info_FieldNumber_ChatroomOwnerWxid = 31,
  contact_info_FieldNumber_Tag33 = 33,
  contact_info_FieldNumber_Tag34 = 34,
  contact_info_FieldNumber_Tag35 = 35,
  contact_info_FieldNumber_Tag37 = 37,
  contact_info_FieldNumber_Country = 38,
  contact_info_FieldNumber_AvatarBig = 39,
  contact_info_FieldNumber_AvatarSmall = 40,
  contact_info_FieldNumber_Tag42 = 42,
  contact_info_FieldNumber_V1Name = 45,
  contact_info_FieldNumber_Tag50 = 50,
  contact_info_FieldNumber_ChatroomServerVer = 53,
  contact_info_FieldNumber_ChatroomMaxMember = 55,
  contact_info_FieldNumber_Tag56 = 56,
  contact_info_FieldNumber_GroupMemberList = 57,
  contact_info_FieldNumber_Tag58 = 58,
  contact_info_FieldNumber_Tag62 = 62,
  contact_info_FieldNumber_Tag64 = 64,
  contact_info_FieldNumber_Tag65 = 65,
  contact_info_FieldNumber_Tag66 = 66,
  contact_info_FieldNumber_Tag67 = 67,
};

/**
 * 好友详细信息
 **/
@interface contact_info : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *wxid;
/** Test to see if @c wxid has been set. */
@property(nonatomic, readwrite) BOOL hasWxid;

@property(nonatomic, readwrite, strong, null_resettable) contact_info_NickName *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

@property(nonatomic, readwrite, strong, null_resettable) contact_info_PY_SHORT *shortPy;
/** Test to see if @c shortPy has been set. */
@property(nonatomic, readwrite) BOOL hasShortPy;

@property(nonatomic, readwrite, strong, null_resettable) contact_info_QuanPin *quanpin;
/** Test to see if @c quanpin has been set. */
@property(nonatomic, readwrite) BOOL hasQuanpin;

/** 性别：0=>未知,1=>男,2=>女 */
@property(nonatomic, readwrite) int32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, copy, null_resettable) NSString *tag6;
/** Test to see if @c tag6 has been set. */
@property(nonatomic, readwrite) BOOL hasTag6;

@property(nonatomic, readwrite) int32_t tag7;

@property(nonatomic, readwrite) BOOL hasTag7;
/** 好友状态: */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) int32_t tag9;

@property(nonatomic, readwrite) BOOL hasTag9;
/** 备注名:为空则显示nickname */
@property(nonatomic, readwrite, strong, null_resettable) contact_info_BeiZhu *remarkName;
/** Test to see if @c remarkName has been set. */
@property(nonatomic, readwrite) BOOL hasRemarkName;

@property(nonatomic, readwrite, strong, null_resettable) contact_info_REAL_PY_SHORT *realShortPy;
/** Test to see if @c realShortPy has been set. */
@property(nonatomic, readwrite) BOOL hasRealShortPy;

@property(nonatomic, readwrite, strong, null_resettable) contact_info_REAL_QuanPin *realQuanpin;
/** Test to see if @c realQuanpin has been set. */
@property(nonatomic, readwrite) BOOL hasRealQuanpin;

@property(nonatomic, readwrite) int32_t tag13;

@property(nonatomic, readwrite) BOOL hasTag13;
@property(nonatomic, readwrite) int32_t tag14;

@property(nonatomic, readwrite) BOOL hasTag14;
@property(nonatomic, readwrite, copy, null_resettable) NSString *tag16;
/** Test to see if @c tag16 has been set. */
@property(nonatomic, readwrite) BOOL hasTag16;

/** todo */
@property(nonatomic, readwrite) int32_t bChatRoom;

@property(nonatomic, readwrite) BOOL hasBChatRoom;
@property(nonatomic, readwrite) int32_t tag18;

@property(nonatomic, readwrite) BOOL hasTag18;
@property(nonatomic, readwrite, copy, null_resettable) NSString *sheng;
/** Test to see if @c sheng has been set. */
@property(nonatomic, readwrite) BOOL hasSheng;

@property(nonatomic, readwrite, copy, null_resettable) NSString *shi;
/** Test to see if @c shi has been set. */
@property(nonatomic, readwrite) BOOL hasShi;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qianming;
/** Test to see if @c qianming has been set. */
@property(nonatomic, readwrite) BOOL hasQianming;

/** todo */
@property(nonatomic, readwrite) int32_t tag22;

@property(nonatomic, readwrite) BOOL hasTag22;
/** todo */
@property(nonatomic, readwrite) int32_t tag23;

@property(nonatomic, readwrite) BOOL hasTag23;
/** 8=>个人;24=>公司 */
@property(nonatomic, readwrite) int32_t registerBodyType;

@property(nonatomic, readwrite) BOOL hasRegisterBodyType;
/** 注册主体:xx公司或个人 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *registerBody;
/** Test to see if @c registerBody has been set. */
@property(nonatomic, readwrite) BOOL hasRegisterBody;

@property(nonatomic, readwrite) int32_t tag26;

@property(nonatomic, readwrite) BOOL hasTag26;
/** 好友来源:(10000XX为对方添加自己)0=>未知;1=>QQ;3=>微信号;6=>名片;13=>手机通讯录;14=>群聊;15=>手机号;30=>扫一扫  （1000015=>对方手机号;1000030=>对方扫一扫;1000014=>对方群聊......） */
@property(nonatomic, readwrite) int32_t src;

@property(nonatomic, readwrite) BOOL hasSrc;
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastMsgTime;
/** Test to see if @c lastMsgTime has been set. */
@property(nonatomic, readwrite) BOOL hasLastMsgTime;

/** 微信号(未设置则显示wxid) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;
/** Test to see if @c alias has been set. */
@property(nonatomic, readwrite) BOOL hasAlias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *chatroomOwnerWxid;
/** Test to see if @c chatroomOwnerWxid has been set. */
@property(nonatomic, readwrite) BOOL hasChatroomOwnerWxid;

@property(nonatomic, readwrite) int32_t tag33;

@property(nonatomic, readwrite) BOOL hasTag33;
@property(nonatomic, readwrite) int32_t tag34;

@property(nonatomic, readwrite) BOOL hasTag34;
@property(nonatomic, readwrite) int32_t tag35;

@property(nonatomic, readwrite) BOOL hasTag35;
/** 个人相册封面图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag37;
/** Test to see if @c tag37 has been set. */
@property(nonatomic, readwrite) BOOL hasTag37;

@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatarBig;
/** Test to see if @c avatarBig has been set. */
@property(nonatomic, readwrite) BOOL hasAvatarBig;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatarSmall;
/** Test to see if @c avatarSmall has been set. */
@property(nonatomic, readwrite) BOOL hasAvatarSmall;

@property(nonatomic, readwrite, copy, null_resettable) NSData *tag42;
/** Test to see if @c tag42 has been set. */
@property(nonatomic, readwrite) BOOL hasTag42;

/** encryptName(等价于wxid,固定不变) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *v1Name;
/** Test to see if @c v1Name has been set. */
@property(nonatomic, readwrite) BOOL hasV1Name;

@property(nonatomic, readwrite, copy, null_resettable) NSData *tag50;
/** Test to see if @c tag50 has been set. */
@property(nonatomic, readwrite) BOOL hasTag50;

@property(nonatomic, readwrite) int32_t chatroomServerVer;

@property(nonatomic, readwrite) BOOL hasChatroomServerVer;
@property(nonatomic, readwrite) int32_t chatroomMaxMember;

@property(nonatomic, readwrite) BOOL hasChatroomMaxMember;
@property(nonatomic, readwrite) int32_t tag56;

@property(nonatomic, readwrite) BOOL hasTag56;
@property(nonatomic, readwrite, strong, null_resettable) contact_info_GroupMemberList *groupMemberList;
/** Test to see if @c groupMemberList has been set. */
@property(nonatomic, readwrite) BOOL hasGroupMemberList;

@property(nonatomic, readwrite) int32_t tag58;

@property(nonatomic, readwrite) BOOL hasTag58;
@property(nonatomic, readwrite, copy, null_resettable) NSData *tag62;
/** Test to see if @c tag62 has been set. */
@property(nonatomic, readwrite) BOOL hasTag62;

@property(nonatomic, readwrite) int32_t tag64;

@property(nonatomic, readwrite) BOOL hasTag64;
@property(nonatomic, readwrite) int32_t tag65;

@property(nonatomic, readwrite) BOOL hasTag65;
@property(nonatomic, readwrite) int32_t tag66;

@property(nonatomic, readwrite) BOOL hasTag66;
@property(nonatomic, readwrite) int32_t tag67;

@property(nonatomic, readwrite) BOOL hasTag67;
@end

#pragma mark - contact_info_NickName

typedef GPB_ENUM(contact_info_NickName_FieldNumber) {
  contact_info_NickName_FieldNumber_Name = 1,
};

@interface contact_info_NickName : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - contact_info_PY_SHORT

typedef GPB_ENUM(contact_info_PY_SHORT_FieldNumber) {
  contact_info_PY_SHORT_FieldNumber_Name = 1,
};

@interface contact_info_PY_SHORT : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - contact_info_QuanPin

typedef GPB_ENUM(contact_info_QuanPin_FieldNumber) {
  contact_info_QuanPin_FieldNumber_Name = 1,
};

@interface contact_info_QuanPin : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - contact_info_BeiZhu

typedef GPB_ENUM(contact_info_BeiZhu_FieldNumber) {
  contact_info_BeiZhu_FieldNumber_Name = 1,
};

@interface contact_info_BeiZhu : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - contact_info_REAL_PY_SHORT

typedef GPB_ENUM(contact_info_REAL_PY_SHORT_FieldNumber) {
  contact_info_REAL_PY_SHORT_FieldNumber_Name = 1,
};

@interface contact_info_REAL_PY_SHORT : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - contact_info_REAL_QuanPin

typedef GPB_ENUM(contact_info_REAL_QuanPin_FieldNumber) {
  contact_info_REAL_QuanPin_FieldNumber_Name = 1,
};

@interface contact_info_REAL_QuanPin : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - contact_info_GroupMemberList

typedef GPB_ENUM(contact_info_GroupMemberList_FieldNumber) {
  contact_info_GroupMemberList_FieldNumber_Cnt = 1,
  contact_info_GroupMemberList_FieldNumber_MemberArray = 2,
  contact_info_GroupMemberList_FieldNumber_Tag3 = 3,
  contact_info_GroupMemberList_FieldNumber_Tag4 = 4,
};

@interface contact_info_GroupMemberList : GPBMessage

@property(nonatomic, readwrite) int32_t cnt;

@property(nonatomic, readwrite) BOOL hasCnt;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<contact_info_GroupMemberList_MemberInfo*> *memberArray;
/** The number of items in @c memberArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger memberArray_Count;

@property(nonatomic, readwrite) int32_t tag3;

@property(nonatomic, readwrite) BOOL hasTag3;
@property(nonatomic, readwrite, copy, null_resettable) NSString *tag4;
/** Test to see if @c tag4 has been set. */
@property(nonatomic, readwrite) BOOL hasTag4;

@end

#pragma mark - contact_info_GroupMemberList_MemberInfo

typedef GPB_ENUM(contact_info_GroupMemberList_MemberInfo_FieldNumber) {
  contact_info_GroupMemberList_MemberInfo_FieldNumber_Wxid = 1,
  contact_info_GroupMemberList_MemberInfo_FieldNumber_NickName = 2,
  contact_info_GroupMemberList_MemberInfo_FieldNumber_Tag6 = 6,
  contact_info_GroupMemberList_MemberInfo_FieldNumber_InviteerWxid = 7,
  contact_info_GroupMemberList_MemberInfo_FieldNumber_Tag8 = 8,
};

@interface contact_info_GroupMemberList_MemberInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *wxid;
/** Test to see if @c wxid has been set. */
@property(nonatomic, readwrite) BOOL hasWxid;

/** 昵称(非群昵称) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) int32_t tag6;

@property(nonatomic, readwrite) BOOL hasTag6;
/** 邀请入群wxid */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteerWxid;
/** Test to see if @c inviteerWxid has been set. */
@property(nonatomic, readwrite) BOOL hasInviteerWxid;

@property(nonatomic, readwrite) int32_t tag8;

@property(nonatomic, readwrite) BOOL hasTag8;
@end

#pragma mark - CmdItem

typedef GPB_ENUM(CmdItem_FieldNumber) {
  CmdItem_FieldNumber_CmdId = 1,
  CmdItem_FieldNumber_CmdBuf = 2,
};

/**
 * 同步消息
 **/
@interface CmdItem : GPBMessage

/** 消息类型:1==>个人信息,2==>好友信息,5==>服务器上未读取的最新消息,其余消息类型暂未知 */
@property(nonatomic, readwrite) int32_t cmdId;

@property(nonatomic, readwrite) BOOL hasCmdId;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *cmdBuf;
/** Test to see if @c cmdBuf has been set. */
@property(nonatomic, readwrite) BOOL hasCmdBuf;

@end

#pragma mark - NewInitResponse

typedef GPB_ENUM(NewInitResponse_FieldNumber) {
  NewInitResponse_FieldNumber_BaseResponse = 1,
  NewInitResponse_FieldNumber_CurrentSynckey = 2,
  NewInitResponse_FieldNumber_MaxSynckey = 3,
  NewInitResponse_FieldNumber_ContinueFlag = 4,
  NewInitResponse_FieldNumber_Count = 6,
  NewInitResponse_FieldNumber_ListArray = 7,
};

/**
 * 新设备第一次登录初始化服务器响应
 **/
@interface NewInitResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

/** 当前synckey二进制数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *currentSynckey;
/** Test to see if @c currentSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentSynckey;

/** 最新synckey二进制数据(若与sync_key_cur不相同,则continue_flag返回1,表示需要继续初始化) */
@property(nonatomic, readwrite, copy, null_resettable) NSData *maxSynckey;
/** Test to see if @c maxSynckey has been set. */
@property(nonatomic, readwrite) BOOL hasMaxSynckey;

/** 为1时表示仍要继续调用newinit初始化,直到该标志位返回0停止初始化(联系人或未读消息数据太多,无法一次获取完毕) */
@property(nonatomic, readwrite) int32_t continueFlag;

@property(nonatomic, readwrite) BOOL hasContinueFlag;
/** tag7结构体数量 */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 需要根据消息类型解析 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CmdItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - NewSyncRequest

typedef GPB_ENUM(NewSyncRequest_FieldNumber) {
  NewSyncRequest_FieldNumber_Oplog = 1,
  NewSyncRequest_FieldNumber_Selector = 2,
  NewSyncRequest_FieldNumber_KeyBuf = 3,
  NewSyncRequest_FieldNumber_Scene = 4,
  NewSyncRequest_FieldNumber_DeviceType = 5,
  NewSyncRequest_FieldNumber_SyncMsgDigest = 6,
};

/**
 * 同步消息
 **/
@interface NewSyncRequest : GPBMessage

/** unknown,must be 0 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *oplog;
/** Test to see if @c oplog has been set. */
@property(nonatomic, readwrite) BOOL hasOplog;

/** unknown,just set 7 */
@property(nonatomic, readwrite) int32_t selector;

@property(nonatomic, readwrite) BOOL hasSelector;
/** 同步成功后服务器返回的消息id */
@property(nonatomic, readwrite, copy, null_resettable) NSData *keyBuf;
/** Test to see if @c keyBuf has been set. */
@property(nonatomic, readwrite) BOOL hasKeyBuf;

/** unkown,just set 3 */
@property(nonatomic, readwrite) int32_t scene;

@property(nonatomic, readwrite) BOOL hasScene;
/** android-22 iOS11.3.1 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;
/** Test to see if @c deviceType has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceType;

/** unknown,just set 1 */
@property(nonatomic, readwrite) int32_t syncMsgDigest;

@property(nonatomic, readwrite) BOOL hasSyncMsgDigest;
@end

#pragma mark - NewSyncResponse

typedef GPB_ENUM(NewSyncResponse_FieldNumber) {
  NewSyncResponse_FieldNumber_Ret = 1,
  NewSyncResponse_FieldNumber_CmdList = 2,
  NewSyncResponse_FieldNumber_ContinueFlag = 3,
  NewSyncResponse_FieldNumber_KeyBuf = 4,
  NewSyncResponse_FieldNumber_Status = 5,
  NewSyncResponse_FieldNumber_OnlineVersion = 6,
  NewSyncResponse_FieldNumber_SvrTime = 7,
};

/**
 * 同步消息响应
 **/
@interface NewSyncResponse : GPBMessage

@property(nonatomic, readwrite) int32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
/** 未读消息 */
@property(nonatomic, readwrite, strong, null_resettable) NewSyncResponse_CmdList *cmdList;
/** Test to see if @c cmdList has been set. */
@property(nonatomic, readwrite) BOOL hasCmdList;

@property(nonatomic, readwrite) int32_t continueFlag;

@property(nonatomic, readwrite) BOOL hasContinueFlag;
/** 服务器返回的sync key */
@property(nonatomic, readwrite, copy, null_resettable) NSData *keyBuf;
/** Test to see if @c keyBuf has been set. */
@property(nonatomic, readwrite) BOOL hasKeyBuf;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) int32_t onlineVersion;

@property(nonatomic, readwrite) BOOL hasOnlineVersion;
@property(nonatomic, readwrite) int32_t svrTime;

@property(nonatomic, readwrite) BOOL hasSvrTime;
@end

#pragma mark - NewSyncResponse_CmdList

typedef GPB_ENUM(NewSyncResponse_CmdList_FieldNumber) {
  NewSyncResponse_CmdList_FieldNumber_Count = 1,
  NewSyncResponse_CmdList_FieldNumber_ListArray = 2,
};

@interface NewSyncResponse_CmdList : GPBMessage

/** tag2结构体数量 */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 需要根据消息类型解析 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CmdItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - MicroMsgRequestNew

typedef GPB_ENUM(MicroMsgRequestNew_FieldNumber) {
  MicroMsgRequestNew_FieldNumber_ToUserName = 1,
  MicroMsgRequestNew_FieldNumber_Content = 2,
  MicroMsgRequestNew_FieldNumber_Type = 3,
  MicroMsgRequestNew_FieldNumber_CreateTime = 4,
  MicroMsgRequestNew_FieldNumber_ClientMsgId = 5,
  MicroMsgRequestNew_FieldNumber_MsgSource = 6,
};

@interface MicroMsgRequestNew : GPBMessage

/** to wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *toUserName;
/** Test to see if @c toUserName has been set. */
@property(nonatomic, readwrite) BOOL hasToUserName;

/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

/** 消息类型: 文字消息=>1,名片=>42， */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
/** 1537268848 */
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
/** 不同消息的utc与client_id必须至少有1个不相同 4287068409, iMac 从1开始？ */
@property(nonatomic, readwrite) int64_t clientMsgId;

@property(nonatomic, readwrite) BOOL hasClientMsgId;
/** 群聊at功能 iMac: "<msgsource></msgsource>" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgSource;
/** Test to see if @c msgSource has been set. */
@property(nonatomic, readwrite) BOOL hasMsgSource;

@end

#pragma mark - SendMsgRequestNew

typedef GPB_ENUM(SendMsgRequestNew_FieldNumber) {
  SendMsgRequestNew_FieldNumber_Count = 1,
  SendMsgRequestNew_FieldNumber_ListArray = 2,
};

/**
 * 发送消息请求
 **/
@interface SendMsgRequestNew : GPBMessage

/** 本次发送的消息数量 */
@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 这里可以是repeated,允许一次发送多条消息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MicroMsgRequestNew*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - MicroMsgResponseNew

typedef GPB_ENUM(MicroMsgResponseNew_FieldNumber) {
  MicroMsgResponseNew_FieldNumber_Ret = 1,
  MicroMsgResponseNew_FieldNumber_ToUserName = 2,
  MicroMsgResponseNew_FieldNumber_MsgId = 3,
  MicroMsgResponseNew_FieldNumber_ClientMsgId = 4,
  MicroMsgResponseNew_FieldNumber_CreateTime = 5,
  MicroMsgResponseNew_FieldNumber_ServerTime = 6,
  MicroMsgResponseNew_FieldNumber_Type = 7,
  MicroMsgResponseNew_FieldNumber_NewMsgId = 8,
};

@interface MicroMsgResponseNew : GPBMessage

/** 错误码 0=>发送成功,-44=>对方开启了朋友验证(被删好友),-22=>消息已发出,但被对方拒收了(被拉黑) */
@property(nonatomic, readwrite) int32_t ret;

@property(nonatomic, readwrite) BOOL hasRet;
/** to wxid */
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *toUserName;
/** Test to see if @c toUserName has been set. */
@property(nonatomic, readwrite) BOOL hasToUserName;

@property(nonatomic, readwrite) int32_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
@property(nonatomic, readwrite) int32_t clientMsgId;

@property(nonatomic, readwrite) BOOL hasClientMsgId;
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
@property(nonatomic, readwrite) int32_t serverTime;

@property(nonatomic, readwrite) BOOL hasServerTime;
/** 消息类型 */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
/** 消息唯一id */
@property(nonatomic, readwrite) int64_t newMsgId;

@property(nonatomic, readwrite) BOOL hasNewMsgId;
@end

#pragma mark - SendMsgResponseNew

typedef GPB_ENUM(SendMsgResponseNew_FieldNumber) {
  SendMsgResponseNew_FieldNumber_BaseResponse = 1,
  SendMsgResponseNew_FieldNumber_Count = 2,
  SendMsgResponseNew_FieldNumber_ListArray = 3,
};

/**
 * 发送消息响应
 **/
@interface SendMsgResponseNew : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 发送结 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MicroMsgResponseNew*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - CheckResUpdateRequest

typedef GPB_ENUM(CheckResUpdateRequest_FieldNumber) {
  CheckResUpdateRequest_FieldNumber_ResIdArray = 1,
};

@interface CheckResUpdateRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CheckResUpdateRequest_ResID*> *resIdArray;
/** The number of items in @c resIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resIdArray_Count;

@end

#pragma mark - CheckResUpdateRequest_ResID

typedef GPB_ENUM(CheckResUpdateRequest_ResID_FieldNumber) {
  CheckResUpdateRequest_ResID_FieldNumber_Type = 1,
  CheckResUpdateRequest_ResID_FieldNumber_SubTypeVectorArray = 2,
};

@interface CheckResUpdateRequest_ResID : GPBMessage

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CheckResUpdateRequest_ResID_SubTypeVector*> *subTypeVectorArray;
/** The number of items in @c subTypeVectorArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger subTypeVectorArray_Count;

@end

#pragma mark - CheckResUpdateRequest_ResID_SubTypeVector

typedef GPB_ENUM(CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber) {
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_SubType = 1,
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_KeyVersion = 2,
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_ResVersion = 3,
  CheckResUpdateRequest_ResID_SubTypeVector_FieldNumber_Eid = 4,
};

@interface CheckResUpdateRequest_ResID_SubTypeVector : GPBMessage

@property(nonatomic, readwrite) int32_t subType;

@property(nonatomic, readwrite) BOOL hasSubType;
@property(nonatomic, readwrite) int32_t keyVersion;

@property(nonatomic, readwrite) BOOL hasKeyVersion;
@property(nonatomic, readwrite) int32_t resVersion;

@property(nonatomic, readwrite) BOOL hasResVersion;
@property(nonatomic, readwrite) int32_t eid;

@property(nonatomic, readwrite) BOOL hasEid;
@end

#pragma mark - SnsObject

typedef GPB_ENUM(SnsObject_FieldNumber) {
  SnsObject_FieldNumber_Id_p = 1,
  SnsObject_FieldNumber_Username = 2,
  SnsObject_FieldNumber_Nickname = 3,
  SnsObject_FieldNumber_CreateTime = 4,
  SnsObject_FieldNumber_ObjectDesc = 5,
  SnsObject_FieldNumber_ExtFlag = 16,
  SnsObject_FieldNumber_ObjectOperations = 28,
};

@interface SnsObject : GPBMessage

/** 12944632620798980176 */
@property(nonatomic, readwrite) uint64_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
/** wxid_19py48yw39qw22 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *username;
/** Test to see if @c username has been set. */
@property(nonatomic, readwrite) BOOL hasUsername;

/** xiaohao */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

/** 1543120458 */
@property(nonatomic, readwrite) int32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *objectDesc;
/** Test to see if @c objectDesc has been set. */
@property(nonatomic, readwrite) BOOL hasObjectDesc;

@property(nonatomic, readwrite) int32_t extFlag;

@property(nonatomic, readwrite) BOOL hasExtFlag;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinString_t *objectOperations;
/** Test to see if @c objectOperations has been set. */
@property(nonatomic, readwrite) BOOL hasObjectOperations;

@end

#pragma mark - SnsTimeLineRequest

typedef GPB_ENUM(SnsTimeLineRequest_FieldNumber) {
  SnsTimeLineRequest_FieldNumber_BaseRequest = 1,
  SnsTimeLineRequest_FieldNumber_FirstPageMd5 = 2,
  SnsTimeLineRequest_FieldNumber_MinFilterId = 3,
  SnsTimeLineRequest_FieldNumber_MaxId = 4,
  SnsTimeLineRequest_FieldNumber_LastRequestTime = 5,
  SnsTimeLineRequest_FieldNumber_ClientLatestId = 6,
  SnsTimeLineRequest_FieldNumber_Session = 7,
  SnsTimeLineRequest_FieldNumber_NetworkType = 8,
  SnsTimeLineRequest_FieldNumber_Adexpinfo = 10,
};

@interface SnsTimeLineRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseRequest *baseRequest;
/** Test to see if @c baseRequest has been set. */
@property(nonatomic, readwrite) BOOL hasBaseRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *firstPageMd5;
/** Test to see if @c firstPageMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasFirstPageMd5;

@property(nonatomic, readwrite) int32_t minFilterId;

@property(nonatomic, readwrite) BOOL hasMinFilterId;
@property(nonatomic, readwrite) int32_t maxId;

@property(nonatomic, readwrite) BOOL hasMaxId;
@property(nonatomic, readwrite) int32_t lastRequestTime;

@property(nonatomic, readwrite) BOOL hasLastRequestTime;
@property(nonatomic, readwrite) int64_t clientLatestId;

@property(nonatomic, readwrite) BOOL hasClientLatestId;
@property(nonatomic, readwrite, strong, null_resettable) SKBuiltinBuffer_t *session;
/** Test to see if @c session has been set. */
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite) int32_t networkType;

@property(nonatomic, readwrite) BOOL hasNetworkType;
/** "" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adexpinfo;
/** Test to see if @c adexpinfo has been set. */
@property(nonatomic, readwrite) BOOL hasAdexpinfo;

@end

#pragma mark - SnsTimeLineResponse

typedef GPB_ENUM(SnsTimeLineResponse_FieldNumber) {
  SnsTimeLineResponse_FieldNumber_BaseResponse = 1,
  SnsTimeLineResponse_FieldNumber_FirstPageMd5 = 2,
  SnsTimeLineResponse_FieldNumber_ObjectCount = 3,
  SnsTimeLineResponse_FieldNumber_ObjectListArray = 4,
  SnsTimeLineResponse_FieldNumber_NewRequestTime = 5,
  SnsTimeLineResponse_FieldNumber_ObjectCountForSameMd5 = 6,
  SnsTimeLineResponse_FieldNumber_ControlFlag = 7,
  SnsTimeLineResponse_FieldNumber_ServerConfig = 8,
  SnsTimeLineResponse_FieldNumber_RecCount = 9,
  SnsTimeLineResponse_FieldNumber_Session = 11,
};

@interface SnsTimeLineResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseResponse *baseResponse;
/** Test to see if @c baseResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBaseResponse;

@property(nonatomic, readwrite, copy, null_resettable) NSString *firstPageMd5;
/** Test to see if @c firstPageMd5 has been set. */
@property(nonatomic, readwrite) BOOL hasFirstPageMd5;

@property(nonatomic, readwrite) int32_t objectCount;

@property(nonatomic, readwrite) BOOL hasObjectCount;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SnsObject*> *objectListArray;
/** The number of items in @c objectListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger objectListArray_Count;

@property(nonatomic, readwrite) int32_t newRequestTime;

@property(nonatomic, readwrite) BOOL hasNewRequestTime;
@property(nonatomic, readwrite) int32_t objectCountForSameMd5;

@property(nonatomic, readwrite) BOOL hasObjectCountForSameMd5;
@property(nonatomic, readwrite) int32_t controlFlag;

@property(nonatomic, readwrite) BOOL hasControlFlag;
@property(nonatomic, readwrite, strong, null_resettable) SnsTimeLineResponse_SnsServerConfig *serverConfig;
/** Test to see if @c serverConfig has been set. */
@property(nonatomic, readwrite) BOOL hasServerConfig;

@property(nonatomic, readwrite) int32_t recCount;

@property(nonatomic, readwrite) BOOL hasRecCount;
/** repeated recList                      = 10; */
@property(nonatomic, readwrite, copy, null_resettable) NSData *session;
/** Test to see if @c session has been set. */
@property(nonatomic, readwrite) BOOL hasSession;

@end

#pragma mark - SnsTimeLineResponse_SnsServerConfig

typedef GPB_ENUM(SnsTimeLineResponse_SnsServerConfig_FieldNumber) {
  SnsTimeLineResponse_SnsServerConfig_FieldNumber_PostMentionLimit = 1,
  SnsTimeLineResponse_SnsServerConfig_FieldNumber_CopyAndPasteWordLimit = 2,
};

@interface SnsTimeLineResponse_SnsServerConfig : GPBMessage

@property(nonatomic, readwrite) int32_t postMentionLimit;

@property(nonatomic, readwrite) BOOL hasPostMentionLimit;
@property(nonatomic, readwrite) int32_t copyAndPasteWordLimit;

@property(nonatomic, readwrite) BOOL hasCopyAndPasteWordLimit;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
